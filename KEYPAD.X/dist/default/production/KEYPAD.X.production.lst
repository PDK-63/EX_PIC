

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Dec 18 15:52:35 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0007                     _PORTCbits	set	7
   171     0006                     _PORTBbits	set	6
   172     0006                     _PORTB	set	6
   173     0087                     _TRISC	set	135
   174     0086                     _TRISB	set	134
   175                           
   176                           	psect	strings
   177     0003                     __pstrings:
   178     0003                     stringtab:
   179     0003                     __stringtab:
   180     0003                     stringcode:	
   181                           ;	String table - string pointers are 1 byte each
   182                           
   183     0003                     stringdir:
   184     0003  3000               	movlw	high stringdir
   185     0004  008A               	movwf	10
   186     0005  0804               	movf	4,w
   187     0006  0A84               	incf	4,f
   188     0007  0782               	addwf	2,f
   189     0008                     __stringbase:
   190     0008  3400               	retlw	0
   191     0009                     __end_of__stringtab:
   192     0009                     STR_1:
   193     0009  344B               	retlw	75	;'K'
   194     000A  3445               	retlw	69	;'E'
   195     000B  3459               	retlw	89	;'Y'
   196     000C  3450               	retlw	80	;'P'
   197     000D  3441               	retlw	65	;'A'
   198     000E  3444               	retlw	68	;'D'
   199     000F  343A               	retlw	58	;':'
   200     0010  3420               	retlw	32	;' '
   201     0011  3400               	retlw	0
   202                           
   203                           	psect	cinit
   204     07FC                     start_initialization:	
   205                           ; #config settings
   206                           
   207     07FC                     __initialization:
   208     07FC                     end_of_initialization:	
   209                           ;End of C runtime variable initialization code
   210                           
   211     07FC                     __end_of__initialization:
   212     07FC  0183               	clrf	3
   213     07FD  120A  118A  2E60   	ljmp	_main	;jump to C main() function
   214                           
   215                           	psect	cstackCOMMON
   216     0070                     __pcstackCOMMON:
   217     0070                     ?_LCD_Cmd:
   218     0070                     ??_LCD_Cmd:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     ?_LCD_Data:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ??_LCD_Data:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ?_LCD_Init:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_Keypad:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ?_main:	
   234                           ; 1 bytes @ 0x0
   235                           
   236                           
   237                           ; 1 bytes @ 0x0
   238     0070                     	ds	2
   239     0072                     LCD_Cmd@data:
   240     0072                     LCD_Data@data:	
   241                           ; 1 bytes @ 0x2
   242                           
   243                           
   244                           ; 1 bytes @ 0x2
   245     0072                     	ds	1
   246     0073                     ??_LCD_Init:
   247     0073                     ?_LCD_String:	
   248                           ; 1 bytes @ 0x3
   249                           
   250     0073                     ??_Keypad:	
   251                           ; 1 bytes @ 0x3
   252                           
   253     0073                     LCD_String@num:	
   254                           ; 1 bytes @ 0x3
   255                           
   256                           
   257                           ; 1 bytes @ 0x3
   258     0073                     	ds	1
   259     0074                     ??_LCD_String:
   260     0074                     LCD_String@str:	
   261                           ; 1 bytes @ 0x4
   262                           
   263                           
   264                           ; 1 bytes @ 0x4
   265     0074                     	ds	1
   266     0075                     LCD_String@i:
   267                           
   268                           ; 1 bytes @ 0x5
   269     0075                     	ds	1
   270     0076                     ??_main:
   271                           
   272                           	psect	maintext
   273     0660                     __pmaintext:	
   274                           ; 1 bytes @ 0x6
   275 ;;
   276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   277 ;;
   278 ;; *************** function _main *****************
   279 ;; Defined at:
   280 ;;		line 156 in file "main.c"
   281 ;; Parameters:    Size  Location     Type
   282 ;;		None
   283 ;; Auto vars:     Size  Location     Type
   284 ;;		None
   285 ;; Return value:  Size  Location     Type
   286 ;;                  1    wreg      void 
   287 ;; Registers used:
   288 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   289 ;; Tracked objects:
   290 ;;		On entry : B00/0
   291 ;;		On exit  : 0/0
   292 ;;		Unchanged: 0/0
   293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   294 ;;      Params:         0       0       0       0       0
   295 ;;      Locals:         0       0       0       0       0
   296 ;;      Temps:          0       0       0       0       0
   297 ;;      Totals:         0       0       0       0       0
   298 ;;Total ram usage:        0 bytes
   299 ;; Hardware stack levels required when called: 2
   300 ;; This function calls:
   301 ;;		_Keypad
   302 ;;		_LCD_Cmd
   303 ;;		_LCD_Init
   304 ;;		_LCD_String
   305 ;; This function is called by:
   306 ;;		Startup code after reset
   307 ;; This function uses a non-reentrant model
   308 ;;
   309                           
   310     0660                     _main:	
   311                           ;psect for function _main
   312                           
   313     0660                     l760:	
   314                           ;incstack = 0
   315                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   316                           
   317                           
   318                           ;main.c: 157:     TRISB = 0x00;
   319     0660  1683               	bsf	3,5	;RP0=1, select bank1
   320     0661  1303               	bcf	3,6	;RP1=0, select bank1
   321     0662  0186               	clrf	6	;volatile
   322     0663                     l762:
   323                           
   324                           ;main.c: 158:     TRISC = 0xF0;
   325     0663  30F0               	movlw	240
   326     0664  0087               	movwf	7	;volatile
   327     0665                     l764:
   328                           
   329                           ;main.c: 159:     LCD_Init();
   330     0665  120A  118A  2641  120A  118A  	fcall	_LCD_Init
   331     066A                     l766:
   332                           
   333                           ;main.c: 160:     LCD_Cmd(0x80);
   334     066A  3080               	movlw	128
   335     066B  120A  118A  26B8  120A  118A  	fcall	_LCD_Cmd
   336     0670                     l768:
   337                           
   338                           ;main.c: 161:     LCD_String("KEYPAD: ", 7);
   339     0670  3007               	movlw	7
   340     0671  00F3               	movwf	LCD_String@num
   341     0672  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   342     0673  120A  118A  2626  120A  118A  	fcall	_LCD_String
   343     0678                     l770:
   344                           
   345                           ;main.c: 162:     LCD_Cmd(0xC0);
   346     0678  30C0               	movlw	192
   347     0679  120A  118A  26B8  120A  118A  	fcall	_LCD_Cmd
   348     067E                     l772:
   349                           
   350                           ;main.c: 165:         Keypad();
   351     067E  120A  118A  26E9  120A  118A  	fcall	_Keypad
   352     0683  2E7E               	goto	l772
   353     0684  120A  118A  2800   	ljmp	start
   354     0687                     __end_of_main:
   355                           
   356                           	psect	text1
   357     0626                     __ptext1:	
   358 ;; *************** function _LCD_String *****************
   359 ;; Defined at:
   360 ;;		line 77 in file "main.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;  str             1    wreg     PTR unsigned char 
   363 ;;		 -> STR_1(9), 
   364 ;;  num             1    3[COMMON] unsigned char 
   365 ;; Auto vars:     Size  Location     Type
   366 ;;  str             1    4[COMMON] PTR unsigned char 
   367 ;;		 -> STR_1(9), 
   368 ;;  i               1    5[COMMON] unsigned char 
   369 ;; Return value:  Size  Location     Type
   370 ;;                  1    wreg      void 
   371 ;; Registers used:
   372 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   373 ;; Tracked objects:
   374 ;;		On entry : 0/0
   375 ;;		On exit  : 0/0
   376 ;;		Unchanged: 0/0
   377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   378 ;;      Params:         1       0       0       0       0
   379 ;;      Locals:         2       0       0       0       0
   380 ;;      Temps:          0       0       0       0       0
   381 ;;      Totals:         3       0       0       0       0
   382 ;;Total ram usage:        3 bytes
   383 ;; Hardware stack levels used: 1
   384 ;; Hardware stack levels required when called: 1
   385 ;; This function calls:
   386 ;;		_LCD_Data
   387 ;; This function is called by:
   388 ;;		_main
   389 ;; This function uses a non-reentrant model
   390 ;;
   391                           
   392     0626                     _LCD_String:	
   393                           ;psect for function _LCD_String
   394                           
   395                           
   396                           ;incstack = 0
   397                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   398                           ;LCD_String@str stored from wreg
   399     0626  00F4               	movwf	LCD_String@str
   400     0627                     l752:
   401                           
   402                           ;main.c: 78:     unsigned char i;;main.c: 79:     for(i = 0; i < num; i++){
   403     0627  01F5               	clrf	LCD_String@i
   404     0628  2E3A               	goto	l758
   405     0629                     l754:
   406                           
   407                           ;main.c: 80:         LCD_Data(str[i]);
   408     0629  0875               	movf	LCD_String@i,w
   409     062A  0774               	addwf	LCD_String@str,w
   410     062B  0084               	movwf	4
   411     062C  120A  118A  2003  120A  118A  	fcall	stringdir
   412     0631  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   413     0636                     l756:
   414                           
   415                           ;main.c: 81:     }
   416     0636  3001               	movlw	1
   417     0637  00FF               	movwf	btemp+1
   418     0638  087F               	movf	btemp+1,w
   419     0639  07F5               	addwf	LCD_String@i,f
   420     063A                     l758:
   421     063A  0873               	movf	LCD_String@num,w
   422     063B  0275               	subwf	LCD_String@i,w
   423     063C  1C03               	skipc
   424     063D  2E3F               	goto	u361
   425     063E  2E40               	goto	u360
   426     063F                     u361:
   427     063F  2E29               	goto	l754
   428     0640                     u360:
   429     0640                     l27:
   430     0640  0008               	return
   431     0641                     __end_of_LCD_String:
   432                           
   433                           	psect	text2
   434     0641                     __ptext2:	
   435 ;; *************** function _LCD_Init *****************
   436 ;; Defined at:
   437 ;;		line 69 in file "main.c"
   438 ;; Parameters:    Size  Location     Type
   439 ;;		None
   440 ;; Auto vars:     Size  Location     Type
   441 ;;		None
   442 ;; Return value:  Size  Location     Type
   443 ;;                  1    wreg      void 
   444 ;; Registers used:
   445 ;;		wreg, status,2, status,0, pclath, cstack
   446 ;; Tracked objects:
   447 ;;		On entry : 0/0
   448 ;;		On exit  : 0/0
   449 ;;		Unchanged: 0/0
   450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   451 ;;      Params:         0       0       0       0       0
   452 ;;      Locals:         0       0       0       0       0
   453 ;;      Temps:          0       0       0       0       0
   454 ;;      Totals:         0       0       0       0       0
   455 ;;Total ram usage:        0 bytes
   456 ;; Hardware stack levels used: 1
   457 ;; Hardware stack levels required when called: 1
   458 ;; This function calls:
   459 ;;		_LCD_Cmd
   460 ;; This function is called by:
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465     0641                     _LCD_Init:	
   466                           ;psect for function _LCD_Init
   467                           
   468     0641                     l694:	
   469                           ;incstack = 0
   470                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
   471                           
   472                           
   473                           ;main.c: 70:     LCD_Cmd(0x02);
   474     0641  3002               	movlw	2
   475     0642  120A  118A  26B8  120A  118A  	fcall	_LCD_Cmd
   476                           
   477                           ;main.c: 71:     LCD_Cmd(0x28);
   478     0647  3028               	movlw	40
   479     0648  120A  118A  26B8  120A  118A  	fcall	_LCD_Cmd
   480                           
   481                           ;main.c: 72:     LCD_Cmd(0x0C);
   482     064D  300C               	movlw	12
   483     064E  120A  118A  26B8  120A  118A  	fcall	_LCD_Cmd
   484                           
   485                           ;main.c: 73:     LCD_Cmd(0x06);
   486     0653  3006               	movlw	6
   487     0654  120A  118A  26B8  120A  118A  	fcall	_LCD_Cmd
   488                           
   489                           ;main.c: 74:     LCD_Cmd(0x01);
   490     0659  3001               	movlw	1
   491     065A  120A  118A  26B8  120A  118A  	fcall	_LCD_Cmd
   492     065F                     l21:
   493     065F  0008               	return
   494     0660                     __end_of_LCD_Init:
   495                           
   496                           	psect	text3
   497     06B8                     __ptext3:	
   498 ;; *************** function _LCD_Cmd *****************
   499 ;; Defined at:
   500 ;;		line 39 in file "main.c"
   501 ;; Parameters:    Size  Location     Type
   502 ;;  data            1    wreg     unsigned char 
   503 ;; Auto vars:     Size  Location     Type
   504 ;;  data            1    2[COMMON] unsigned char 
   505 ;; Return value:  Size  Location     Type
   506 ;;                  1    wreg      void 
   507 ;; Registers used:
   508 ;;		wreg, status,2, status,0
   509 ;; Tracked objects:
   510 ;;		On entry : 0/0
   511 ;;		On exit  : 0/0
   512 ;;		Unchanged: 0/0
   513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   514 ;;      Params:         0       0       0       0       0
   515 ;;      Locals:         1       0       0       0       0
   516 ;;      Temps:          2       0       0       0       0
   517 ;;      Totals:         3       0       0       0       0
   518 ;;Total ram usage:        3 bytes
   519 ;; Hardware stack levels used: 1
   520 ;; This function calls:
   521 ;;		Nothing
   522 ;; This function is called by:
   523 ;;		_LCD_Init
   524 ;;		_main
   525 ;; This function uses a non-reentrant model
   526 ;;
   527                           
   528     06B8                     _LCD_Cmd:	
   529                           ;psect for function _LCD_Cmd
   530                           
   531                           
   532                           ;incstack = 0
   533                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0]
   534                           ;LCD_Cmd@data stored from wreg
   535     06B8  00F2               	movwf	LCD_Cmd@data
   536     06B9                     l646:
   537                           
   538                           ;main.c: 40:     PORTB = (data & 0xF0);
   539     06B9  0872               	movf	LCD_Cmd@data,w
   540     06BA  39F0               	andlw	240
   541     06BB  1283               	bcf	3,5	;RP0=0, select bank0
   542     06BC  1303               	bcf	3,6	;RP1=0, select bank0
   543     06BD  0086               	movwf	6	;volatile
   544     06BE                     l648:
   545                           
   546                           ;main.c: 41:     PORTBbits.RB2 = 1;
   547     06BE  1506               	bsf	6,2	;volatile
   548     06BF                     l650:
   549                           
   550                           ;main.c: 42:     PORTBbits.RB1 = 0;
   551     06BF  1086               	bcf	6,1	;volatile
   552     06C0                     l652:
   553                           
   554                           ;main.c: 43:     PORTBbits.RB0 = 0;
   555     06C0  1006               	bcf	6,0	;volatile
   556     06C1                     l654:
   557                           
   558                           ;main.c: 44:     _delay((unsigned long)((5)*(20000000/4000.0)));
   559     06C1  3021               	movlw	33
   560     06C2  00F1               	movwf	??_LCD_Cmd+1
   561     06C3  3076               	movlw	118
   562     06C4  00F0               	movwf	??_LCD_Cmd
   563     06C5                     u377:
   564     06C5  0BF0               	decfsz	??_LCD_Cmd,f
   565     06C6  2EC5               	goto	u377
   566     06C7  0BF1               	decfsz	??_LCD_Cmd+1,f
   567     06C8  2EC5               	goto	u377
   568     06C9  0000               	nop
   569     06CA                     l656:
   570                           
   571                           ;main.c: 45:     PORTBbits.RB2 = 0;
   572     06CA  1283               	bcf	3,5	;RP0=0, select bank0
   573     06CB  1303               	bcf	3,6	;RP1=0, select bank0
   574     06CC  1106               	bcf	6,2	;volatile
   575     06CD                     l658:
   576                           
   577                           ;main.c: 46:     PORTB = ((data << 4) & 0xF0);
   578     06CD  0872               	movf	LCD_Cmd@data,w
   579     06CE  00F0               	movwf	??_LCD_Cmd
   580     06CF  3003               	movlw	3
   581     06D0                     u15:
   582     06D0  1003               	clrc
   583     06D1  0DF0               	rlf	??_LCD_Cmd,f
   584     06D2  3EFF               	addlw	-1
   585     06D3  1D03               	skipz
   586     06D4  2ED0               	goto	u15
   587     06D5  1003               	clrc
   588     06D6  0D70               	rlf	??_LCD_Cmd,w
   589     06D7  39F0               	andlw	240
   590     06D8  0086               	movwf	6	;volatile
   591     06D9                     l660:
   592                           
   593                           ;main.c: 47:     PORTBbits.RB2 = 1;
   594     06D9  1506               	bsf	6,2	;volatile
   595     06DA                     l662:
   596                           
   597                           ;main.c: 48:     PORTBbits.RB1 = 0;
   598     06DA  1086               	bcf	6,1	;volatile
   599     06DB                     l664:
   600                           
   601                           ;main.c: 49:     PORTBbits.RB0 = 0;
   602     06DB  1006               	bcf	6,0	;volatile
   603     06DC                     l666:
   604                           
   605                           ;main.c: 50:      _delay((unsigned long)((5)*(20000000/4000.0)));
   606     06DC  3021               	movlw	33
   607     06DD  00F1               	movwf	??_LCD_Cmd+1
   608     06DE  3076               	movlw	118
   609     06DF  00F0               	movwf	??_LCD_Cmd
   610     06E0                     u387:
   611     06E0  0BF0               	decfsz	??_LCD_Cmd,f
   612     06E1  2EE0               	goto	u387
   613     06E2  0BF1               	decfsz	??_LCD_Cmd+1,f
   614     06E3  2EE0               	goto	u387
   615     06E4  0000               	nop
   616     06E5                     l668:
   617                           
   618                           ;main.c: 51:     PORTBbits.RB2 = 0;
   619     06E5  1283               	bcf	3,5	;RP0=0, select bank0
   620     06E6  1303               	bcf	3,6	;RP1=0, select bank0
   621     06E7  1106               	bcf	6,2	;volatile
   622     06E8                     l15:
   623     06E8  0008               	return
   624     06E9                     __end_of_LCD_Cmd:
   625                           
   626                           	psect	text4
   627     06E9                     __ptext4:	
   628 ;; *************** function _Keypad *****************
   629 ;; Defined at:
   630 ;;		line 84 in file "main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used: 1
   650 ;; Hardware stack levels required when called: 1
   651 ;; This function calls:
   652 ;;		_LCD_Data
   653 ;; This function is called by:
   654 ;;		_main
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           
   658     06E9                     _Keypad:	
   659                           ;psect for function _Keypad
   660                           
   661     06E9                     l704:	
   662                           ;incstack = 0
   663                           ; Regs used in _Keypad: [wreg+status,2+status,0+pclath+cstack]
   664                           
   665                           
   666                           ;main.c: 85:     PORTCbits.RC0 = 1, PORTCbits.RC1 = PORTCbits.RC2 = PORTCbits.RC3 = 0;
   667     06E9  1283               	bcf	3,5	;RP0=0, select bank0
   668     06EA  1303               	bcf	3,6	;RP1=0, select bank0
   669     06EB  1407               	bsf	7,0	;volatile
   670     06EC  1187               	bcf	7,3	;volatile
   671     06ED  1107               	bcf	7,2	;volatile
   672     06EE  1087               	bcf	7,1	;volatile
   673                           
   674                           ;main.c: 86:     if(PORTCbits.RC4 == 1){
   675     06EF  1E07               	btfss	7,4	;volatile
   676     06F0  2EF2               	goto	u41
   677     06F1  2EF3               	goto	u40
   678     06F2                     u41:
   679     06F2  2EFF               	goto	l30
   680     06F3                     u40:
   681     06F3                     l706:
   682                           
   683                           ;main.c: 87:         LCD_Data('7');
   684     06F3  3037               	movlw	55
   685     06F4  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   686     06F9                     l31:	
   687                           ;main.c: 88:         while(PORTCbits.RC4 == 1);
   688                           
   689     06F9  1283               	bcf	3,5	;RP0=0, select bank0
   690     06FA  1303               	bcf	3,6	;RP1=0, select bank0
   691     06FB  1A07               	btfsc	7,4	;volatile
   692     06FC  2EFE               	goto	u51
   693     06FD  2EFF               	goto	u50
   694     06FE                     u51:
   695     06FE  2EF9               	goto	l31
   696     06FF                     u50:
   697     06FF                     l30:	
   698                           ;main.c: 89:     }
   699                           
   700                           
   701                           ;main.c: 90:     if(PORTCbits.RC5 == 1){
   702     06FF  1E87               	btfss	7,5	;volatile
   703     0700  2F02               	goto	u61
   704     0701  2F03               	goto	u60
   705     0702                     u61:
   706     0702  2F0F               	goto	l34
   707     0703                     u60:
   708     0703                     l708:
   709                           
   710                           ;main.c: 91:         LCD_Data('8');
   711     0703  3038               	movlw	56
   712     0704  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   713     0709                     l35:	
   714                           ;main.c: 92:         while(PORTCbits.RC5 == 1);
   715                           
   716     0709  1283               	bcf	3,5	;RP0=0, select bank0
   717     070A  1303               	bcf	3,6	;RP1=0, select bank0
   718     070B  1A87               	btfsc	7,5	;volatile
   719     070C  2F0E               	goto	u71
   720     070D  2F0F               	goto	u70
   721     070E                     u71:
   722     070E  2F09               	goto	l35
   723     070F                     u70:
   724     070F                     l34:	
   725                           ;main.c: 93:     }
   726                           
   727                           
   728                           ;main.c: 94:     if(PORTCbits.RC6 == 1){
   729     070F  1F07               	btfss	7,6	;volatile
   730     0710  2F12               	goto	u81
   731     0711  2F13               	goto	u80
   732     0712                     u81:
   733     0712  2F1F               	goto	l38
   734     0713                     u80:
   735     0713                     l710:
   736                           
   737                           ;main.c: 95:         LCD_Data('9');
   738     0713  3039               	movlw	57
   739     0714  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   740     0719                     l39:	
   741                           ;main.c: 96:         while(PORTCbits.RC6 == 1);
   742                           
   743     0719  1283               	bcf	3,5	;RP0=0, select bank0
   744     071A  1303               	bcf	3,6	;RP1=0, select bank0
   745     071B  1B07               	btfsc	7,6	;volatile
   746     071C  2F1E               	goto	u91
   747     071D  2F1F               	goto	u90
   748     071E                     u91:
   749     071E  2F19               	goto	l39
   750     071F                     u90:
   751     071F                     l38:	
   752                           ;main.c: 97:     }
   753                           
   754                           
   755                           ;main.c: 98:     if(PORTCbits.RC7 == 1){
   756     071F  1F87               	btfss	7,7	;volatile
   757     0720  2F22               	goto	u101
   758     0721  2F23               	goto	u100
   759     0722                     u101:
   760     0722  2F2F               	goto	l42
   761     0723                     u100:
   762     0723                     l712:
   763                           
   764                           ;main.c: 99:         LCD_Data('A');
   765     0723  3041               	movlw	65
   766     0724  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   767     0729                     l43:	
   768                           ;main.c: 100:         while(PORTCbits.RC7 == 1);
   769                           
   770     0729  1283               	bcf	3,5	;RP0=0, select bank0
   771     072A  1303               	bcf	3,6	;RP1=0, select bank0
   772     072B  1B87               	btfsc	7,7	;volatile
   773     072C  2F2E               	goto	u111
   774     072D  2F2F               	goto	u110
   775     072E                     u111:
   776     072E  2F29               	goto	l43
   777     072F                     u110:
   778     072F                     l42:	
   779                           ;main.c: 101:     }
   780                           
   781                           
   782                           ;main.c: 102:     PORTCbits.RC1 =1, PORTCbits.RC0 = PORTCbits.RC2 = PORTCbits.RC3 = 0;
   783     072F  1487               	bsf	7,1	;volatile
   784     0730  1187               	bcf	7,3	;volatile
   785     0731  1107               	bcf	7,2	;volatile
   786     0732  1007               	bcf	7,0	;volatile
   787                           
   788                           ;main.c: 103:     if(PORTCbits.RC4 == 1){
   789     0733  1E07               	btfss	7,4	;volatile
   790     0734  2F36               	goto	u121
   791     0735  2F37               	goto	u120
   792     0736                     u121:
   793     0736  2F43               	goto	l46
   794     0737                     u120:
   795     0737                     l714:
   796                           
   797                           ;main.c: 104:         LCD_Data('4');
   798     0737  3034               	movlw	52
   799     0738  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   800     073D                     l47:	
   801                           ;main.c: 105:         while(PORTCbits.RC4 == 1);
   802                           
   803     073D  1283               	bcf	3,5	;RP0=0, select bank0
   804     073E  1303               	bcf	3,6	;RP1=0, select bank0
   805     073F  1A07               	btfsc	7,4	;volatile
   806     0740  2F42               	goto	u131
   807     0741  2F43               	goto	u130
   808     0742                     u131:
   809     0742  2F3D               	goto	l47
   810     0743                     u130:
   811     0743                     l46:	
   812                           ;main.c: 106:     }
   813                           
   814                           
   815                           ;main.c: 107:     if(PORTCbits.RC5 == 1){
   816     0743  1E87               	btfss	7,5	;volatile
   817     0744  2F46               	goto	u141
   818     0745  2F47               	goto	u140
   819     0746                     u141:
   820     0746  2F53               	goto	l50
   821     0747                     u140:
   822     0747                     l716:
   823                           
   824                           ;main.c: 108:         LCD_Data('5');
   825     0747  3035               	movlw	53
   826     0748  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   827     074D                     l51:	
   828                           ;main.c: 109:         while(PORTCbits.RC5 == 1);
   829                           
   830     074D  1283               	bcf	3,5	;RP0=0, select bank0
   831     074E  1303               	bcf	3,6	;RP1=0, select bank0
   832     074F  1A87               	btfsc	7,5	;volatile
   833     0750  2F52               	goto	u151
   834     0751  2F53               	goto	u150
   835     0752                     u151:
   836     0752  2F4D               	goto	l51
   837     0753                     u150:
   838     0753                     l50:	
   839                           ;main.c: 110:     }
   840                           
   841                           
   842                           ;main.c: 111:     if(PORTCbits.RC6 == 1){
   843     0753  1F07               	btfss	7,6	;volatile
   844     0754  2F56               	goto	u161
   845     0755  2F57               	goto	u160
   846     0756                     u161:
   847     0756  2F63               	goto	l54
   848     0757                     u160:
   849     0757                     l718:
   850                           
   851                           ;main.c: 112:         LCD_Data('6');
   852     0757  3036               	movlw	54
   853     0758  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   854     075D                     l55:	
   855                           ;main.c: 113:         while(PORTCbits.RC6 == 1);
   856                           
   857     075D  1283               	bcf	3,5	;RP0=0, select bank0
   858     075E  1303               	bcf	3,6	;RP1=0, select bank0
   859     075F  1B07               	btfsc	7,6	;volatile
   860     0760  2F62               	goto	u171
   861     0761  2F63               	goto	u170
   862     0762                     u171:
   863     0762  2F5D               	goto	l55
   864     0763                     u170:
   865     0763                     l54:	
   866                           ;main.c: 114:     }
   867                           
   868                           
   869                           ;main.c: 115:     if(PORTCbits.RC7 == 1){
   870     0763  1F87               	btfss	7,7	;volatile
   871     0764  2F66               	goto	u181
   872     0765  2F67               	goto	u180
   873     0766                     u181:
   874     0766  2F73               	goto	l58
   875     0767                     u180:
   876     0767                     l720:
   877                           
   878                           ;main.c: 116:         LCD_Data('B');
   879     0767  3042               	movlw	66
   880     0768  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   881     076D                     l59:	
   882                           ;main.c: 117:         while(PORTCbits.RC7 == 1);
   883                           
   884     076D  1283               	bcf	3,5	;RP0=0, select bank0
   885     076E  1303               	bcf	3,6	;RP1=0, select bank0
   886     076F  1B87               	btfsc	7,7	;volatile
   887     0770  2F72               	goto	u191
   888     0771  2F73               	goto	u190
   889     0772                     u191:
   890     0772  2F6D               	goto	l59
   891     0773                     u190:
   892     0773                     l58:	
   893                           ;main.c: 118:     }
   894                           
   895                           
   896                           ;main.c: 120:     PORTCbits.RC2 = 1, PORTCbits.RC0 = PORTCbits.RC1 = PORTCbits.RC3 = 0;
   897     0773  1507               	bsf	7,2	;volatile
   898     0774  1187               	bcf	7,3	;volatile
   899     0775  1087               	bcf	7,1	;volatile
   900     0776  1007               	bcf	7,0	;volatile
   901                           
   902                           ;main.c: 121:     if(PORTCbits.RC4 == 1){
   903     0777  1E07               	btfss	7,4	;volatile
   904     0778  2F7A               	goto	u201
   905     0779  2F7B               	goto	u200
   906     077A                     u201:
   907     077A  2F87               	goto	l62
   908     077B                     u200:
   909     077B                     l722:
   910                           
   911                           ;main.c: 122:         LCD_Data('1');
   912     077B  3031               	movlw	49
   913     077C  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   914     0781                     l63:	
   915                           ;main.c: 123:         while(PORTCbits.RC4 == 1);
   916                           
   917     0781  1283               	bcf	3,5	;RP0=0, select bank0
   918     0782  1303               	bcf	3,6	;RP1=0, select bank0
   919     0783  1A07               	btfsc	7,4	;volatile
   920     0784  2F86               	goto	u211
   921     0785  2F87               	goto	u210
   922     0786                     u211:
   923     0786  2F81               	goto	l63
   924     0787                     u210:
   925     0787                     l62:	
   926                           ;main.c: 124:     }
   927                           
   928                           
   929                           ;main.c: 125:     if(PORTCbits.RC5 == 1){
   930     0787  1E87               	btfss	7,5	;volatile
   931     0788  2F8A               	goto	u221
   932     0789  2F8B               	goto	u220
   933     078A                     u221:
   934     078A  2F97               	goto	l66
   935     078B                     u220:
   936     078B                     l724:
   937                           
   938                           ;main.c: 126:         LCD_Data('2');
   939     078B  3032               	movlw	50
   940     078C  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   941     0791                     l67:	
   942                           ;main.c: 127:         while(PORTCbits.RC5 == 1);
   943                           
   944     0791  1283               	bcf	3,5	;RP0=0, select bank0
   945     0792  1303               	bcf	3,6	;RP1=0, select bank0
   946     0793  1A87               	btfsc	7,5	;volatile
   947     0794  2F96               	goto	u231
   948     0795  2F97               	goto	u230
   949     0796                     u231:
   950     0796  2F91               	goto	l67
   951     0797                     u230:
   952     0797                     l66:	
   953                           ;main.c: 128:     }
   954                           
   955                           
   956                           ;main.c: 129:     if(PORTCbits.RC6 == 1){
   957     0797  1F07               	btfss	7,6	;volatile
   958     0798  2F9A               	goto	u241
   959     0799  2F9B               	goto	u240
   960     079A                     u241:
   961     079A  2FA7               	goto	l70
   962     079B                     u240:
   963     079B                     l726:
   964                           
   965                           ;main.c: 130:         LCD_Data('3');
   966     079B  3033               	movlw	51
   967     079C  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   968     07A1                     l71:	
   969                           ;main.c: 131:         while(PORTCbits.RC6 == 1);
   970                           
   971     07A1  1283               	bcf	3,5	;RP0=0, select bank0
   972     07A2  1303               	bcf	3,6	;RP1=0, select bank0
   973     07A3  1B07               	btfsc	7,6	;volatile
   974     07A4  2FA6               	goto	u251
   975     07A5  2FA7               	goto	u250
   976     07A6                     u251:
   977     07A6  2FA1               	goto	l71
   978     07A7                     u250:
   979     07A7                     l70:	
   980                           ;main.c: 132:     }
   981                           
   982                           
   983                           ;main.c: 133:     if(PORTCbits.RC7 == 1){
   984     07A7  1F87               	btfss	7,7	;volatile
   985     07A8  2FAA               	goto	u261
   986     07A9  2FAB               	goto	u260
   987     07AA                     u261:
   988     07AA  2FB7               	goto	l74
   989     07AB                     u260:
   990     07AB                     l728:
   991                           
   992                           ;main.c: 134:         LCD_Data('C');
   993     07AB  3043               	movlw	67
   994     07AC  120A  118A  2687  120A  118A  	fcall	_LCD_Data
   995     07B1                     l75:	
   996                           ;main.c: 135:         while(PORTCbits.RC7 == 1);
   997                           
   998     07B1  1283               	bcf	3,5	;RP0=0, select bank0
   999     07B2  1303               	bcf	3,6	;RP1=0, select bank0
  1000     07B3  1B87               	btfsc	7,7	;volatile
  1001     07B4  2FB6               	goto	u271
  1002     07B5  2FB7               	goto	u270
  1003     07B6                     u271:
  1004     07B6  2FB1               	goto	l75
  1005     07B7                     u270:
  1006     07B7                     l74:	
  1007                           ;main.c: 136:     }
  1008                           
  1009                           
  1010                           ;main.c: 138:     PORTCbits.RC3 = 1, PORTCbits.RC0 = PORTCbits.RC1 = PORTCbits.RC2 = 0;
  1011     07B7  1587               	bsf	7,3	;volatile
  1012     07B8  1107               	bcf	7,2	;volatile
  1013     07B9  1087               	bcf	7,1	;volatile
  1014     07BA  1007               	bcf	7,0	;volatile
  1015                           
  1016                           ;main.c: 139:     if(PORTCbits.RC4 == 1){
  1017     07BB  1E07               	btfss	7,4	;volatile
  1018     07BC  2FBE               	goto	u281
  1019     07BD  2FBF               	goto	u280
  1020     07BE                     u281:
  1021     07BE  2FCB               	goto	l78
  1022     07BF                     u280:
  1023     07BF                     l730:
  1024                           
  1025                           ;main.c: 140:         LCD_Data('*');
  1026     07BF  302A               	movlw	42
  1027     07C0  120A  118A  2687  120A  118A  	fcall	_LCD_Data
  1028     07C5                     l79:	
  1029                           ;main.c: 141:         while(PORTCbits.RC4 == 1);
  1030                           
  1031     07C5  1283               	bcf	3,5	;RP0=0, select bank0
  1032     07C6  1303               	bcf	3,6	;RP1=0, select bank0
  1033     07C7  1A07               	btfsc	7,4	;volatile
  1034     07C8  2FCA               	goto	u291
  1035     07C9  2FCB               	goto	u290
  1036     07CA                     u291:
  1037     07CA  2FC5               	goto	l79
  1038     07CB                     u290:
  1039     07CB                     l78:	
  1040                           ;main.c: 142:     }
  1041                           
  1042                           
  1043                           ;main.c: 143:     if(PORTCbits.RC5 == 1){
  1044     07CB  1E87               	btfss	7,5	;volatile
  1045     07CC  2FCE               	goto	u301
  1046     07CD  2FCF               	goto	u300
  1047     07CE                     u301:
  1048     07CE  2FDB               	goto	l82
  1049     07CF                     u300:
  1050     07CF                     l732:
  1051                           
  1052                           ;main.c: 144:         LCD_Data('0');
  1053     07CF  3030               	movlw	48
  1054     07D0  120A  118A  2687  120A  118A  	fcall	_LCD_Data
  1055     07D5                     l83:	
  1056                           ;main.c: 145:         while(PORTCbits.RC5 == 1);
  1057                           
  1058     07D5  1283               	bcf	3,5	;RP0=0, select bank0
  1059     07D6  1303               	bcf	3,6	;RP1=0, select bank0
  1060     07D7  1A87               	btfsc	7,5	;volatile
  1061     07D8  2FDA               	goto	u311
  1062     07D9  2FDB               	goto	u310
  1063     07DA                     u311:
  1064     07DA  2FD5               	goto	l83
  1065     07DB                     u310:
  1066     07DB                     l82:	
  1067                           ;main.c: 146:     }
  1068                           
  1069                           
  1070                           ;main.c: 147:     if(PORTCbits.RC6 == 1){
  1071     07DB  1F07               	btfss	7,6	;volatile
  1072     07DC  2FDE               	goto	u321
  1073     07DD  2FDF               	goto	u320
  1074     07DE                     u321:
  1075     07DE  2FEB               	goto	l86
  1076     07DF                     u320:
  1077     07DF                     l734:
  1078                           
  1079                           ;main.c: 148:         LCD_Data('=');
  1080     07DF  303D               	movlw	61
  1081     07E0  120A  118A  2687  120A  118A  	fcall	_LCD_Data
  1082     07E5                     l87:	
  1083                           ;main.c: 149:         while(PORTCbits.RC6 == 1);
  1084                           
  1085     07E5  1283               	bcf	3,5	;RP0=0, select bank0
  1086     07E6  1303               	bcf	3,6	;RP1=0, select bank0
  1087     07E7  1B07               	btfsc	7,6	;volatile
  1088     07E8  2FEA               	goto	u331
  1089     07E9  2FEB               	goto	u330
  1090     07EA                     u331:
  1091     07EA  2FE5               	goto	l87
  1092     07EB                     u330:
  1093     07EB                     l86:	
  1094                           ;main.c: 150:     }
  1095                           
  1096                           
  1097                           ;main.c: 151:     if(PORTCbits.RC7 == 1){
  1098     07EB  1F87               	btfss	7,7	;volatile
  1099     07EC  2FEE               	goto	u341
  1100     07ED  2FEF               	goto	u340
  1101     07EE                     u341:
  1102     07EE  2FFB               	goto	l94
  1103     07EF                     u340:
  1104     07EF                     l736:
  1105                           
  1106                           ;main.c: 152:         LCD_Data('D');
  1107     07EF  3044               	movlw	68
  1108     07F0  120A  118A  2687  120A  118A  	fcall	_LCD_Data
  1109     07F5                     l91:	
  1110                           ;main.c: 153:         while(PORTCbits.RC7 == 1);
  1111                           
  1112     07F5  1283               	bcf	3,5	;RP0=0, select bank0
  1113     07F6  1303               	bcf	3,6	;RP1=0, select bank0
  1114     07F7  1B87               	btfsc	7,7	;volatile
  1115     07F8  2FFA               	goto	u351
  1116     07F9  2FFB               	goto	u350
  1117     07FA                     u351:
  1118     07FA  2FF5               	goto	l91
  1119     07FB                     u350:
  1120     07FB                     l94:
  1121     07FB  0008               	return
  1122     07FC                     __end_of_Keypad:
  1123                           
  1124                           	psect	text5
  1125     0687                     __ptext5:	
  1126 ;; *************** function _LCD_Data *****************
  1127 ;; Defined at:
  1128 ;;		line 54 in file "main.c"
  1129 ;; Parameters:    Size  Location     Type
  1130 ;;  data            1    wreg     unsigned char 
  1131 ;; Auto vars:     Size  Location     Type
  1132 ;;  data            1    2[COMMON] unsigned char 
  1133 ;; Return value:  Size  Location     Type
  1134 ;;                  1    wreg      void 
  1135 ;; Registers used:
  1136 ;;		wreg, status,2, status,0
  1137 ;; Tracked objects:
  1138 ;;		On entry : 0/0
  1139 ;;		On exit  : 0/0
  1140 ;;		Unchanged: 0/0
  1141 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1142 ;;      Params:         0       0       0       0       0
  1143 ;;      Locals:         1       0       0       0       0
  1144 ;;      Temps:          2       0       0       0       0
  1145 ;;      Totals:         3       0       0       0       0
  1146 ;;Total ram usage:        3 bytes
  1147 ;; Hardware stack levels used: 1
  1148 ;; This function calls:
  1149 ;;		Nothing
  1150 ;; This function is called by:
  1151 ;;		_LCD_String
  1152 ;;		_Keypad
  1153 ;; This function uses a non-reentrant model
  1154 ;;
  1155                           
  1156     0687                     _LCD_Data:	
  1157                           ;psect for function _LCD_Data
  1158                           
  1159                           
  1160                           ;incstack = 0
  1161                           ; Regs used in _LCD_Data: [wreg+status,2+status,0]
  1162                           ;LCD_Data@data stored from wreg
  1163     0687  00F2               	movwf	LCD_Data@data
  1164     0688                     l670:
  1165                           
  1166                           ;main.c: 55:     PORTB = (data & 0xF0);
  1167     0688  0872               	movf	LCD_Data@data,w
  1168     0689  39F0               	andlw	240
  1169     068A  1283               	bcf	3,5	;RP0=0, select bank0
  1170     068B  1303               	bcf	3,6	;RP1=0, select bank0
  1171     068C  0086               	movwf	6	;volatile
  1172     068D                     l672:
  1173                           
  1174                           ;main.c: 56:     PORTBbits.RB2 = 1;
  1175     068D  1506               	bsf	6,2	;volatile
  1176     068E                     l674:
  1177                           
  1178                           ;main.c: 57:     PORTBbits.RB1 = 0;
  1179     068E  1086               	bcf	6,1	;volatile
  1180     068F                     l676:
  1181                           
  1182                           ;main.c: 58:     PORTBbits.RB0 = 1;
  1183     068F  1406               	bsf	6,0	;volatile
  1184     0690                     l678:
  1185                           
  1186                           ;main.c: 59:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1187     0690  3021               	movlw	33
  1188     0691  00F1               	movwf	??_LCD_Data+1
  1189     0692  3076               	movlw	118
  1190     0693  00F0               	movwf	??_LCD_Data
  1191     0694                     u397:
  1192     0694  0BF0               	decfsz	??_LCD_Data,f
  1193     0695  2E94               	goto	u397
  1194     0696  0BF1               	decfsz	??_LCD_Data+1,f
  1195     0697  2E94               	goto	u397
  1196     0698  0000               	nop
  1197     0699                     l680:
  1198                           
  1199                           ;main.c: 60:     PORTBbits.RB2 = 0;
  1200     0699  1283               	bcf	3,5	;RP0=0, select bank0
  1201     069A  1303               	bcf	3,6	;RP1=0, select bank0
  1202     069B  1106               	bcf	6,2	;volatile
  1203     069C                     l682:
  1204                           
  1205                           ;main.c: 61:     PORTB = ((data << 4) & 0xF0);
  1206     069C  0872               	movf	LCD_Data@data,w
  1207     069D  00F0               	movwf	??_LCD_Data
  1208     069E  3003               	movlw	3
  1209     069F                     u25:
  1210     069F  1003               	clrc
  1211     06A0  0DF0               	rlf	??_LCD_Data,f
  1212     06A1  3EFF               	addlw	-1
  1213     06A2  1D03               	skipz
  1214     06A3  2E9F               	goto	u25
  1215     06A4  1003               	clrc
  1216     06A5  0D70               	rlf	??_LCD_Data,w
  1217     06A6  39F0               	andlw	240
  1218     06A7  0086               	movwf	6	;volatile
  1219     06A8                     l684:
  1220                           
  1221                           ;main.c: 62:     PORTBbits.RB2 = 1;
  1222     06A8  1506               	bsf	6,2	;volatile
  1223     06A9                     l686:
  1224                           
  1225                           ;main.c: 63:     PORTBbits.RB1 = 0;
  1226     06A9  1086               	bcf	6,1	;volatile
  1227     06AA                     l688:
  1228                           
  1229                           ;main.c: 64:     PORTBbits.RB0 = 1;
  1230     06AA  1406               	bsf	6,0	;volatile
  1231     06AB                     l690:
  1232                           
  1233                           ;main.c: 65:     _delay((unsigned long)((5)*(20000000/4000.0)));
  1234     06AB  3021               	movlw	33
  1235     06AC  00F1               	movwf	??_LCD_Data+1
  1236     06AD  3076               	movlw	118
  1237     06AE  00F0               	movwf	??_LCD_Data
  1238     06AF                     u407:
  1239     06AF  0BF0               	decfsz	??_LCD_Data,f
  1240     06B0  2EAF               	goto	u407
  1241     06B1  0BF1               	decfsz	??_LCD_Data+1,f
  1242     06B2  2EAF               	goto	u407
  1243     06B3  0000               	nop
  1244     06B4                     l692:
  1245                           
  1246                           ;main.c: 66:     PORTBbits.RB2 = 0;
  1247     06B4  1283               	bcf	3,5	;RP0=0, select bank0
  1248     06B5  1303               	bcf	3,6	;RP1=0, select bank0
  1249     06B6  1106               	bcf	6,2	;volatile
  1250     06B7                     l18:
  1251     06B7  0008               	return
  1252     06B8                     __end_of_LCD_Data:
  1253     007E                     btemp	set	126	;btemp
  1254     007E                     wtemp0	set	126
  1255                           
  1256                           	psect	config
  1257                           
  1258                           ;Config register CONFIG @ 0x2007
  1259                           ;	Oscillator Selection bits
  1260                           ;	FOSC = HS, HS oscillator
  1261                           ;	Watchdog Timer Enable bit
  1262                           ;	WDTE = ON, WDT enabled
  1263                           ;	Power-up Timer Enable bit
  1264                           ;	PWRTE = ON, PWRT enabled
  1265                           ;	Brown-out Reset Enable bit
  1266                           ;	BOREN = OFF, BOR disabled
  1267                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1268                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1269                           ;	Data EEPROM Memory Code Protection bit
  1270                           ;	CPD = OFF, Data EEPROM code protection off
  1271                           ;	Flash Program Memory Write Enable bits
  1272                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1273                           ;	In-Circuit Debugger Mode bit
  1274                           ;	DEBUG = 0x1, unprogrammed default
  1275                           ;	Flash Program Memory Code Protection bit
  1276                           ;	CP = OFF, Code protection off
  1277     2007                     	org	8199
  1278     2007  3F36               	dw	16182

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    LCD_String@str	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_LCD_String
    _LCD_String->_LCD_Data
    _LCD_Init->_LCD_Cmd
    _Keypad->_LCD_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     319
                             _Keypad
                            _LCD_Cmd
                           _LCD_Init
                         _LCD_String
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           3     2      1     229
                                              3 COMMON     3     2      1
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      30
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _Keypad                                               0     0      0      30
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (2) _LCD_Data                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Keypad
     _LCD_Data
   _LCD_Cmd
   _LCD_Init
     _LCD_Cmd
   _LCD_String
     _LCD_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Dec 18 15:52:35 2023

                      pc 0002                       l21 065F                       l30 06FF  
                     l31 06F9                       l15 06E8                       l18 06B7  
                     l50 0753                       l42 072F                       l34 070F  
                     l51 074D                       l43 0729                       l35 0709  
                     l27 0640                       l70 07A7                       l62 0787  
                     l54 0763                       l46 0743                       l38 071F  
                     l71 07A1                       l63 0781                       l55 075D  
                     l47 073D                       l39 0719                       l82 07DB  
                     l74 07B7                       l66 0797                       l58 0773  
                     l91 07F5                       l83 07D5                       l75 07B1  
                     l67 0791                       l59 076D                       l94 07FB  
                     l86 07EB                       l78 07CB                       l87 07E5  
                     l79 07C5                       u15 06D0                       u40 06F3  
                     u25 069F                       u41 06F2                       u50 06FF  
                     u51 06FE                       u60 0703                       u61 0702  
                     u70 070F                       u71 070E                       u80 0713  
                     u81 0712                       u90 071F                       u91 071E  
                     fsr 0004              ?_LCD_String 0073                      l710 0713  
                    l720 0767                      l712 0723                      l704 06E9  
                    l730 07BF                      l722 077B                      l714 0737  
                    l706 06F3                      l650 06BF                      l732 07CF  
                    l724 078B                      l716 0747                      l708 0703  
                    l660 06D9                      l652 06C0                      l670 0688  
                    l734 07DF                      l726 079B                      l718 0757  
                    l662 06DA                      l654 06C1                      l646 06B9  
                    l680 0699                      l672 068D                      l736 07EF  
                    l728 07AB                      l664 06DB                      l656 06CA  
                    l648 06BE                      l752 0627                      l760 0660  
                    l690 06AB                      l682 069C                      l674 068E  
                    l666 06DC                      l658 06CD                      l754 0629  
                    l770 0678                      l762 0663                      l692 06B4  
                    l684 06A8                      l676 068F                      l668 06E5  
                    l756 0636                      l772 067E                      l764 0665  
                    l686 06A9                      l678 0690                      l694 0641  
                    l758 063A                      l766 066A                      l688 06AA  
                    l768 0670                      u100 0723                      u101 0722  
                    u110 072F                      u111 072E                      u200 077B  
                    u120 0737                      u201 077A                      u121 0736  
                    u210 0787                      u130 0743                      u211 0786  
                    u131 0742                      u300 07CF                      u220 078B  
                    u140 0747                      u301 07CE                      u221 078A  
                    u141 0746                      u310 07DB                      u230 0797  
                    u150 0753                      u311 07DA                      u231 0796  
                    u151 0752                      u320 07DF                      u240 079B  
                    u160 0757                      u321 07DE                      u241 079A  
                    u161 0756                      u330 07EB                      u250 07A7  
                    u170 0763                      u331 07EA                      u251 07A6  
                    u171 0762                      u340 07EF                      u260 07AB  
                    u180 0767                      u341 07EE                      u261 07AA  
                    u181 0766                      u350 07FB                      u270 07B7  
                    u190 0773                      u407 06AF                      u351 07FA  
                    u271 07B6                      u191 0772                      u280 07BF  
                    u360 0640                      u281 07BE                      u361 063F  
                    u290 07CB                      u291 07CA                      u377 06C5  
                    u387 06E0                      u397 0694                      fsr0 0004  
            LCD_Cmd@data 0072          __end_of_LCD_Cmd 06E9                     STR_1 0009  
                   _main 0660                     btemp 007E                     start 0000  
       __end_of_LCD_Data 06B8         __end_of_LCD_Init 0660             LCD_Data@data 0072  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  _TRISC 0087              LCD_String@i 0075                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0687                   ??_main 0076                ??_LCD_Cmd 0070  
                 _Keypad 06E9                ?_LCD_Data 0070  __end_of__initialization 07FC  
              ?_LCD_Init 0070           __pcstackCOMMON 0070             ??_LCD_String 0074  
             ??_LCD_Data 0070               ??_LCD_Init 0073       __end_of_LCD_String 0641  
                ?_Keypad 0070               __pmaintext 0660                  _LCD_Cmd 06B8  
             __stringtab 0003            LCD_String@num 0073            LCD_String@str 0074  
                __ptext1 0626                  __ptext2 0641                  __ptext3 06B8  
                __ptext4 06E9                  __ptext5 0687     end_of_initialization 07FC  
              _PORTBbits 0006                _PORTCbits 0007           __end_of_Keypad 07FC  
    start_initialization 07FC                 ??_Keypad 0073                 ?_LCD_Cmd 0070  
              ___latbits 0002                __pstrings 0003                 _LCD_Data 0687  
               _LCD_Init 0641              __stringbase 0008       __end_of__stringtab 0009  
             _LCD_String 0626                stringcode 0003                 stringdir 0003  
               stringtab 0003  
