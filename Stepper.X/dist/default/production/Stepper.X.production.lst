

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 19 03:59:35 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	dabs	1,0x7E,2
     8     0000                     
     9                           ; Generated 22/03/2023 GMT
    10                           ; 
    11                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    12                           ; All rights reserved.
    13                           ; 
    14                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    15                           ; 
    16                           ; Redistribution and use in source and binary forms, with or without modification, are
    17                           ; permitted provided that the following conditions are met:
    18                           ; 
    19                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    20                           ;        conditions and the following disclaimer.
    21                           ; 
    22                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    23                           ;        of conditions and the following disclaimer in the documentation and/or other
    24                           ;        materials provided with the distribution. Publication is not required when
    25                           ;        this file is used in an embedded application.
    26                           ; 
    27                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    28                           ;        software without specific prior written permission.
    29                           ; 
    30                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    31                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    32                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    33                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    34                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    35                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    36                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    37                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    38                           ; 
    39                           ; 
    40                           ; Code-generator required, PIC16F877A Definitions
    41                           ; 
    42                           ; SFR Addresses
    43     0000                     	;# 
    44     0001                     	;# 
    45     0002                     	;# 
    46     0003                     	;# 
    47     0004                     	;# 
    48     0005                     	;# 
    49     0006                     	;# 
    50     0007                     	;# 
    51     0008                     	;# 
    52     0009                     	;# 
    53     000A                     	;# 
    54     000B                     	;# 
    55     000C                     	;# 
    56     000D                     	;# 
    57     000E                     	;# 
    58     000E                     	;# 
    59     000F                     	;# 
    60     0010                     	;# 
    61     0011                     	;# 
    62     0012                     	;# 
    63     0013                     	;# 
    64     0014                     	;# 
    65     0015                     	;# 
    66     0015                     	;# 
    67     0016                     	;# 
    68     0017                     	;# 
    69     0018                     	;# 
    70     0019                     	;# 
    71     001A                     	;# 
    72     001B                     	;# 
    73     001B                     	;# 
    74     001C                     	;# 
    75     001D                     	;# 
    76     001E                     	;# 
    77     001F                     	;# 
    78     0081                     	;# 
    79     0085                     	;# 
    80     0086                     	;# 
    81     0087                     	;# 
    82     0088                     	;# 
    83     0089                     	;# 
    84     008C                     	;# 
    85     008D                     	;# 
    86     008E                     	;# 
    87     0091                     	;# 
    88     0092                     	;# 
    89     0093                     	;# 
    90     0094                     	;# 
    91     0098                     	;# 
    92     0099                     	;# 
    93     009C                     	;# 
    94     009D                     	;# 
    95     009E                     	;# 
    96     009F                     	;# 
    97     010C                     	;# 
    98     010D                     	;# 
    99     010E                     	;# 
   100     010F                     	;# 
   101     018C                     	;# 
   102     018D                     	;# 
   103     0000                     	;# 
   104     0001                     	;# 
   105     0002                     	;# 
   106     0003                     	;# 
   107     0004                     	;# 
   108     0005                     	;# 
   109     0006                     	;# 
   110     0007                     	;# 
   111     0008                     	;# 
   112     0009                     	;# 
   113     000A                     	;# 
   114     000B                     	;# 
   115     000C                     	;# 
   116     000D                     	;# 
   117     000E                     	;# 
   118     000E                     	;# 
   119     000F                     	;# 
   120     0010                     	;# 
   121     0011                     	;# 
   122     0012                     	;# 
   123     0013                     	;# 
   124     0014                     	;# 
   125     0015                     	;# 
   126     0015                     	;# 
   127     0016                     	;# 
   128     0017                     	;# 
   129     0018                     	;# 
   130     0019                     	;# 
   131     001A                     	;# 
   132     001B                     	;# 
   133     001B                     	;# 
   134     001C                     	;# 
   135     001D                     	;# 
   136     001E                     	;# 
   137     001F                     	;# 
   138     0081                     	;# 
   139     0085                     	;# 
   140     0086                     	;# 
   141     0087                     	;# 
   142     0088                     	;# 
   143     0089                     	;# 
   144     008C                     	;# 
   145     008D                     	;# 
   146     008E                     	;# 
   147     0091                     	;# 
   148     0092                     	;# 
   149     0093                     	;# 
   150     0094                     	;# 
   151     0098                     	;# 
   152     0099                     	;# 
   153     009C                     	;# 
   154     009D                     	;# 
   155     009E                     	;# 
   156     009F                     	;# 
   157     010C                     	;# 
   158     010D                     	;# 
   159     010E                     	;# 
   160     010F                     	;# 
   161     018C                     	;# 
   162     018D                     	;# 
   163     0007                     _PORTC	set	7
   164     0041                     _RD1	set	65
   165     0040                     _RD0	set	64
   166     0087                     _TRISC	set	135
   167     0441                     _TRISD1	set	1089
   168     0440                     _TRISD0	set	1088
   169                           
   170                           	psect	cinit
   171     07FC                     start_initialization:	
   172                           ; #config settings
   173                           
   174     07FC                     __initialization:
   175     07FC                     end_of_initialization:	
   176                           ;End of C runtime variable initialization code
   177                           
   178     07FC                     __end_of__initialization:
   179     07FC  0183               	clrf	3
   180     07FD  120A  118A  2F9C   	ljmp	_main	;jump to C main() function
   181                           
   182                           	psect	cstackCOMMON
   183     0070                     __pcstackCOMMON:
   184     0070                     ?_main:
   185     0070                     ??_main:	
   186                           ; 1 bytes @ 0x0
   187                           
   188                           
   189                           ; 1 bytes @ 0x0
   190     0070                     	ds	2
   191     0072                     main@i:
   192                           
   193                           ; 1 bytes @ 0x2
   194     0072                     	ds	1
   195                           
   196                           	psect	maintext
   197     079C                     __pmaintext:	
   198 ;;
   199 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   200 ;;
   201 ;; *************** function _main *****************
   202 ;; Defined at:
   203 ;;		line 12 in file "main.c"
   204 ;; Parameters:    Size  Location     Type
   205 ;;		None
   206 ;; Auto vars:     Size  Location     Type
   207 ;;  i               1    2[COMMON] unsigned char 
   208 ;; Return value:  Size  Location     Type
   209 ;;                  1    wreg      void 
   210 ;; Registers used:
   211 ;;		wreg, status,2, status,0, btemp+1
   212 ;; Tracked objects:
   213 ;;		On entry : B00/0
   214 ;;		On exit  : 0/0
   215 ;;		Unchanged: 0/0
   216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   217 ;;      Params:         0       0       0       0       0
   218 ;;      Locals:         1       0       0       0       0
   219 ;;      Temps:          2       0       0       0       0
   220 ;;      Totals:         3       0       0       0       0
   221 ;;Total ram usage:        3 bytes
   222 ;; This function calls:
   223 ;;		Nothing
   224 ;; This function is called by:
   225 ;;		Startup code after reset
   226 ;; This function uses a non-reentrant model
   227 ;;
   228                           
   229     079C                     _main:	
   230                           ;psect for function _main
   231                           
   232     079C                     l574:	
   233                           ;incstack = 0
   234                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1]
   235                           
   236                           
   237                           ;main.c: 15:   unsigned char i=0;
   238     079C  01F2               	clrf	main@i
   239                           
   240                           ;main.c: 17:   TRISC = 0x00;
   241     079D  1683               	bsf	3,5	;RP0=1, select bank1
   242     079E  1303               	bcf	3,6	;RP1=0, select bank1
   243     079F  0187               	clrf	7	;volatile
   244                           
   245                           ;main.c: 19:   PORTC = 0x00;
   246     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   247     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   248     07A2  0187               	clrf	7	;volatile
   249     07A3                     l576:
   250                           
   251                           ;main.c: 21:   TRISD0 = 1;
   252     07A3  1683               	bsf	3,5	;RP0=1, select bank1
   253     07A4  1303               	bcf	3,6	;RP1=0, select bank1
   254     07A5  1408               	bsf	8,0	;volatile
   255     07A6                     l578:
   256                           
   257                           ;main.c: 22:   TRISD1 = 1;
   258     07A6  1488               	bsf	8,1	;volatile
   259     07A7  2FC7               	goto	l590
   260     07A8                     l580:
   261                           
   262                           ;main.c: 28:     {;main.c: 29:       PORTC = (1<<i);
   263     07A8  3001               	movlw	1
   264     07A9  00F0               	movwf	??_main
   265     07AA  0A72               	incf	main@i,w
   266     07AB  2FAE               	goto	u14
   267     07AC                     u15:
   268     07AC  1003               	clrc
   269     07AD  0DF0               	rlf	??_main,f
   270     07AE                     u14:
   271     07AE  3EFF               	addlw	-1
   272     07AF  1D03               	skipz
   273     07B0  2FAC               	goto	u15
   274     07B1  0870               	movf	??_main,w
   275     07B2  0087               	movwf	7	;volatile
   276     07B3                     l582:
   277                           
   278                           ;main.c: 30:       i++;
   279     07B3  3001               	movlw	1
   280     07B4  00FF               	movwf	btemp+1
   281     07B5  087F               	movf	btemp+1,w
   282     07B6  07F2               	addwf	main@i,f
   283     07B7                     l584:
   284                           
   285                           ;main.c: 31:       _delay((unsigned long)((100)*(4000000/4000.0)));
   286     07B7  3082               	movlw	130
   287     07B8  00F1               	movwf	??_main+1
   288     07B9  30DD               	movlw	221
   289     07BA  00F0               	movwf	??_main
   290     07BB                     u77:
   291     07BB  0BF0               	decfsz	??_main,f
   292     07BC  2FBB               	goto	u77
   293     07BD  0BF1               	decfsz	??_main+1,f
   294     07BE  2FBB               	goto	u77
   295     07BF  2FC0               	nop2
   296     07C0                     l586:
   297                           
   298                           ;main.c: 32:       if (i==4)
   299     07C0  3004               	movlw	4
   300     07C1  0672               	xorwf	main@i,w
   301     07C2  1D03               	btfss	3,2
   302     07C3  2FC5               	goto	u21
   303     07C4  2FC6               	goto	u20
   304     07C5                     u21:
   305     07C5  2FC7               	goto	l590
   306     07C6                     u20:
   307     07C6                     l588:
   308                           
   309                           ;main.c: 33:           i=0;
   310     07C6  01F2               	clrf	main@i
   311     07C7                     l590:
   312                           
   313                           ;main.c: 27:     while(RD0 == 0)
   314     07C7  1283               	bcf	3,5	;RP0=0, select bank0
   315     07C8  1303               	bcf	3,6	;RP1=0, select bank0
   316     07C9  1C08               	btfss	8,0	;volatile
   317     07CA  2FCC               	goto	u31
   318     07CB  2FCD               	goto	u30
   319     07CC                     u31:
   320     07CC  2FA8               	goto	l580
   321     07CD                     u30:
   322     07CD  2FF2               	goto	l600
   323     07CE                     l592:
   324                           
   325                           ;main.c: 37:     {;main.c: 38:       PORTC = (8>>i);
   326     07CE  0A72               	incf	main@i,w
   327     07CF  00FF               	movwf	btemp+1
   328     07D0  3008               	movlw	8
   329     07D1  00F0               	movwf	??_main
   330     07D2  3000               	movlw	0
   331     07D3  00F1               	movwf	??_main+1
   332     07D4  2FD8               	goto	u44
   333     07D5                     u45:
   334     07D5  0D71               	rlf	??_main+1,w
   335     07D6  0CF1               	rrf	??_main+1,f
   336     07D7  0CF0               	rrf	??_main,f
   337     07D8                     u44:
   338     07D8  0BFF               	decfsz	btemp+1,f
   339     07D9  2FD5               	goto	u45
   340     07DA  0870               	movf	??_main,w
   341     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   342     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   343     07DD  0087               	movwf	7	;volatile
   344                           
   345                           ;main.c: 39:       i++;
   346     07DE  3001               	movlw	1
   347     07DF  00FF               	movwf	btemp+1
   348     07E0  087F               	movf	btemp+1,w
   349     07E1  07F2               	addwf	main@i,f
   350     07E2                     l594:
   351                           
   352                           ;main.c: 40:       _delay((unsigned long)((100)*(4000000/4000.0)));
   353     07E2  3082               	movlw	130
   354     07E3  00F1               	movwf	??_main+1
   355     07E4  30DD               	movlw	221
   356     07E5  00F0               	movwf	??_main
   357     07E6                     u87:
   358     07E6  0BF0               	decfsz	??_main,f
   359     07E7  2FE6               	goto	u87
   360     07E8  0BF1               	decfsz	??_main+1,f
   361     07E9  2FE6               	goto	u87
   362     07EA  2FEB               	nop2
   363     07EB                     l596:
   364                           
   365                           ;main.c: 41:       if (i==4)
   366     07EB  3004               	movlw	4
   367     07EC  0672               	xorwf	main@i,w
   368     07ED  1D03               	btfss	3,2
   369     07EE  2FF0               	goto	u51
   370     07EF  2FF1               	goto	u50
   371     07F0                     u51:
   372     07F0  2FF2               	goto	l600
   373     07F1                     u50:
   374     07F1                     l598:
   375                           
   376                           ;main.c: 42:           i=0;
   377     07F1  01F2               	clrf	main@i
   378     07F2                     l600:
   379                           
   380                           ;main.c: 36:     while(RD1 == 0)
   381     07F2  1283               	bcf	3,5	;RP0=0, select bank0
   382     07F3  1303               	bcf	3,6	;RP1=0, select bank0
   383     07F4  1C88               	btfss	8,1	;volatile
   384     07F5  2FF7               	goto	u61
   385     07F6  2FF8               	goto	u60
   386     07F7                     u61:
   387     07F7  2FCE               	goto	l592
   388     07F8                     u60:
   389     07F8  2FC7               	goto	l590
   390     07F9  120A  118A  2800   	ljmp	start
   391     07FC                     __end_of_main:
   392     007E                     btemp	set	126	;btemp
   393     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0      60
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 19 03:59:35 2023

                     u20 07C6                       u21 07C5                       u30 07CD  
                     u14 07AE                       u31 07CC                       u15 07AC  
                     u50 07F1                       u51 07F0                       u60 07F8  
                     u44 07D8                       u61 07F7                       u45 07D5  
                     u77 07BB                       u87 07E6                      l600 07F2  
                    l580 07A8                      l582 07B3                      l590 07C7  
                    l574 079C                      l592 07CE                      l584 07B7  
                    l576 07A3                      l594 07E2                      l586 07C0  
                    l578 07A6                      l596 07EB                      l588 07C6  
                    l598 07F1                      _RD0 0040                      _RD1 0041  
                   _main 079C                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTC 0007                    _TRISC 0087  
                  main@i 0072                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0070  
                 _TRISD0 0440                   _TRISD1 0441  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 079C     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002  
