

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 19 04:23:11 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 22/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     001A                     _RCREG	set	26
   170     0019                     _TXREG	set	25
   171     0033                     _RB3	set	51
   172     0065                     _RCIF	set	101
   173     00C1                     _OERR	set	193
   174     0064                     _TXIF	set	100
   175     00C6                     _RX9	set	198
   176     00C4                     _CREN	set	196
   177     00C7                     _SPEN	set	199
   178     0086                     _TRISB	set	134
   179     0099                     _SPBRG	set	153
   180     04C6                     _TX9	set	1222
   181     04C5                     _TXEN	set	1221
   182     04C4                     _SYNC	set	1220
   183     04C2                     _BRGH	set	1218
   184     043F                     _TRISC7	set	1087
   185     043E                     _TRISC6	set	1086
   186                           
   187                           	psect	strings
   188     0003                     __pstrings:
   189     0003                     stringtab:
   190     0003                     __stringtab:
   191     0003                     stringcode:	
   192                           ;	String table - string pointers are 1 byte each
   193                           
   194     0003                     stringdir:
   195     0003  3000               	movlw	high stringdir
   196     0004  008A               	movwf	10
   197     0005  0804               	movf	4,w
   198     0006  0A84               	incf	4,f
   199     0007  0782               	addwf	2,f
   200     0008                     __stringbase:
   201     0008  3400               	retlw	0
   202     0009                     __end_of__stringtab:
   203     0009                     STR_2:
   204     0009  3452               	retlw	82	;'R'
   205     000A  3445               	retlw	69	;'E'
   206     000B  3444               	retlw	68	;'D'
   207     000C  3420               	retlw	32	;' '
   208     000D  344C               	retlw	76	;'L'
   209     000E  3445               	retlw	69	;'E'
   210     000F  3444               	retlw	68	;'D'
   211     0010  3420               	retlw	32	;' '
   212     0011  342D               	retlw	45	;'-'
   213     0012  343E               	retlw	62	;'>'
   214     0013  3420               	retlw	32	;' '
   215     0014  344F               	retlw	79	;'O'
   216     0015  344E               	retlw	78	;'N'
   217     0016  3400               	retlw	0
   218     0017                     STR_3:
   219     0017  3452               	retlw	82	;'R'
   220     0018  3445               	retlw	69	;'E'
   221     0019  3444               	retlw	68	;'D'
   222     001A  3420               	retlw	32	;' '
   223     001B  342D               	retlw	45	;'-'
   224     001C  343E               	retlw	62	;'>'
   225     001D  3420               	retlw	32	;' '
   226     001E  344F               	retlw	79	;'O'
   227     001F  3446               	retlw	70	;'F'
   228     0020  3446               	retlw	70	;'F'
   229     0021  3400               	retlw	0
   230     0022                     STR_1:
   231     0022  344C               	retlw	76	;'L'
   232     0023  3465               	retlw	101	;'e'
   233     0024  3477               	retlw	119	;'w'
   234     0025  344C               	retlw	76	;'L'
   235     0026  3465               	retlw	101	;'e'
   236     0027  3477               	retlw	119	;'w'
   237     0028  3400               	retlw	0
   238                           
   239                           	psect	cinit
   240     07FC                     start_initialization:	
   241                           ; #config settings
   242                           
   243     07FC                     __initialization:
   244     07FC                     end_of_initialization:	
   245                           ;End of C runtime variable initialization code
   246                           
   247     07FC                     __end_of__initialization:
   248     07FC  0183               	clrf	3
   249     07FD  120A  118A  2FB3   	ljmp	_main	;jump to C main() function
   250                           
   251                           	psect	cstackCOMMON
   252     0070                     __pcstackCOMMON:
   253     0070                     ?_Initialize_UART:
   254     0070                     ??_Initialize_UART:	
   255                           ; 1 bytes @ 0x0
   256                           
   257     0070                     ?_UART_send_char:	
   258                           ; 1 bytes @ 0x0
   259                           
   260     0070                     ??_UART_send_char:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ?_UART_get_char:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0070                     ??_UART_get_char:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0070                     ?_UART_send_string:	
   270                           ; 1 bytes @ 0x0
   271                           
   272     0070                     ?_main:	
   273                           ; 1 bytes @ 0x0
   274                           
   275     0070                     UART_send_char@bt:	
   276                           ; 1 bytes @ 0x0
   277                           
   278                           
   279                           ; 1 bytes @ 0x0
   280     0070                     	ds	1
   281     0071                     ??_UART_send_string:
   282     0071                     UART_send_string@st_pt:	
   283                           ; 1 bytes @ 0x1
   284                           
   285                           
   286                           ; 1 bytes @ 0x1
   287     0071                     	ds	1
   288     0072                     ??_main:
   289                           
   290                           ; 1 bytes @ 0x2
   291     0072                     	ds	2
   292     0074                     main@get_value:
   293                           
   294                           ; 2 bytes @ 0x4
   295     0074                     	ds	2
   296                           
   297                           	psect	maintext
   298     07B3                     __pmaintext:	
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   301 ;;
   302 ;; *************** function _main *****************
   303 ;; Defined at:
   304 ;;		line 60 in file "main.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;  get_value       2    4[COMMON] int 
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : B00/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   318 ;;      Params:         0       0       0       0       0
   319 ;;      Locals:         2       0       0       0       0
   320 ;;      Temps:          2       0       0       0       0
   321 ;;      Totals:         4       0       0       0       0
   322 ;;Total ram usage:        4 bytes
   323 ;; Hardware stack levels required when called: 2
   324 ;; This function calls:
   325 ;;		_Initialize_UART
   326 ;;		_UART_get_char
   327 ;;		_UART_send_char
   328 ;;		_UART_send_string
   329 ;; This function is called by:
   330 ;;		Startup code after reset
   331 ;; This function uses a non-reentrant model
   332 ;;
   333                           
   334     07B3                     _main:	
   335                           ;psect for function _main
   336                           
   337     07B3                     l680:	
   338                           ;incstack = 0
   339                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   340                           
   341     07B3  1683               	bsf	3,5	;RP0=1, select bank1
   342     07B4  1303               	bcf	3,6	;RP1=0, select bank1
   343     07B5  0186               	clrf	6	;volatile
   344     07B6                     l682:
   345     07B6  120A  118A  277C  120A  118A  	fcall	_Initialize_UART
   346     07BB                     l684:
   347     07BB  301A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   348     07BC  120A  118A  2794  120A  118A  	fcall	_UART_send_string
   349     07C1                     l686:
   350     07C1  120A  118A  276E  120A  118A  	fcall	_UART_get_char
   351     07C6  00F2               	movwf	??_main
   352     07C7  01F3               	clrf	??_main+1
   353     07C8  0872               	movf	??_main,w
   354     07C9  00F4               	movwf	main@get_value
   355     07CA  0873               	movf	??_main+1,w
   356     07CB  00F5               	movwf	main@get_value+1
   357     07CC                     l688:
   358     07CC  3031               	movlw	49
   359     07CD  0674               	xorwf	main@get_value,w
   360     07CE  0475               	iorwf	main@get_value+1,w
   361     07CF  1D03               	btfss	3,2
   362     07D0  2FD2               	goto	u81
   363     07D1  2FD3               	goto	u80
   364     07D2                     u81:
   365     07D2  2FE2               	goto	l696
   366     07D3                     u80:
   367     07D3                     l690:
   368     07D3  1283               	bcf	3,5	;RP0=0, select bank0
   369     07D4  1303               	bcf	3,6	;RP1=0, select bank0
   370     07D5  1586               	bsf	6,3	;volatile
   371     07D6                     l692:
   372     07D6  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   373     07D7  120A  118A  2794  120A  118A  	fcall	_UART_send_string
   374     07DC                     l694:
   375     07DC  300A               	movlw	10
   376     07DD  120A  118A  2764  120A  118A  	fcall	_UART_send_char
   377     07E2                     l696:
   378     07E2  3030               	movlw	48
   379     07E3  0674               	xorwf	main@get_value,w
   380     07E4  0475               	iorwf	main@get_value+1,w
   381     07E5  1D03               	btfss	3,2
   382     07E6  2FE8               	goto	u91
   383     07E7  2FE9               	goto	u90
   384     07E8                     u91:
   385     07E8  2FC1               	goto	l686
   386     07E9                     u90:
   387     07E9                     l698:
   388     07E9  1283               	bcf	3,5	;RP0=0, select bank0
   389     07EA  1303               	bcf	3,6	;RP1=0, select bank0
   390     07EB  1186               	bcf	6,3	;volatile
   391     07EC                     l700:
   392     07EC  300F               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   393     07ED  120A  118A  2794  120A  118A  	fcall	_UART_send_string
   394     07F2                     l702:
   395     07F2  300A               	movlw	10
   396     07F3  120A  118A  2764  120A  118A  	fcall	_UART_send_char
   397     07F8  2FC1               	goto	l686
   398     07F9  120A  118A  2800   	ljmp	start
   399     07FC                     __end_of_main:
   400                           
   401                           	psect	text1
   402     0794                     __ptext1:	
   403 ;; *************** function _UART_send_string *****************
   404 ;; Defined at:
   405 ;;		line 53 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;  st_pt           1    wreg     PTR unsigned char 
   408 ;;		 -> STR_3(11), STR_2(14), STR_1(7), 
   409 ;; Auto vars:     Size  Location     Type
   410 ;;  st_pt           1    1[COMMON] PTR unsigned char 
   411 ;;		 -> STR_3(11), STR_2(14), STR_1(7), 
   412 ;; Return value:  Size  Location     Type
   413 ;;                  1    wreg      void 
   414 ;; Registers used:
   415 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   416 ;; Tracked objects:
   417 ;;		On entry : 0/0
   418 ;;		On exit  : 0/0
   419 ;;		Unchanged: 0/0
   420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   421 ;;      Params:         0       0       0       0       0
   422 ;;      Locals:         1       0       0       0       0
   423 ;;      Temps:          0       0       0       0       0
   424 ;;      Totals:         1       0       0       0       0
   425 ;;Total ram usage:        1 bytes
   426 ;; Hardware stack levels used: 1
   427 ;; Hardware stack levels required when called: 1
   428 ;; This function calls:
   429 ;;		_UART_send_char
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435     0794                     _UART_send_string:	
   436                           ;psect for function _UART_send_string
   437                           
   438                           
   439                           ;incstack = 0
   440                           ; Regs used in _UART_send_string: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   441                           ;UART_send_string@st_pt stored from wreg
   442     0794  00F1               	movwf	UART_send_string@st_pt
   443     0795                     l672:
   444                           
   445                           ;main.c: 53:         {;main.c: 54:            RB3=0;;main.c: 55:            UART_send_st
      +                          ring("RED -> OFF");
   446     0795  2FA6               	goto	l678
   447     0796                     l674:
   448                           
   449                           ;main.c: 57:         }
   450     0796  0871               	movf	UART_send_string@st_pt,w
   451     0797  0084               	movwf	4
   452     0798  120A  118A  2003  120A  118A  	fcall	stringdir
   453     079D  120A  118A  2764  120A  118A  	fcall	_UART_send_char
   454     07A2                     l676:
   455     07A2  3001               	movlw	1
   456     07A3  00FF               	movwf	btemp+1
   457     07A4  087F               	movf	btemp+1,w
   458     07A5  07F1               	addwf	UART_send_string@st_pt,f
   459     07A6                     l678:
   460                           
   461                           ;main.c: 55:            UART_send_string("RED -> OFF");
   462     07A6  0871               	movf	UART_send_string@st_pt,w
   463     07A7  0084               	movwf	4
   464     07A8  120A  118A  2003  120A  118A  	fcall	stringdir
   465     07AD  3A00               	xorlw	0
   466     07AE  1D03               	skipz
   467     07AF  2FB1               	goto	u71
   468     07B0  2FB2               	goto	u70
   469     07B1                     u71:
   470     07B1  2F96               	goto	l674
   471     07B2                     u70:
   472     07B2                     l56:
   473     07B2  0008               	return
   474     07B3                     __end_of_UART_send_string:
   475                           
   476                           	psect	text2
   477     0764                     __ptext2:	
   478 ;; *************** function _UART_send_char *****************
   479 ;; Defined at:
   480 ;;		line 36 in file "main.c"
   481 ;; Parameters:    Size  Location     Type
   482 ;;  bt              1    wreg     unsigned char 
   483 ;; Auto vars:     Size  Location     Type
   484 ;;  bt              1    0[COMMON] unsigned char 
   485 ;; Return value:  Size  Location     Type
   486 ;;                  1    wreg      void 
   487 ;; Registers used:
   488 ;;		wreg
   489 ;; Tracked objects:
   490 ;;		On entry : 0/0
   491 ;;		On exit  : 0/0
   492 ;;		Unchanged: 0/0
   493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   494 ;;      Params:         0       0       0       0       0
   495 ;;      Locals:         1       0       0       0       0
   496 ;;      Temps:          0       0       0       0       0
   497 ;;      Totals:         1       0       0       0       0
   498 ;;Total ram usage:        1 bytes
   499 ;; Hardware stack levels used: 1
   500 ;; This function calls:
   501 ;;		Nothing
   502 ;; This function is called by:
   503 ;;		_UART_send_string
   504 ;;		_main
   505 ;; This function uses a non-reentrant model
   506 ;;
   507                           
   508     0764                     _UART_send_char:	
   509                           ;psect for function _UART_send_char
   510                           
   511                           
   512                           ;incstack = 0
   513                           ; Regs used in _UART_send_char: [wreg]
   514                           ;UART_send_char@bt stored from wreg
   515     0764  00F0               	movwf	UART_send_char@bt
   516     0765                     l610:
   517     0765                     l40:	
   518                           ;main.c: 36: ;main.c: 37: void main(void);main.c: 38: {
   519                           
   520     0765  1283               	bcf	3,5	;RP0=0, select bank0
   521     0766  1303               	bcf	3,6	;RP1=0, select bank0
   522     0767  1E0C               	btfss	12,4	;volatile
   523     0768  2F6A               	goto	u11
   524     0769  2F6B               	goto	u10
   525     076A                     u11:
   526     076A  2F65               	goto	l40
   527     076B                     u10:
   528     076B                     l612:
   529                           
   530                           ;main.c: 39:     int get_value;
   531     076B  0870               	movf	UART_send_char@bt,w
   532     076C  0099               	movwf	25	;volatile
   533     076D                     l43:
   534     076D  0008               	return
   535     076E                     __end_of_UART_send_char:
   536                           
   537                           	psect	text3
   538     076E                     __ptext3:	
   539 ;; *************** function _UART_get_char *****************
   540 ;; Defined at:
   541 ;;		line 42 in file "main.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;		None
   546 ;; Return value:  Size  Location     Type
   547 ;;                  1    wreg      unsigned char 
   548 ;; Registers used:
   549 ;;		wreg
   550 ;; Tracked objects:
   551 ;;		On entry : 0/0
   552 ;;		On exit  : 0/0
   553 ;;		Unchanged: 0/0
   554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   555 ;;      Params:         0       0       0       0       0
   556 ;;      Locals:         0       0       0       0       0
   557 ;;      Temps:          0       0       0       0       0
   558 ;;      Totals:         0       0       0       0       0
   559 ;;Total ram usage:        0 bytes
   560 ;; Hardware stack levels used: 1
   561 ;; This function calls:
   562 ;;		Nothing
   563 ;; This function is called by:
   564 ;;		_main
   565 ;; This function uses a non-reentrant model
   566 ;;
   567                           
   568     076E                     _UART_get_char:	
   569                           ;psect for function _UART_get_char
   570                           
   571     076E                     l632:	
   572                           ;incstack = 0
   573                           ; Regs used in _UART_get_char: [wreg]
   574                           
   575                           
   576                           ;main.c: 44:     {
   577     076E  1283               	bcf	3,5	;RP0=0, select bank0
   578     076F  1303               	bcf	3,6	;RP1=0, select bank0
   579     0770  1C98               	btfss	24,1	;volatile
   580     0771  2F73               	goto	u21
   581     0772  2F74               	goto	u20
   582     0773                     u21:
   583     0773  2F76               	goto	l47
   584     0774                     u20:
   585     0774                     l634:
   586                           
   587                           ;main.c: 45:       get_value = UART_get_char();;main.c: 46:         if (get_value == '1'
      +                          )
   588     0774  1218               	bcf	24,4	;volatile
   589                           
   590                           ;main.c: 47:         {
   591     0775  1618               	bsf	24,4	;volatile
   592     0776                     l47:
   593     0776  1E8C               	btfss	12,5	;volatile
   594     0777  2F79               	goto	u31
   595     0778  2F7A               	goto	u30
   596     0779                     u31:
   597     0779  2F76               	goto	l47
   598     077A                     u30:
   599     077A                     l636:
   600                           
   601                           ;main.c: 50:             UART_send_char(10);
   602     077A  081A               	movf	26,w	;volatile
   603     077B                     l50:
   604     077B  0008               	return
   605     077C                     __end_of_UART_get_char:
   606                           
   607                           	psect	text4
   608     077C                     __ptext4:	
   609 ;; *************** function _Initialize_UART *****************
   610 ;; Defined at:
   611 ;;		line 22 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;		None
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   625 ;;      Params:         0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0
   627 ;;      Temps:          0       0       0       0       0
   628 ;;      Totals:         0       0       0       0       0
   629 ;;Total ram usage:        0 bytes
   630 ;; Hardware stack levels used: 1
   631 ;; This function calls:
   632 ;;		Nothing
   633 ;; This function is called by:
   634 ;;		_main
   635 ;; This function uses a non-reentrant model
   636 ;;
   637                           
   638     077C                     _Initialize_UART:	
   639                           ;psect for function _Initialize_UART
   640                           
   641     077C                     l614:	
   642                           ;incstack = 0
   643                           ; Regs used in _Initialize_UART: [wreg]
   644                           
   645                           
   646                           ;main.c: 24:         CREN = 1;
   647     077C  1683               	bsf	3,5	;RP0=1, select bank1
   648     077D  1303               	bcf	3,6	;RP1=0, select bank1
   649     077E  1307               	bcf	7,6	;volatile
   650                           
   651                           ;main.c: 25:     }
   652     077F  1787               	bsf	7,7	;volatile
   653     0780                     l616:
   654                           
   655                           ;main.c: 26:     while(!RCIF);
   656     0780  3019               	movlw	25
   657     0781  0099               	movwf	25	;volatile
   658     0782                     l618:
   659                           
   660                           ;main.c: 27:     return RCREG;
   661     0782  1518               	bsf	24,2	;volatile
   662     0783                     l620:
   663                           
   664                           ;main.c: 28: }
   665     0783  1218               	bcf	24,4	;volatile
   666     0784                     l622:
   667                           
   668                           ;main.c: 29: 
   669     0784  1283               	bcf	3,5	;RP0=0, select bank0
   670     0785  1303               	bcf	3,6	;RP1=0, select bank0
   671     0786  1798               	bsf	24,7	;volatile
   672     0787                     l624:
   673                           
   674                           ;main.c: 30: void UART_send_string(char* st_pt)
   675     0787  1683               	bsf	3,5	;RP0=1, select bank1
   676     0788  1303               	bcf	3,6	;RP1=0, select bank1
   677     0789  1698               	bsf	24,5	;volatile
   678     078A                     l626:
   679                           
   680                           ;main.c: 31: {
   681     078A  1283               	bcf	3,5	;RP0=0, select bank0
   682     078B  1303               	bcf	3,6	;RP1=0, select bank0
   683     078C  1618               	bsf	24,4	;volatile
   684     078D                     l628:
   685                           
   686                           ;main.c: 32:     while(*st_pt)
   687     078D  1683               	bsf	3,5	;RP0=1, select bank1
   688     078E  1303               	bcf	3,6	;RP1=0, select bank1
   689     078F  1318               	bcf	24,6	;volatile
   690     0790                     l630:
   691                           
   692                           ;main.c: 33: 
   693     0790  1283               	bcf	3,5	;RP0=0, select bank0
   694     0791  1303               	bcf	3,6	;RP1=0, select bank0
   695     0792  1318               	bcf	24,6	;volatile
   696     0793                     l37:
   697     0793  0008               	return
   698     0794                     __end_of_Initialize_UART:
   699     007E                     btemp	set	126	;btemp
   700     007E                     wtemp0	set	126
   701                           
   702                           	psect	config
   703                           
   704                           ;Config register CONFIG @ 0x2007
   705                           ;	Oscillator Selection bits
   706                           ;	FOSC = HS, HS oscillator
   707                           ;	Watchdog Timer Enable bit
   708                           ;	WDTE = OFF, WDT disabled
   709                           ;	Power-up Timer Enable bit
   710                           ;	PWRTE = OFF, PWRT disabled
   711                           ;	Brown-out Reset Enable bit
   712                           ;	BOREN = ON, BOR enabled
   713                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   714                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   715                           ;	Data EEPROM Memory Code Protection bit
   716                           ;	CPD = OFF, Data EEPROM code protection off
   717                           ;	Flash Program Memory Write Enable bits
   718                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   719                           ;	In-Circuit Debugger Mode bit
   720                           ;	DEBUG = 0x1, unprogrammed default
   721                           ;	Flash Program Memory Code Protection bit
   722                           ;	CP = OFF, Code protection off
   723     2007                     	org	8199
   724     2007  3F7A               	dw	16250

Data Sizes:
    Strings     32
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6       6
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    UART_send_string@st_pt	PTR unsigned char  size(1) Largest target is 14
		 -> STR_1(CODE[7]), STR_2(CODE[14]), STR_3(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_UART_send_string
    _UART_send_string->_UART_send_char

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     219
                                              2 COMMON     4     4      0
                    _Initialize_UART
                      _UART_get_char
                     _UART_send_char
                   _UART_send_string
 ---------------------------------------------------------------------------------
 (1) _UART_send_string                                     1     1      0     159
                                              1 COMMON     1     1      0
                     _UART_send_char
 ---------------------------------------------------------------------------------
 (2) _UART_send_char                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART_get_char                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Initialize_UART                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_UART
   _UART_get_char
   _UART_send_char
   _UART_send_string
     _UART_send_char

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       6       1       42.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 19 04:23:11 2023

                       pc 0002                        l40 0765                        l50 077B  
                      l43 076D                        l37 0793                        l47 0776  
                      l56 07B2                        u10 076B                        u11 076A  
                      u20 0774                        u21 0773                        u30 077A  
                      u31 0779                        u70 07B2                        u71 07B1  
                      u80 07D3                        u81 07D2                        u90 07E9  
                      u91 07E8                        fsr 0004                       l610 0765  
                     l620 0783                       l612 076B                       l700 07EC  
                     l630 0790                       l622 0784                       l614 077C  
                     l702 07F2                       l624 0787                       l616 0780  
                     l632 076E                       l626 078A                       l618 0782  
                     l634 0774                       l628 078D                       l636 077A  
                     l672 0795                       l680 07B3                       l674 0796  
                     l690 07D3                       l682 07B6                       l676 07A2  
                     l692 07D6                       l684 07BB                       l678 07A6  
                     l694 07DC                       l686 07C1                       l696 07E2  
                     l688 07CC                       l698 07E9                       _RB3 0033  
                     _RX9 00C6                       _TX9 04C6                       fsr0 0004  
                    STR_1 0022                      STR_2 0009                      STR_3 0017  
                    _BRGH 04C2                      _CREN 00C4                      _RCIF 0065  
                    _OERR 00C1                      _SPEN 00C7                      _TXEN 04C5  
                    _TXIF 0064                      _SYNC 04C4                      _main 07B3  
                    btemp 007E                      start 0000                     ?_main 0070  
                   _RCREG 001A                     _SPBRG 0099                     _TRISB 0086  
                   _TXREG 0019                     pclath 000A                     status 0003  
                   wtemp0 007E           __initialization 07FC              __end_of_main 07FC  
                  ??_main 0072             main@get_value 0074                    _TRISC6 043E  
                  _TRISC7 043F   __end_of__initialization 07FC            __pcstackCOMMON 0070  
        _UART_send_string 0794     __end_of_UART_get_char 077C                __pmaintext 07B3  
              __stringtab 0003                   __ptext1 0794                   __ptext2 0764  
                 __ptext3 076E                   __ptext4 077C         ??_Initialize_UART 0070  
    end_of_initialization 07FC  __end_of_UART_send_string 07B3       start_initialization 07FC  
          _UART_send_char 0764    __end_of_UART_send_char 076E                 ___latbits 0002  
         _Initialize_UART 077C          UART_send_char@bt 0070                 __pstrings 0003  
         ?_UART_send_char 0070               __stringbase 0008     UART_send_string@st_pt 0071  
           _UART_get_char 076E         ?_UART_send_string 0070        ??_UART_send_string 0071  
 __end_of_Initialize_UART 0794        __end_of__stringtab 0009            ?_UART_get_char 0070  
        ?_Initialize_UART 0070                 stringcode 0003          ??_UART_send_char 0070  
         ??_UART_get_char 0070                  stringdir 0003                  stringtab 0003  
