

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 19 01:21:31 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 22/03/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     0008                     _PORTD	set	8
   166     000B                     _INTCONbits	set	11
   167     0030                     _RB0	set	48
   168     0033                     _RB3	set	51
   169     0032                     _RB2	set	50
   170     0031                     _RB1	set	49
   171     0088                     _TRISD	set	136
   172     0086                     _TRISB	set	134
   173     010C                     _EEDATA	set	268
   174     010D                     _EEADR	set	269
   175     018D                     _EECON2	set	397
   176     018C                     _EECON1bits	set	396
   177                           
   178                           	psect	cinit
   179     07FC                     start_initialization:	
   180                           ; #config settings
   181                           
   182     07FC                     __initialization:
   183     07FC                     end_of_initialization:	
   184                           ;End of C runtime variable initialization code
   185                           
   186     07FC                     __end_of__initialization:
   187     07FC  0183               	clrf	3
   188     07FD  120A  118A  2F64   	ljmp	_main	;jump to C main() function
   189                           
   190                           	psect	cstackCOMMON
   191     0070                     __pcstackCOMMON:
   192     0070                     ?_EEPROM_W:
   193     0070                     ?_main:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0070                     ?_EEPROM_R:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     0070                     EEPROM_W@Dulieu:	
   200                           ; 2 bytes @ 0x0
   201                           
   202                           
   203                           ; 1 bytes @ 0x0
   204     0070                     	ds	1
   205     0071                     ??_EEPROM_W:
   206     0071                     EEPROM_W@Dc:	
   207                           ; 1 bytes @ 0x1
   208                           
   209                           
   210                           ; 1 bytes @ 0x1
   211     0071                     	ds	1
   212     0072                     ??_EEPROM_R:
   213                           
   214                           ; 1 bytes @ 0x2
   215     0072                     	ds	2
   216     0074                     EEPROM_R@Dc:
   217                           
   218                           ; 1 bytes @ 0x4
   219     0074                     	ds	1
   220     0075                     EEPROM_R@Dulieu:
   221                           
   222                           ; 1 bytes @ 0x5
   223     0075                     	ds	1
   224     0076                     ??_main:
   225                           
   226                           ; 1 bytes @ 0x6
   227     0076                     	ds	3
   228     0079                     main@i_115:
   229                           
   230                           ; 1 bytes @ 0x9
   231     0079                     	ds	1
   232     007A                     main@dc:
   233                           
   234                           ; 1 bytes @ 0xA
   235     007A                     	ds	1
   236                           
   237                           	psect	maintext
   238     0764                     __pmaintext:	
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 44 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;  i               1    9[COMMON] unsigned char 
   249 ;;  i               1    0        unsigned char 
   250 ;;  dc              1   10[COMMON] unsigned char 
   251 ;; Return value:  Size  Location     Type
   252 ;;                  1    wreg      void 
   253 ;; Registers used:
   254 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   255 ;; Tracked objects:
   256 ;;		On entry : B00/0
   257 ;;		On exit  : 0/0
   258 ;;		Unchanged: 0/0
   259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   260 ;;      Params:         0       0       0       0       0
   261 ;;      Locals:         2       0       0       0       0
   262 ;;      Temps:          3       0       0       0       0
   263 ;;      Totals:         5       0       0       0       0
   264 ;;Total ram usage:        5 bytes
   265 ;; Hardware stack levels required when called: 1
   266 ;; This function calls:
   267 ;;		_EEPROM_R
   268 ;;		_EEPROM_W
   269 ;; This function is called by:
   270 ;;		Startup code after reset
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274     0764                     _main:	
   275                           ;psect for function _main
   276                           
   277     0764                     l696:	
   278                           ;incstack = 0
   279                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   280                           
   281                           
   282                           ;main.c: 45:     TRISB = 0x0F;
   283     0764  300F               	movlw	15
   284     0765  1683               	bsf	3,5	;RP0=1, select bank1
   285     0766  1303               	bcf	3,6	;RP1=0, select bank1
   286     0767  0086               	movwf	6	;volatile
   287     0768                     l698:
   288                           
   289                           ;main.c: 46:     TRISD = 0x00;
   290     0768  0188               	clrf	8	;volatile
   291     0769                     l700:
   292                           
   293                           ;main.c: 47:     PORTD = 0x00;
   294     0769  1283               	bcf	3,5	;RP0=0, select bank0
   295     076A  1303               	bcf	3,6	;RP1=0, select bank0
   296     076B  0188               	clrf	8	;volatile
   297     076C                     l702:
   298                           
   299                           ;main.c: 51:         if(RB1){
   300     076C  1283               	bcf	3,5	;RP0=0, select bank0
   301     076D  1303               	bcf	3,6	;RP1=0, select bank0
   302     076E  1C86               	btfss	6,1	;volatile
   303     076F  2F71               	goto	u91
   304     0770  2F72               	goto	u90
   305     0771                     u91:
   306     0771  2F8B               	goto	l710
   307     0772                     u90:
   308     0772                     l704:
   309                           
   310                           ;main.c: 52:             EEPROM_W(dc++, 1);
   311     0772  01F0               	clrf	EEPROM_W@Dulieu
   312     0773  0AF0               	incf	EEPROM_W@Dulieu,f
   313     0774  087A               	movf	main@dc,w
   314     0775  120A  118A  2749  120A  118A  	fcall	_EEPROM_W
   315     077A                     l706:
   316     077A  3001               	movlw	1
   317     077B  00FF               	movwf	btemp+1
   318     077C  087F               	movf	btemp+1,w
   319     077D  07FA               	addwf	main@dc,f
   320     077E                     l708:
   321                           
   322                           ;main.c: 53:             _delay((unsigned long)((500)*(4000000/4000.0)));
   323     077E  3003               	movlw	3
   324     077F  00F8               	movwf	??_main+2
   325     0780  308A               	movlw	138
   326     0781  00F7               	movwf	??_main+1
   327     0782  3055               	movlw	85
   328     0783  00F6               	movwf	??_main
   329     0784                     u157:
   330     0784  0BF6               	decfsz	??_main,f
   331     0785  2F84               	goto	u157
   332     0786  0BF7               	decfsz	??_main+1,f
   333     0787  2F84               	goto	u157
   334     0788  0BF8               	decfsz	??_main+2,f
   335     0789  2F84               	goto	u157
   336     078A  2F8B               	nop2
   337     078B                     l710:
   338                           
   339                           ;main.c: 55:         if(RB2){
   340     078B  1283               	bcf	3,5	;RP0=0, select bank0
   341     078C  1303               	bcf	3,6	;RP1=0, select bank0
   342     078D  1D06               	btfss	6,2	;volatile
   343     078E  2F90               	goto	u101
   344     078F  2F91               	goto	u100
   345     0790                     u101:
   346     0790  2FAA               	goto	l718
   347     0791                     u100:
   348     0791                     l712:
   349                           
   350                           ;main.c: 56:             EEPROM_W(dc++, 2);
   351     0791  3002               	movlw	2
   352     0792  00F0               	movwf	EEPROM_W@Dulieu
   353     0793  087A               	movf	main@dc,w
   354     0794  120A  118A  2749  120A  118A  	fcall	_EEPROM_W
   355     0799                     l714:
   356     0799  3001               	movlw	1
   357     079A  00FF               	movwf	btemp+1
   358     079B  087F               	movf	btemp+1,w
   359     079C  07FA               	addwf	main@dc,f
   360     079D                     l716:
   361                           
   362                           ;main.c: 57:             _delay((unsigned long)((500)*(4000000/4000.0)));
   363     079D  3003               	movlw	3
   364     079E  00F8               	movwf	??_main+2
   365     079F  308A               	movlw	138
   366     07A0  00F7               	movwf	??_main+1
   367     07A1  3055               	movlw	85
   368     07A2  00F6               	movwf	??_main
   369     07A3                     u167:
   370     07A3  0BF6               	decfsz	??_main,f
   371     07A4  2FA3               	goto	u167
   372     07A5  0BF7               	decfsz	??_main+1,f
   373     07A6  2FA3               	goto	u167
   374     07A7  0BF8               	decfsz	??_main+2,f
   375     07A8  2FA3               	goto	u167
   376     07A9  2FAA               	nop2
   377     07AA                     l718:
   378                           
   379                           ;main.c: 59:         if(RB3){
   380     07AA  1283               	bcf	3,5	;RP0=0, select bank0
   381     07AB  1303               	bcf	3,6	;RP1=0, select bank0
   382     07AC  1D86               	btfss	6,3	;volatile
   383     07AD  2FAF               	goto	u111
   384     07AE  2FB0               	goto	u110
   385     07AF                     u111:
   386     07AF  2FC9               	goto	l726
   387     07B0                     u110:
   388     07B0                     l720:
   389                           
   390                           ;main.c: 60:             EEPROM_W(dc++, 3);
   391     07B0  3003               	movlw	3
   392     07B1  00F0               	movwf	EEPROM_W@Dulieu
   393     07B2  087A               	movf	main@dc,w
   394     07B3  120A  118A  2749  120A  118A  	fcall	_EEPROM_W
   395     07B8                     l722:
   396     07B8  3001               	movlw	1
   397     07B9  00FF               	movwf	btemp+1
   398     07BA  087F               	movf	btemp+1,w
   399     07BB  07FA               	addwf	main@dc,f
   400     07BC                     l724:
   401                           
   402                           ;main.c: 61:             _delay((unsigned long)((500)*(4000000/4000.0)));
   403     07BC  3003               	movlw	3
   404     07BD  00F8               	movwf	??_main+2
   405     07BE  308A               	movlw	138
   406     07BF  00F7               	movwf	??_main+1
   407     07C0  3055               	movlw	85
   408     07C1  00F6               	movwf	??_main
   409     07C2                     u177:
   410     07C2  0BF6               	decfsz	??_main,f
   411     07C3  2FC2               	goto	u177
   412     07C4  0BF7               	decfsz	??_main+1,f
   413     07C5  2FC2               	goto	u177
   414     07C6  0BF8               	decfsz	??_main+2,f
   415     07C7  2FC2               	goto	u177
   416     07C8  2FC9               	nop2
   417     07C9                     l726:
   418                           
   419                           ;main.c: 63:         if(dc == 3){
   420     07C9  3003               	movlw	3
   421     07CA  067A               	xorwf	main@dc,w
   422     07CB  1D03               	btfss	3,2
   423     07CC  2FCE               	goto	u121
   424     07CD  2FCF               	goto	u120
   425     07CE                     u121:
   426     07CE  2FD0               	goto	l730
   427     07CF                     u120:
   428     07CF                     l728:
   429                           
   430                           ;main.c: 64:             dc = 0;
   431     07CF  01FA               	clrf	main@dc
   432     07D0                     l730:
   433                           
   434                           ;main.c: 66:         if(RB0 == 0){
   435     07D0  1283               	bcf	3,5	;RP0=0, select bank0
   436     07D1  1303               	bcf	3,6	;RP1=0, select bank0
   437     07D2  1806               	btfsc	6,0	;volatile
   438     07D3  2FD5               	goto	u131
   439     07D4  2FD6               	goto	u130
   440     07D5                     u131:
   441     07D5  2F6C               	goto	l702
   442     07D6                     u130:
   443     07D6                     l732:
   444                           
   445                           ;main.c: 67:             uint8_t i;;main.c: 68:             for(uint8_t i = 0; i < 3; i+
      +                          +){
   446     07D6  01F9               	clrf	main@i_115
   447     07D7                     l738:
   448                           
   449                           ;main.c: 69:                 PORTD = EEPROM_R(i);
   450     07D7  0879               	movf	main@i_115,w
   451     07D8  120A  118A  2734  120A  118A  	fcall	_EEPROM_R
   452     07DD  0870               	movf	?_EEPROM_R,w
   453     07DE  1283               	bcf	3,5	;RP0=0, select bank0
   454     07DF  1303               	bcf	3,6	;RP1=0, select bank0
   455     07E0  0088               	movwf	8	;volatile
   456     07E1                     l740:
   457                           
   458                           ;main.c: 70:                 _delay((unsigned long)((1000)*(4000000/4000.0)));
   459     07E1  3006               	movlw	6
   460     07E2  00F8               	movwf	??_main+2
   461     07E3  3013               	movlw	19
   462     07E4  00F7               	movwf	??_main+1
   463     07E5  30AD               	movlw	173
   464     07E6  00F6               	movwf	??_main
   465     07E7                     u187:
   466     07E7  0BF6               	decfsz	??_main,f
   467     07E8  2FE7               	goto	u187
   468     07E9  0BF7               	decfsz	??_main+1,f
   469     07EA  2FE7               	goto	u187
   470     07EB  0BF8               	decfsz	??_main+2,f
   471     07EC  2FE7               	goto	u187
   472     07ED  2FEE               	nop2
   473     07EE                     l742:
   474                           
   475                           ;main.c: 71:             }
   476     07EE  3001               	movlw	1
   477     07EF  00FF               	movwf	btemp+1
   478     07F0  087F               	movf	btemp+1,w
   479     07F1  07F9               	addwf	main@i_115,f
   480     07F2                     l744:
   481     07F2  3003               	movlw	3
   482     07F3  0279               	subwf	main@i_115,w
   483     07F4  1C03               	skipc
   484     07F5  2FF7               	goto	u141
   485     07F6  2FF8               	goto	u140
   486     07F7                     u141:
   487     07F7  2FD7               	goto	l738
   488     07F8                     u140:
   489     07F8  2F6C               	goto	l702
   490     07F9  120A  118A  2800   	ljmp	start
   491     07FC                     __end_of_main:
   492                           
   493                           	psect	text1
   494     0749                     __ptext1:	
   495 ;; *************** function _EEPROM_W *****************
   496 ;; Defined at:
   497 ;;		line 21 in file "main.c"
   498 ;; Parameters:    Size  Location     Type
   499 ;;  Dc              1    wreg     unsigned char 
   500 ;;  Dulieu          1    0[COMMON] unsigned char 
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  Dc              1    1[COMMON] unsigned char 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         1       0       0       0       0
   513 ;;      Locals:         1       0       0       0       0
   514 ;;      Temps:          0       0       0       0       0
   515 ;;      Totals:         2       0       0       0       0
   516 ;;Total ram usage:        2 bytes
   517 ;; Hardware stack levels used: 1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           
   525     0749                     _EEPROM_W:	
   526                           ;psect for function _EEPROM_W
   527                           
   528                           
   529                           ;incstack = 0
   530                           ; Regs used in _EEPROM_W: [wreg]
   531                           ;EEPROM_W@Dc stored from wreg
   532     0749  00F1               	movwf	EEPROM_W@Dc
   533     074A                     l670:
   534     074A                     l29:	
   535                           ;main.c: 22:     while(EECON1bits.WR);
   536                           
   537     074A  1683               	bsf	3,5	;RP0=1, select bank3
   538     074B  1703               	bsf	3,6	;RP1=1, select bank3
   539     074C  188C               	btfsc	12,1	;volsfr
   540     074D  2F4F               	goto	u81
   541     074E  2F50               	goto	u80
   542     074F                     u81:
   543     074F  2F4A               	goto	l29
   544     0750                     u80:
   545     0750                     l672:
   546                           
   547                           ;main.c: 23:     EEADR = Dc;
   548     0750  0871               	movf	EEPROM_W@Dc,w
   549     0751  1283               	bcf	3,5	;RP0=0, select bank2
   550     0752  1703               	bsf	3,6	;RP1=1, select bank2
   551     0753  008D               	movwf	13	;volatile
   552                           
   553                           ;main.c: 24:     EEDATA = Dulieu;
   554     0754  0870               	movf	EEPROM_W@Dulieu,w
   555     0755  008C               	movwf	12	;volatile
   556     0756                     l674:
   557                           
   558                           ;main.c: 25:     EECON1bits.EEPGD = 0;
   559     0756  1683               	bsf	3,5	;RP0=1, select bank3
   560     0757  1703               	bsf	3,6	;RP1=1, select bank3
   561     0758  138C               	bcf	12,7	;volsfr
   562     0759                     l676:
   563                           
   564                           ;main.c: 26:     EECON1bits.WREN = 1;
   565     0759  150C               	bsf	12,2	;volsfr
   566     075A                     l678:
   567                           
   568                           ;main.c: 27:     INTCONbits.GIE = 0;
   569     075A  138B               	bcf	11,7	;volatile
   570                           
   571                           ;main.c: 28:     EECON2 = 0x55;
   572     075B  3055               	movlw	85
   573     075C  008D               	movwf	13	;volsfr
   574                           
   575                           ;main.c: 29:     EECON2 = 0xAA;
   576     075D  30AA               	movlw	170
   577     075E  008D               	movwf	13	;volsfr
   578     075F                     l680:
   579                           
   580                           ;main.c: 30:     EECON1bits.WR = 1;
   581     075F  148C               	bsf	12,1	;volsfr
   582     0760                     l682:
   583                           
   584                           ;main.c: 31:     INTCONbits.GIE = 0;
   585     0760  138B               	bcf	11,7	;volatile
   586     0761                     l684:
   587                           
   588                           ;main.c: 32:     EECON1bits.WREN = 0;
   589     0761  110C               	bcf	12,2	;volsfr
   590     0762                     l686:
   591                           
   592                           ;main.c: 33:     EECON1bits.WR = 0;
   593     0762  108C               	bcf	12,1	;volsfr
   594     0763                     l32:
   595     0763  0008               	return
   596     0764                     __end_of_EEPROM_W:
   597                           
   598                           	psect	text2
   599     0734                     __ptext2:	
   600 ;; *************** function _EEPROM_R *****************
   601 ;; Defined at:
   602 ;;		line 36 in file "main.c"
   603 ;; Parameters:    Size  Location     Type
   604 ;;  Dc              1    wreg     unsigned char 
   605 ;; Auto vars:     Size  Location     Type
   606 ;;  Dc              1    4[COMMON] unsigned char 
   607 ;;  Dulieu          1    5[COMMON] unsigned char 
   608 ;; Return value:  Size  Location     Type
   609 ;;                  2    0[COMMON] int 
   610 ;; Registers used:
   611 ;;		wreg
   612 ;; Tracked objects:
   613 ;;		On entry : 0/0
   614 ;;		On exit  : 0/0
   615 ;;		Unchanged: 0/0
   616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   617 ;;      Params:         2       0       0       0       0
   618 ;;      Locals:         2       0       0       0       0
   619 ;;      Temps:          2       0       0       0       0
   620 ;;      Totals:         6       0       0       0       0
   621 ;;Total ram usage:        6 bytes
   622 ;; Hardware stack levels used: 1
   623 ;; This function calls:
   624 ;;		Nothing
   625 ;; This function is called by:
   626 ;;		_main
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630     0734                     _EEPROM_R:	
   631                           ;psect for function _EEPROM_R
   632                           
   633                           
   634                           ;incstack = 0
   635                           ; Regs used in _EEPROM_R: [wreg]
   636                           ;EEPROM_R@Dc stored from wreg
   637     0734  00F4               	movwf	EEPROM_R@Dc
   638     0735                     l688:
   639                           
   640                           ;main.c: 37:     uint8_t Dulieu;;main.c: 38:     EEADR = Dc;
   641     0735  0874               	movf	EEPROM_R@Dc,w
   642     0736  1283               	bcf	3,5	;RP0=0, select bank2
   643     0737  1703               	bsf	3,6	;RP1=1, select bank2
   644     0738  008D               	movwf	13	;volatile
   645     0739                     l690:
   646                           
   647                           ;main.c: 39:     EECON1bits.EEPGD = 0;
   648     0739  1683               	bsf	3,5	;RP0=1, select bank3
   649     073A  1703               	bsf	3,6	;RP1=1, select bank3
   650     073B  138C               	bcf	12,7	;volsfr
   651     073C                     l692:
   652                           
   653                           ;main.c: 40:     EECON1bits.RD = 1;
   654     073C  140C               	bsf	12,0	;volsfr
   655                           
   656                           ;main.c: 41:     Dulieu = EEDATA;
   657     073D  1283               	bcf	3,5	;RP0=0, select bank2
   658     073E  1703               	bsf	3,6	;RP1=1, select bank2
   659     073F  080C               	movf	12,w	;volatile
   660     0740  00F5               	movwf	EEPROM_R@Dulieu
   661                           
   662                           ;main.c: 42:     return Dulieu;
   663     0741  0875               	movf	EEPROM_R@Dulieu,w
   664     0742  00F2               	movwf	??_EEPROM_R
   665     0743  01F3               	clrf	??_EEPROM_R+1
   666     0744  0872               	movf	??_EEPROM_R,w
   667     0745  00F0               	movwf	?_EEPROM_R
   668     0746  0873               	movf	??_EEPROM_R+1,w
   669     0747  00F1               	movwf	?_EEPROM_R+1
   670     0748                     l35:
   671     0748  0008               	return
   672     0749                     __end_of_EEPROM_R:
   673     007E                     btemp	set	126	;btemp
   674     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_EEPROM_R

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0     477
                                              6 COMMON     5     5      0
                           _EEPROM_R
                           _EEPROM_W
 ---------------------------------------------------------------------------------
 (1) _EEPROM_W                                             2     1      1     272
                                              0 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 (1) _EEPROM_R                                             6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROM_R
   _EEPROM_W

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 19 01:21:31 2023

                     l32 0763                       l35 0748                       l29 074A  
                     u80 0750                       u81 074F                       u90 0772  
                     u91 0771                      l700 0769                      l710 078B  
                    l702 076C                      l720 07B0                      l712 0791  
                    l704 0772                      l730 07D0                      l722 07B8  
                    l714 0799                      l706 077A                      l740 07E1  
                    l732 07D6                      l724 07BC                      l716 079D  
                    l708 077E                      l670 074A                      l742 07EE  
                    l726 07C9                      l718 07AA                      l680 075F  
                    l672 0750                      l744 07F2                      l728 07CF  
                    l690 0739                      l682 0760                      l674 0756  
                    l738 07D7                      l692 073C                      l684 0761  
                    l676 0759                      l686 0762                      l678 075A  
                    l688 0735                      l696 0764                      l698 0768  
                    _RB0 0030                      _RB1 0031                      _RB2 0032  
                    _RB3 0033                      u100 0791                      u101 0790  
                    u110 07B0                      u111 07AF                      u120 07CF  
                    u121 07CE                      u130 07D6                      u131 07D5  
                    u140 07F8                      u141 07F7                      u157 0784  
                    u167 07A3                      u177 07C2                      u187 07E7  
                   _main 0764                     btemp 007E                     start 0000  
       __end_of_EEPROM_R 0749         __end_of_EEPROM_W 0764                    ?_main 0070  
                  _EEADR 010D                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0076  
                 _EEDATA 010C                   _EECON2 018D                   main@dc 007A  
              ?_EEPROM_R 0070                ?_EEPROM_W 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               ??_EEPROM_R 0072               ??_EEPROM_W 0071  
             __pmaintext 0764                  __ptext1 0749                  __ptext2 0734  
             EEPROM_R@Dc 0074               EEPROM_W@Dc 0071     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002                 _EEPROM_R 0734  
               _EEPROM_W 0749                main@i_115 0079               _EECON1bits 018C  
             _INTCONbits 000B           EEPROM_R@Dulieu 0075           EEPROM_W@Dulieu 0070  
