

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Dec 18 11:28:36 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16     0000                     
    17                           ; Generated 22/03/2023 GMT
    18                           ; 
    19                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51     0000                     	;# 
    52     0001                     	;# 
    53     0002                     	;# 
    54     0003                     	;# 
    55     0004                     	;# 
    56     0005                     	;# 
    57     0006                     	;# 
    58     0007                     	;# 
    59     0008                     	;# 
    60     0009                     	;# 
    61     000A                     	;# 
    62     000B                     	;# 
    63     000C                     	;# 
    64     000D                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0013                     	;# 
    72     0014                     	;# 
    73     0015                     	;# 
    74     0015                     	;# 
    75     0016                     	;# 
    76     0017                     	;# 
    77     0018                     	;# 
    78     0019                     	;# 
    79     001A                     	;# 
    80     001B                     	;# 
    81     001B                     	;# 
    82     001C                     	;# 
    83     001D                     	;# 
    84     001E                     	;# 
    85     001F                     	;# 
    86     0081                     	;# 
    87     0085                     	;# 
    88     0086                     	;# 
    89     0087                     	;# 
    90     0088                     	;# 
    91     0089                     	;# 
    92     008C                     	;# 
    93     008D                     	;# 
    94     008E                     	;# 
    95     0091                     	;# 
    96     0092                     	;# 
    97     0093                     	;# 
    98     0094                     	;# 
    99     0098                     	;# 
   100     0099                     	;# 
   101     009C                     	;# 
   102     009D                     	;# 
   103     009E                     	;# 
   104     009F                     	;# 
   105     010C                     	;# 
   106     010D                     	;# 
   107     010E                     	;# 
   108     010F                     	;# 
   109     018C                     	;# 
   110     018D                     	;# 
   111     0000                     	;# 
   112     0001                     	;# 
   113     0002                     	;# 
   114     0003                     	;# 
   115     0004                     	;# 
   116     0005                     	;# 
   117     0006                     	;# 
   118     0007                     	;# 
   119     0008                     	;# 
   120     0009                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     0088                     	;# 
   151     0089                     	;# 
   152     008C                     	;# 
   153     008D                     	;# 
   154     008E                     	;# 
   155     0091                     	;# 
   156     0092                     	;# 
   157     0093                     	;# 
   158     0094                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009C                     	;# 
   162     009D                     	;# 
   163     009E                     	;# 
   164     009F                     	;# 
   165     010C                     	;# 
   166     010D                     	;# 
   167     010E                     	;# 
   168     010F                     	;# 
   169     018C                     	;# 
   170     018D                     	;# 
   171                           
   172                           	psect	idataBANK0
   173     05C7                     __pidataBANK0:
   174                           
   175                           ;initializer for _ma_led
   176     05C7  34C0               	retlw	192
   177     05C8  34F9               	retlw	249
   178     05C9  34A4               	retlw	164
   179     05CA  34B0               	retlw	176
   180     05CB  3499               	retlw	153
   181     05CC  3492               	retlw	146
   182     05CD  3482               	retlw	130
   183     05CE  34F8               	retlw	248
   184     05CF  3480               	retlw	128
   185     05D0  3498               	retlw	152
   186     0007                     _PORTC	set	7
   187     0006                     _PORTB	set	6
   188     003B                     _RC3	set	59
   189     003A                     _RC2	set	58
   190     0039                     _RC1	set	57
   191     0038                     _RC0	set	56
   192     0037                     _RB7	set	55
   193     0036                     _RB6	set	54
   194     0035                     _RB5	set	53
   195     0034                     _RB4	set	52
   196     0033                     _RB3	set	51
   197     0032                     _RB2	set	50
   198     0031                     _RB1	set	49
   199     0030                     _RB0	set	48
   200     0087                     _TRISC	set	135
   201     0086                     _TRISB	set	134
   202                           
   203                           	psect	cinit
   204     07EE                     start_initialization:	
   205                           ; #config settings
   206                           
   207     07EE                     __initialization:
   208                           
   209                           ; Initialize objects allocated to BANK0
   210     07EE  1383               	bcf	3,7	;select IRP bank0
   211     07EF  302A               	movlw	low (__pdataBANK0+10)
   212     07F0  00FD               	movwf	btemp+-1
   213     07F1  3005               	movlw	high __pidataBANK0
   214     07F2  00FE               	movwf	btemp
   215     07F3  30C7               	movlw	low __pidataBANK0
   216     07F4  00FF               	movwf	btemp+1
   217     07F5  3020               	movlw	low __pdataBANK0
   218     07F6  0084               	movwf	4
   219     07F7  120A  118A  25D5  120A  118A  	fcall	init_ram0
   220     07FC                     end_of_initialization:	
   221                           ;End of C runtime variable initialization code
   222                           
   223     07FC                     __end_of__initialization:
   224     07FC  0183               	clrf	3
   225     07FD  120A  118A  2EEC   	ljmp	_main	;jump to C main() function
   226                           
   227                           	psect	dataBANK0
   228     0020                     __pdataBANK0:
   229     0020                     _ma_led:
   230     0020                     	ds	10
   231                           
   232                           	psect	inittext
   233     05D1                     init_fetch0:	
   234                           ;	Called with low address in FSR and high address in W
   235                           
   236     05D1  087E               	movf	btemp,w
   237     05D2  008A               	movwf	10
   238     05D3  087F               	movf	btemp+1,w
   239     05D4  0082               	movwf	2
   240     05D5                     init_ram0:	
   241                           ;Called with:
   242                           ;	high address of idata address in btemp 
   243                           ;	low address of idata address in btemp+1 
   244                           ;	low address of data in FSR
   245                           ;	high address + 1 of data in btemp-1
   246                           
   247     05D5  120A  118A  25D1  120A  118A  	fcall	init_fetch0
   248     05DA  0080               	movwf	0
   249     05DB  0A84               	incf	4,f
   250     05DC  0804               	movf	4,w
   251     05DD  067D               	xorwf	btemp+-1,w
   252     05DE  1903               	btfsc	3,2
   253     05DF  3400               	retlw	0
   254     05E0  0AFF               	incf	btemp+1,f
   255     05E1  1903               	btfsc	3,2
   256     05E2  0AFE               	incf	btemp,f
   257     05E3  2DD5               	goto	init_ram0
   258                           
   259                           	psect	cstackCOMMON
   260     0070                     __pcstackCOMMON:
   261     0070                     ?_hienthi:
   262     0070                     ??_hienthi:	
   263                           ; 1 bytes @ 0x0
   264                           
   265     0070                     ?_main:	
   266                           ; 1 bytes @ 0x0
   267                           
   268     0070                     ?___lwmod:	
   269                           ; 1 bytes @ 0x0
   270                           
   271     0070                     ___lwmod@divisor:	
   272                           ; 2 bytes @ 0x0
   273                           
   274                           
   275                           ; 2 bytes @ 0x0
   276     0070                     	ds	1
   277     0071                     hienthi@dulieu:
   278                           
   279                           ; 1 bytes @ 0x1
   280     0071                     	ds	1
   281     0072                     ___lwmod@dividend:
   282                           
   283                           ; 2 bytes @ 0x2
   284     0072                     	ds	2
   285     0074                     ??___lwmod:
   286     0074                     ___lwmod@counter:	
   287                           ; 1 bytes @ 0x4
   288                           
   289                           
   290                           ; 1 bytes @ 0x4
   291     0074                     	ds	1
   292     0075                     ?___lwdiv:
   293     0075                     ___lwdiv@divisor:	
   294                           ; 2 bytes @ 0x5
   295                           
   296                           
   297                           ; 2 bytes @ 0x5
   298     0075                     	ds	2
   299     0077                     ___lwdiv@dividend:
   300                           
   301                           ; 2 bytes @ 0x7
   302     0077                     	ds	2
   303     0079                     ??___lwdiv:
   304     0079                     ___lwdiv@quotient:	
   305                           ; 1 bytes @ 0x9
   306                           
   307                           
   308                           ; 2 bytes @ 0x9
   309     0079                     	ds	2
   310     007B                     ___lwdiv@counter:
   311                           
   312                           ; 1 bytes @ 0xB
   313     007B                     	ds	1
   314     007C                     ??_main:
   315                           
   316                           ; 1 bytes @ 0xC
   317     007C                     	ds	2
   318                           
   319                           	psect	cstackBANK0
   320     002A                     __pcstackBANK0:
   321     002A                     _main$657:
   322                           
   323                           ; 2 bytes @ 0x0
   324     002A                     	ds	2
   325     002C                     _main$656:
   326                           
   327                           ; 2 bytes @ 0x2
   328     002C                     	ds	2
   329     002E                     main@i:
   330                           
   331                           ; 2 bytes @ 0x4
   332     002E                     	ds	2
   333                           
   334                           	psect	maintext
   335     06EC                     __pmaintext:	
   336 ;;
   337 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   338 ;;
   339 ;; *************** function _main *****************
   340 ;; Defined at:
   341 ;;		line 44 in file "main.c"
   342 ;; Parameters:    Size  Location     Type
   343 ;;		None
   344 ;; Auto vars:     Size  Location     Type
   345 ;;  i               2    4[BANK0 ] unsigned int 
   346 ;; Return value:  Size  Location     Type
   347 ;;                  1    wreg      void 
   348 ;; Registers used:
   349 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   350 ;; Tracked objects:
   351 ;;		On entry : B00/0
   352 ;;		On exit  : 0/0
   353 ;;		Unchanged: 0/0
   354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   355 ;;      Params:         0       0       0       0       0
   356 ;;      Locals:         0       6       0       0       0
   357 ;;      Temps:          2       0       0       0       0
   358 ;;      Totals:         2       6       0       0       0
   359 ;;Total ram usage:        8 bytes
   360 ;; Hardware stack levels required when called: 1
   361 ;; This function calls:
   362 ;;		___lwdiv
   363 ;;		___lwmod
   364 ;;		_hienthi
   365 ;; This function is called by:
   366 ;;		Startup code after reset
   367 ;; This function uses a non-reentrant model
   368 ;;
   369                           
   370     06EC                     _main:	
   371                           ;psect for function _main
   372                           
   373     06EC                     l745:	
   374                           ;incstack = 0
   375                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   376                           
   377                           
   378                           ;main.c: 45:     TRISB = 0;
   379     06EC  1683               	bsf	3,5	;RP0=1, select bank1
   380     06ED  1303               	bcf	3,6	;RP1=0, select bank1
   381     06EE  0186               	clrf	6	;volatile
   382                           
   383                           ;main.c: 46:     TRISC = 0;
   384     06EF  0187               	clrf	7	;volatile
   385     06F0                     l747:
   386                           
   387                           ;main.c: 47:     PORTB = 1;
   388     06F0  3001               	movlw	1
   389     06F1  1283               	bcf	3,5	;RP0=0, select bank0
   390     06F2  1303               	bcf	3,6	;RP1=0, select bank0
   391     06F3  0086               	movwf	6	;volatile
   392     06F4                     l749:
   393                           
   394                           ;main.c: 48:     PORTC = 1;
   395     06F4  3001               	movlw	1
   396     06F5  0087               	movwf	7	;volatile
   397     06F6                     l44:	
   398                           ;main.c: 49:     unsigned int i;;main.c: 50:     while(1){
   399                           
   400                           
   401                           ;main.c: 51:         for(i = 0; i < 1000; i++){
   402     06F6  01AE               	clrf	main@i
   403     06F7  01AF               	clrf	main@i+1
   404     06F8                     l45:
   405                           
   406                           ;main.c: 52:             RC0 = 1;
   407     06F8  1407               	bsf	7,0	;volatile
   408     06F9                     l755:
   409                           
   410                           ;main.c: 53:             hienthi(ma_led[i / 1000]);
   411     06F9  30E8               	movlw	232
   412     06FA  00F5               	movwf	___lwdiv@divisor
   413     06FB  3003               	movlw	3
   414     06FC  00F6               	movwf	___lwdiv@divisor+1
   415     06FD  082F               	movf	main@i+1,w
   416     06FE  00F8               	movwf	___lwdiv@dividend+1
   417     06FF  082E               	movf	main@i,w
   418     0700  00F7               	movwf	___lwdiv@dividend
   419     0701  120A  118A  261E  120A  118A  	fcall	___lwdiv
   420     0706  0875               	movf	?___lwdiv,w
   421     0707  3E20               	addlw	(low (_ma_led| 0))& (0+255)
   422     0708  0084               	movwf	4
   423     0709  1383               	bcf	3,7	;select IRP bank0
   424     070A  0800               	movf	0,w
   425     070B  120A  118A  2662  120A  118A  	fcall	_hienthi
   426     0710                     l757:
   427                           
   428                           ;main.c: 54:             _delay((unsigned long)((10)*(20000000/4000.0)));
   429     0710  3041               	movlw	65
   430     0711  00FD               	movwf	??_main+1
   431     0712  30EE               	movlw	238
   432     0713  00FC               	movwf	??_main
   433     0714                     u757:
   434     0714  0BFC               	decfsz	??_main,f
   435     0715  2F14               	goto	u757
   436     0716  0BFD               	decfsz	??_main+1,f
   437     0717  2F14               	goto	u757
   438     0718  0000               	nop
   439     0719                     l759:
   440                           
   441                           ;main.c: 55:             RC0 = 0;
   442     0719  1283               	bcf	3,5	;RP0=0, select bank0
   443     071A  1303               	bcf	3,6	;RP1=0, select bank0
   444     071B  1007               	bcf	7,0	;volatile
   445     071C                     l761:
   446                           
   447                           ;main.c: 57:             RC1 = 1;
   448     071C  1487               	bsf	7,1	;volatile
   449     071D                     l763:
   450                           
   451                           ;main.c: 58:             hienthi(ma_led[(i % 1000) / 100]);
   452     071D  3064               	movlw	100
   453     071E  00F5               	movwf	___lwdiv@divisor
   454     071F  3000               	movlw	0
   455     0720  00F6               	movwf	___lwdiv@divisor+1
   456     0721  082F               	movf	main@i+1,w
   457     0722  00F3               	movwf	___lwmod@dividend+1
   458     0723  082E               	movf	main@i,w
   459     0724  00F2               	movwf	___lwmod@dividend
   460     0725  30E8               	movlw	232
   461     0726  00F0               	movwf	___lwmod@divisor
   462     0727  3003               	movlw	3
   463     0728  00F1               	movwf	___lwmod@divisor+1
   464     0729  120A  118A  25E4  120A  118A  	fcall	___lwmod
   465     072E  0871               	movf	?___lwmod+1,w
   466     072F  00F8               	movwf	___lwdiv@dividend+1
   467     0730  0870               	movf	?___lwmod,w
   468     0731  00F7               	movwf	___lwdiv@dividend
   469     0732  120A  118A  261E  120A  118A  	fcall	___lwdiv
   470     0737  0875               	movf	?___lwdiv,w
   471     0738  3E20               	addlw	(low (_ma_led| 0))& (0+255)
   472     0739  0084               	movwf	4
   473     073A  1383               	bcf	3,7	;select IRP bank0
   474     073B  0800               	movf	0,w
   475     073C  120A  118A  2662  120A  118A  	fcall	_hienthi
   476                           
   477                           ;main.c: 59:             _delay((unsigned long)((10)*(20000000/4000.0)));
   478     0741  3041               	movlw	65
   479     0742  00FD               	movwf	??_main+1
   480     0743  30EE               	movlw	238
   481     0744  00FC               	movwf	??_main
   482     0745                     u767:
   483     0745  0BFC               	decfsz	??_main,f
   484     0746  2F45               	goto	u767
   485     0747  0BFD               	decfsz	??_main+1,f
   486     0748  2F45               	goto	u767
   487     0749  0000               	nop
   488     074A                     l765:
   489                           
   490                           ;main.c: 60:             RC1 = 0;
   491     074A  1283               	bcf	3,5	;RP0=0, select bank0
   492     074B  1303               	bcf	3,6	;RP1=0, select bank0
   493     074C  1087               	bcf	7,1	;volatile
   494     074D                     l767:
   495                           
   496                           ;main.c: 62:             RC2 = 1;
   497     074D  1507               	bsf	7,2	;volatile
   498     074E                     l769:
   499                           
   500                           ;main.c: 63:             hienthi(ma_led[(i % 1000 %100) / 10]);
   501     074E  082F               	movf	main@i+1,w
   502     074F  00F3               	movwf	___lwmod@dividend+1
   503     0750  082E               	movf	main@i,w
   504     0751  00F2               	movwf	___lwmod@dividend
   505     0752  30E8               	movlw	232
   506     0753  00F0               	movwf	___lwmod@divisor
   507     0754  3003               	movlw	3
   508     0755  00F1               	movwf	___lwmod@divisor+1
   509     0756  120A  118A  25E4  120A  118A  	fcall	___lwmod
   510     075B  0871               	movf	?___lwmod+1,w
   511     075C  1283               	bcf	3,5	;RP0=0, select bank0
   512     075D  1303               	bcf	3,6	;RP1=0, select bank0
   513     075E  00AD               	movwf	_main$656+1
   514     075F  0870               	movf	?___lwmod,w
   515     0760  00AC               	movwf	_main$656
   516     0761                     l771:
   517                           
   518                           ;main.c: 63:             hienthi(ma_led[(i % 1000 %100) / 10]);
   519     0761  300A               	movlw	10
   520     0762  00F5               	movwf	___lwdiv@divisor
   521     0763  3000               	movlw	0
   522     0764  00F6               	movwf	___lwdiv@divisor+1
   523     0765  082D               	movf	_main$656+1,w
   524     0766  00F3               	movwf	___lwmod@dividend+1
   525     0767  082C               	movf	_main$656,w
   526     0768  00F2               	movwf	___lwmod@dividend
   527     0769  3064               	movlw	100
   528     076A  00F0               	movwf	___lwmod@divisor
   529     076B  3000               	movlw	0
   530     076C  00F1               	movwf	___lwmod@divisor+1
   531     076D  120A  118A  25E4  120A  118A  	fcall	___lwmod
   532     0772  0871               	movf	?___lwmod+1,w
   533     0773  00F8               	movwf	___lwdiv@dividend+1
   534     0774  0870               	movf	?___lwmod,w
   535     0775  00F7               	movwf	___lwdiv@dividend
   536     0776  120A  118A  261E  120A  118A  	fcall	___lwdiv
   537     077B  0875               	movf	?___lwdiv,w
   538     077C  3E20               	addlw	(low (_ma_led| 0))& (0+255)
   539     077D  0084               	movwf	4
   540     077E  1383               	bcf	3,7	;select IRP bank0
   541     077F  0800               	movf	0,w
   542     0780  120A  118A  2662  120A  118A  	fcall	_hienthi
   543     0785                     l773:
   544                           
   545                           ;main.c: 64:             _delay((unsigned long)((10)*(20000000/4000.0)));
   546     0785  3041               	movlw	65
   547     0786  00FD               	movwf	??_main+1
   548     0787  30EE               	movlw	238
   549     0788  00FC               	movwf	??_main
   550     0789                     u777:
   551     0789  0BFC               	decfsz	??_main,f
   552     078A  2F89               	goto	u777
   553     078B  0BFD               	decfsz	??_main+1,f
   554     078C  2F89               	goto	u777
   555     078D  0000               	nop
   556     078E                     l775:
   557                           
   558                           ;main.c: 65:             RC2 = 0;
   559     078E  1283               	bcf	3,5	;RP0=0, select bank0
   560     078F  1303               	bcf	3,6	;RP1=0, select bank0
   561     0790  1107               	bcf	7,2	;volatile
   562     0791                     l777:
   563                           
   564                           ;main.c: 67:             RC3 = 1;
   565     0791  1587               	bsf	7,3	;volatile
   566     0792                     l779:
   567                           
   568                           ;main.c: 68:             hienthi(ma_led[i % 1000 % 100 % 10]);
   569     0792  082F               	movf	main@i+1,w
   570     0793  00F3               	movwf	___lwmod@dividend+1
   571     0794  082E               	movf	main@i,w
   572     0795  00F2               	movwf	___lwmod@dividend
   573     0796  30E8               	movlw	232
   574     0797  00F0               	movwf	___lwmod@divisor
   575     0798  3003               	movlw	3
   576     0799  00F1               	movwf	___lwmod@divisor+1
   577     079A  120A  118A  25E4  120A  118A  	fcall	___lwmod
   578     079F  0871               	movf	?___lwmod+1,w
   579     07A0  1283               	bcf	3,5	;RP0=0, select bank0
   580     07A1  1303               	bcf	3,6	;RP1=0, select bank0
   581     07A2  00AD               	movwf	_main$656+1
   582     07A3  0870               	movf	?___lwmod,w
   583     07A4  00AC               	movwf	_main$656
   584     07A5                     l781:
   585                           
   586                           ;main.c: 68:             hienthi(ma_led[i % 1000 % 100 % 10]);
   587     07A5  082D               	movf	_main$656+1,w
   588     07A6  00F3               	movwf	___lwmod@dividend+1
   589     07A7  082C               	movf	_main$656,w
   590     07A8  00F2               	movwf	___lwmod@dividend
   591     07A9  3064               	movlw	100
   592     07AA  00F0               	movwf	___lwmod@divisor
   593     07AB  3000               	movlw	0
   594     07AC  00F1               	movwf	___lwmod@divisor+1
   595     07AD  120A  118A  25E4  120A  118A  	fcall	___lwmod
   596     07B2  0871               	movf	?___lwmod+1,w
   597     07B3  1283               	bcf	3,5	;RP0=0, select bank0
   598     07B4  1303               	bcf	3,6	;RP1=0, select bank0
   599     07B5  00AB               	movwf	_main$657+1
   600     07B6  0870               	movf	?___lwmod,w
   601     07B7  00AA               	movwf	_main$657
   602     07B8                     l783:
   603                           
   604                           ;main.c: 68:             hienthi(ma_led[i % 1000 % 100 % 10]);
   605     07B8  300A               	movlw	10
   606     07B9  00F0               	movwf	___lwmod@divisor
   607     07BA  3000               	movlw	0
   608     07BB  00F1               	movwf	___lwmod@divisor+1
   609     07BC  082B               	movf	_main$657+1,w
   610     07BD  00F3               	movwf	___lwmod@dividend+1
   611     07BE  082A               	movf	_main$657,w
   612     07BF  00F2               	movwf	___lwmod@dividend
   613     07C0  120A  118A  25E4  120A  118A  	fcall	___lwmod
   614     07C5  0870               	movf	?___lwmod,w
   615     07C6  3E20               	addlw	(low (_ma_led| 0))& (0+255)
   616     07C7  0084               	movwf	4
   617     07C8  1383               	bcf	3,7	;select IRP bank0
   618     07C9  0800               	movf	0,w
   619     07CA  120A  118A  2662  120A  118A  	fcall	_hienthi
   620     07CF                     l785:
   621                           
   622                           ;main.c: 69:             _delay((unsigned long)((10)*(20000000/4000.0)));
   623     07CF  3041               	movlw	65
   624     07D0  00FD               	movwf	??_main+1
   625     07D1  30EE               	movlw	238
   626     07D2  00FC               	movwf	??_main
   627     07D3                     u787:
   628     07D3  0BFC               	decfsz	??_main,f
   629     07D4  2FD3               	goto	u787
   630     07D5  0BFD               	decfsz	??_main+1,f
   631     07D6  2FD3               	goto	u787
   632     07D7  0000               	nop
   633     07D8                     l787:
   634                           
   635                           ;main.c: 70:             RC3 = 0;
   636     07D8  1283               	bcf	3,5	;RP0=0, select bank0
   637     07D9  1303               	bcf	3,6	;RP1=0, select bank0
   638     07DA  1187               	bcf	7,3	;volatile
   639     07DB                     l789:
   640                           
   641                           ;main.c: 71:         }
   642     07DB  3001               	movlw	1
   643     07DC  07AE               	addwf	main@i,f
   644     07DD  1803               	skipnc
   645     07DE  0AAF               	incf	main@i+1,f
   646     07DF  3000               	movlw	0
   647     07E0  07AF               	addwf	main@i+1,f
   648     07E1                     l791:
   649     07E1  3003               	movlw	3
   650     07E2  022F               	subwf	main@i+1,w
   651     07E3  30E8               	movlw	232
   652     07E4  1903               	skipnz
   653     07E5  022E               	subwf	main@i,w
   654     07E6  1C03               	skipc
   655     07E7  2FE9               	goto	u741
   656     07E8  2FEA               	goto	u740
   657     07E9                     u741:
   658     07E9  2EF8               	goto	l45
   659     07EA                     u740:
   660     07EA  2EF6               	goto	l44
   661     07EB  120A  118A  2800   	ljmp	start
   662     07EE                     __end_of_main:
   663                           
   664                           	psect	text1
   665     0662                     __ptext1:	
   666 ;; *************** function _hienthi *****************
   667 ;; Defined at:
   668 ;;		line 33 in file "main.c"
   669 ;; Parameters:    Size  Location     Type
   670 ;;  dulieu          1    wreg     unsigned char 
   671 ;; Auto vars:     Size  Location     Type
   672 ;;  dulieu          1    1[COMMON] unsigned char 
   673 ;; Return value:  Size  Location     Type
   674 ;;                  1    wreg      void 
   675 ;; Registers used:
   676 ;;		wreg, status,2, status,0
   677 ;; Tracked objects:
   678 ;;		On entry : 0/0
   679 ;;		On exit  : 0/0
   680 ;;		Unchanged: 0/0
   681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   682 ;;      Params:         0       0       0       0       0
   683 ;;      Locals:         1       0       0       0       0
   684 ;;      Temps:          1       0       0       0       0
   685 ;;      Totals:         2       0       0       0       0
   686 ;;Total ram usage:        2 bytes
   687 ;; Hardware stack levels used: 1
   688 ;; This function calls:
   689 ;;		Nothing
   690 ;; This function is called by:
   691 ;;		_main
   692 ;; This function uses a non-reentrant model
   693 ;;
   694                           
   695     0662                     _hienthi:	
   696                           ;psect for function _hienthi
   697                           
   698                           
   699                           ;incstack = 0
   700                           ; Regs used in _hienthi: [wreg+status,2+status,0]
   701                           ;hienthi@dulieu stored from wreg
   702     0662  00F1               	movwf	hienthi@dulieu
   703     0663                     l693:
   704                           
   705                           ;main.c: 34:     RB0 = dulieu & 0x01;
   706     0663  1871               	btfsc	hienthi@dulieu,0
   707     0664  2E66               	goto	u381
   708     0665  2E6A               	goto	u380
   709     0666                     u381:
   710     0666  1283               	bcf	3,5	;RP0=0, select bank0
   711     0667  1303               	bcf	3,6	;RP1=0, select bank0
   712     0668  1406               	bsf	6,0	;volatile
   713     0669  2E6D               	goto	u394
   714     066A                     u380:
   715     066A  1283               	bcf	3,5	;RP0=0, select bank0
   716     066B  1303               	bcf	3,6	;RP1=0, select bank0
   717     066C  1006               	bcf	6,0	;volatile
   718     066D                     u394:
   719     066D                     l695:
   720                           
   721                           ;main.c: 35:     RB1 = (dulieu >> 1) & 0x01;
   722     066D  0871               	movf	hienthi@dulieu,w
   723     066E  00F0               	movwf	??_hienthi
   724     066F  3001               	movlw	1
   725     0670                     u405:
   726     0670  1003               	clrc
   727     0671  0CF0               	rrf	??_hienthi,f
   728     0672  3EFF               	addlw	-1
   729     0673  1D03               	skipz
   730     0674  2E70               	goto	u405
   731     0675  1870               	btfsc	??_hienthi,0
   732     0676  2E78               	goto	u411
   733     0677  2E7C               	goto	u410
   734     0678                     u411:
   735     0678  1283               	bcf	3,5	;RP0=0, select bank0
   736     0679  1303               	bcf	3,6	;RP1=0, select bank0
   737     067A  1486               	bsf	6,1	;volatile
   738     067B  2E7F               	goto	u424
   739     067C                     u410:
   740     067C  1283               	bcf	3,5	;RP0=0, select bank0
   741     067D  1303               	bcf	3,6	;RP1=0, select bank0
   742     067E  1086               	bcf	6,1	;volatile
   743     067F                     u424:
   744                           
   745                           ;main.c: 36:     RB2 = (dulieu >> 2) & 0x01;
   746     067F  0871               	movf	hienthi@dulieu,w
   747     0680  00F0               	movwf	??_hienthi
   748     0681  3002               	movlw	2
   749     0682                     u435:
   750     0682  1003               	clrc
   751     0683  0CF0               	rrf	??_hienthi,f
   752     0684  3EFF               	addlw	-1
   753     0685  1D03               	skipz
   754     0686  2E82               	goto	u435
   755     0687  1870               	btfsc	??_hienthi,0
   756     0688  2E8A               	goto	u441
   757     0689  2E8E               	goto	u440
   758     068A                     u441:
   759     068A  1283               	bcf	3,5	;RP0=0, select bank0
   760     068B  1303               	bcf	3,6	;RP1=0, select bank0
   761     068C  1506               	bsf	6,2	;volatile
   762     068D  2E91               	goto	u454
   763     068E                     u440:
   764     068E  1283               	bcf	3,5	;RP0=0, select bank0
   765     068F  1303               	bcf	3,6	;RP1=0, select bank0
   766     0690  1106               	bcf	6,2	;volatile
   767     0691                     u454:
   768                           
   769                           ;main.c: 37:     RB3 = (dulieu >> 3) & 0x01;
   770     0691  0871               	movf	hienthi@dulieu,w
   771     0692  00F0               	movwf	??_hienthi
   772     0693  3003               	movlw	3
   773     0694                     u465:
   774     0694  1003               	clrc
   775     0695  0CF0               	rrf	??_hienthi,f
   776     0696  3EFF               	addlw	-1
   777     0697  1D03               	skipz
   778     0698  2E94               	goto	u465
   779     0699  1870               	btfsc	??_hienthi,0
   780     069A  2E9C               	goto	u471
   781     069B  2EA0               	goto	u470
   782     069C                     u471:
   783     069C  1283               	bcf	3,5	;RP0=0, select bank0
   784     069D  1303               	bcf	3,6	;RP1=0, select bank0
   785     069E  1586               	bsf	6,3	;volatile
   786     069F  2EA3               	goto	u484
   787     06A0                     u470:
   788     06A0  1283               	bcf	3,5	;RP0=0, select bank0
   789     06A1  1303               	bcf	3,6	;RP1=0, select bank0
   790     06A2  1186               	bcf	6,3	;volatile
   791     06A3                     u484:
   792                           
   793                           ;main.c: 38:     RB4 = (dulieu >> 4) & 0x01;
   794     06A3  0871               	movf	hienthi@dulieu,w
   795     06A4  00F0               	movwf	??_hienthi
   796     06A5  3004               	movlw	4
   797     06A6                     u495:
   798     06A6  1003               	clrc
   799     06A7  0CF0               	rrf	??_hienthi,f
   800     06A8  3EFF               	addlw	-1
   801     06A9  1D03               	skipz
   802     06AA  2EA6               	goto	u495
   803     06AB  1870               	btfsc	??_hienthi,0
   804     06AC  2EAE               	goto	u501
   805     06AD  2EB2               	goto	u500
   806     06AE                     u501:
   807     06AE  1283               	bcf	3,5	;RP0=0, select bank0
   808     06AF  1303               	bcf	3,6	;RP1=0, select bank0
   809     06B0  1606               	bsf	6,4	;volatile
   810     06B1  2EB5               	goto	u514
   811     06B2                     u500:
   812     06B2  1283               	bcf	3,5	;RP0=0, select bank0
   813     06B3  1303               	bcf	3,6	;RP1=0, select bank0
   814     06B4  1206               	bcf	6,4	;volatile
   815     06B5                     u514:
   816                           
   817                           ;main.c: 39:     RB5 = (dulieu >> 5) & 0x01;
   818     06B5  0871               	movf	hienthi@dulieu,w
   819     06B6  00F0               	movwf	??_hienthi
   820     06B7  3005               	movlw	5
   821     06B8                     u525:
   822     06B8  1003               	clrc
   823     06B9  0CF0               	rrf	??_hienthi,f
   824     06BA  3EFF               	addlw	-1
   825     06BB  1D03               	skipz
   826     06BC  2EB8               	goto	u525
   827     06BD  1870               	btfsc	??_hienthi,0
   828     06BE  2EC0               	goto	u531
   829     06BF  2EC4               	goto	u530
   830     06C0                     u531:
   831     06C0  1283               	bcf	3,5	;RP0=0, select bank0
   832     06C1  1303               	bcf	3,6	;RP1=0, select bank0
   833     06C2  1686               	bsf	6,5	;volatile
   834     06C3  2EC7               	goto	u544
   835     06C4                     u530:
   836     06C4  1283               	bcf	3,5	;RP0=0, select bank0
   837     06C5  1303               	bcf	3,6	;RP1=0, select bank0
   838     06C6  1286               	bcf	6,5	;volatile
   839     06C7                     u544:
   840                           
   841                           ;main.c: 40:     RB6 = (dulieu >> 6) & 0x01;
   842     06C7  0871               	movf	hienthi@dulieu,w
   843     06C8  00F0               	movwf	??_hienthi
   844     06C9  3006               	movlw	6
   845     06CA                     u555:
   846     06CA  1003               	clrc
   847     06CB  0CF0               	rrf	??_hienthi,f
   848     06CC  3EFF               	addlw	-1
   849     06CD  1D03               	skipz
   850     06CE  2ECA               	goto	u555
   851     06CF  1870               	btfsc	??_hienthi,0
   852     06D0  2ED2               	goto	u561
   853     06D1  2ED6               	goto	u560
   854     06D2                     u561:
   855     06D2  1283               	bcf	3,5	;RP0=0, select bank0
   856     06D3  1303               	bcf	3,6	;RP1=0, select bank0
   857     06D4  1706               	bsf	6,6	;volatile
   858     06D5  2ED9               	goto	u574
   859     06D6                     u560:
   860     06D6  1283               	bcf	3,5	;RP0=0, select bank0
   861     06D7  1303               	bcf	3,6	;RP1=0, select bank0
   862     06D8  1306               	bcf	6,6	;volatile
   863     06D9                     u574:
   864                           
   865                           ;main.c: 41:     RB7 = (dulieu >> 7) & 0x01;
   866     06D9  0871               	movf	hienthi@dulieu,w
   867     06DA  00F0               	movwf	??_hienthi
   868     06DB  3007               	movlw	7
   869     06DC                     u585:
   870     06DC  1003               	clrc
   871     06DD  0CF0               	rrf	??_hienthi,f
   872     06DE  3EFF               	addlw	-1
   873     06DF  1D03               	skipz
   874     06E0  2EDC               	goto	u585
   875     06E1  1870               	btfsc	??_hienthi,0
   876     06E2  2EE4               	goto	u591
   877     06E3  2EE8               	goto	u590
   878     06E4                     u591:
   879     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   880     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   881     06E6  1786               	bsf	6,7	;volatile
   882     06E7  2EEB               	goto	u604
   883     06E8                     u590:
   884     06E8  1283               	bcf	3,5	;RP0=0, select bank0
   885     06E9  1303               	bcf	3,6	;RP1=0, select bank0
   886     06EA  1386               	bcf	6,7	;volatile
   887     06EB                     u604:
   888     06EB                     l39:
   889     06EB  0008               	return
   890     06EC                     __end_of_hienthi:
   891                           
   892                           	psect	text2
   893     05E4                     __ptext2:	
   894 ;; *************** function ___lwmod *****************
   895 ;; Defined at:
   896 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwmod.c"
   897 ;; Parameters:    Size  Location     Type
   898 ;;  divisor         2    0[COMMON] unsigned int 
   899 ;;  dividend        2    2[COMMON] unsigned int 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  counter         1    4[COMMON] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  2    0[COMMON] unsigned int 
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0, btemp+1
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         4       0       0       0       0
   912 ;;      Locals:         1       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0
   914 ;;      Totals:         5       0       0       0       0
   915 ;;Total ram usage:        5 bytes
   916 ;; Hardware stack levels used: 1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924     05E4                     ___lwmod:	
   925                           ;psect for function ___lwmod
   926                           
   927     05E4                     l723:	
   928                           ;incstack = 0
   929                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
   930                           
   931     05E4  0870               	movf	___lwmod@divisor,w
   932     05E5  0471               	iorwf	___lwmod@divisor+1,w
   933     05E6  1903               	btfsc	3,2
   934     05E7  2DE9               	goto	u681
   935     05E8  2DEA               	goto	u680
   936     05E9                     u681:
   937     05E9  2E19               	goto	l741
   938     05EA                     u680:
   939     05EA                     l725:
   940     05EA  01F4               	clrf	___lwmod@counter
   941     05EB  0AF4               	incf	___lwmod@counter,f
   942     05EC  2DF8               	goto	l731
   943     05ED                     l727:
   944     05ED  3001               	movlw	1
   945     05EE                     u695:
   946     05EE  1003               	clrc
   947     05EF  0DF0               	rlf	___lwmod@divisor,f
   948     05F0  0DF1               	rlf	___lwmod@divisor+1,f
   949     05F1  3EFF               	addlw	-1
   950     05F2  1D03               	skipz
   951     05F3  2DEE               	goto	u695
   952     05F4                     l729:
   953     05F4  3001               	movlw	1
   954     05F5  00FF               	movwf	btemp+1
   955     05F6  087F               	movf	btemp+1,w
   956     05F7  07F4               	addwf	___lwmod@counter,f
   957     05F8                     l731:
   958     05F8  1FF1               	btfss	___lwmod@divisor+1,7
   959     05F9  2DFB               	goto	u701
   960     05FA  2DFC               	goto	u700
   961     05FB                     u701:
   962     05FB  2DED               	goto	l727
   963     05FC                     u700:
   964     05FC                     l733:
   965     05FC  0871               	movf	___lwmod@divisor+1,w
   966     05FD  0273               	subwf	___lwmod@dividend+1,w
   967     05FE  1D03               	skipz
   968     05FF  2E02               	goto	u715
   969     0600  0870               	movf	___lwmod@divisor,w
   970     0601  0272               	subwf	___lwmod@dividend,w
   971     0602                     u715:
   972     0602  1C03               	skipc
   973     0603  2E05               	goto	u711
   974     0604  2E06               	goto	u710
   975     0605                     u711:
   976     0605  2E0C               	goto	l737
   977     0606                     u710:
   978     0606                     l735:
   979     0606  0870               	movf	___lwmod@divisor,w
   980     0607  02F2               	subwf	___lwmod@dividend,f
   981     0608  0871               	movf	___lwmod@divisor+1,w
   982     0609  1C03               	skipc
   983     060A  03F3               	decf	___lwmod@dividend+1,f
   984     060B  02F3               	subwf	___lwmod@dividend+1,f
   985     060C                     l737:
   986     060C  3001               	movlw	1
   987     060D                     u725:
   988     060D  1003               	clrc
   989     060E  0CF1               	rrf	___lwmod@divisor+1,f
   990     060F  0CF0               	rrf	___lwmod@divisor,f
   991     0610  3EFF               	addlw	-1
   992     0611  1D03               	skipz
   993     0612  2E0D               	goto	u725
   994     0613                     l739:
   995     0613  3001               	movlw	1
   996     0614  02F4               	subwf	___lwmod@counter,f
   997     0615  1D03               	btfss	3,2
   998     0616  2E18               	goto	u731
   999     0617  2E19               	goto	u730
  1000     0618                     u731:
  1001     0618  2DFC               	goto	l733
  1002     0619                     u730:
  1003     0619                     l741:
  1004     0619  0873               	movf	___lwmod@dividend+1,w
  1005     061A  00F1               	movwf	?___lwmod+1
  1006     061B  0872               	movf	___lwmod@dividend,w
  1007     061C  00F0               	movwf	?___lwmod
  1008     061D                     l425:
  1009     061D  0008               	return
  1010     061E                     __end_of___lwmod:
  1011                           
  1012                           	psect	text3
  1013     061E                     __ptext3:	
  1014 ;; *************** function ___lwdiv *****************
  1015 ;; Defined at:
  1016 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\lwdiv.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;  divisor         2    5[COMMON] unsigned int 
  1019 ;;  dividend        2    7[COMMON] unsigned int 
  1020 ;; Auto vars:     Size  Location     Type
  1021 ;;  quotient        2    9[COMMON] unsigned int 
  1022 ;;  counter         1   11[COMMON] unsigned char 
  1023 ;; Return value:  Size  Location     Type
  1024 ;;                  2    5[COMMON] unsigned int 
  1025 ;; Registers used:
  1026 ;;		wreg, status,2, status,0, btemp+1
  1027 ;; Tracked objects:
  1028 ;;		On entry : 0/0
  1029 ;;		On exit  : 0/0
  1030 ;;		Unchanged: 0/0
  1031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1032 ;;      Params:         4       0       0       0       0
  1033 ;;      Locals:         3       0       0       0       0
  1034 ;;      Temps:          0       0       0       0       0
  1035 ;;      Totals:         7       0       0       0       0
  1036 ;;Total ram usage:        7 bytes
  1037 ;; Hardware stack levels used: 1
  1038 ;; This function calls:
  1039 ;;		Nothing
  1040 ;; This function is called by:
  1041 ;;		_main
  1042 ;; This function uses a non-reentrant model
  1043 ;;
  1044                           
  1045     061E                     ___lwdiv:	
  1046                           ;psect for function ___lwdiv
  1047                           
  1048     061E                     l697:	
  1049                           ;incstack = 0
  1050                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  1051                           
  1052     061E  01F9               	clrf	___lwdiv@quotient
  1053     061F  01FA               	clrf	___lwdiv@quotient+1
  1054     0620                     l699:
  1055     0620  0875               	movf	___lwdiv@divisor,w
  1056     0621  0476               	iorwf	___lwdiv@divisor+1,w
  1057     0622  1903               	btfsc	3,2
  1058     0623  2E25               	goto	u611
  1059     0624  2E26               	goto	u610
  1060     0625                     u611:
  1061     0625  2E5D               	goto	l719
  1062     0626                     u610:
  1063     0626                     l701:
  1064     0626  01FB               	clrf	___lwdiv@counter
  1065     0627  0AFB               	incf	___lwdiv@counter,f
  1066     0628  2E34               	goto	l707
  1067     0629                     l703:
  1068     0629  3001               	movlw	1
  1069     062A                     u625:
  1070     062A  1003               	clrc
  1071     062B  0DF5               	rlf	___lwdiv@divisor,f
  1072     062C  0DF6               	rlf	___lwdiv@divisor+1,f
  1073     062D  3EFF               	addlw	-1
  1074     062E  1D03               	skipz
  1075     062F  2E2A               	goto	u625
  1076     0630                     l705:
  1077     0630  3001               	movlw	1
  1078     0631  00FF               	movwf	btemp+1
  1079     0632  087F               	movf	btemp+1,w
  1080     0633  07FB               	addwf	___lwdiv@counter,f
  1081     0634                     l707:
  1082     0634  1FF6               	btfss	___lwdiv@divisor+1,7
  1083     0635  2E37               	goto	u631
  1084     0636  2E38               	goto	u630
  1085     0637                     u631:
  1086     0637  2E29               	goto	l703
  1087     0638                     u630:
  1088     0638                     l709:
  1089     0638  3001               	movlw	1
  1090     0639                     u645:
  1091     0639  1003               	clrc
  1092     063A  0DF9               	rlf	___lwdiv@quotient,f
  1093     063B  0DFA               	rlf	___lwdiv@quotient+1,f
  1094     063C  3EFF               	addlw	-1
  1095     063D  1D03               	skipz
  1096     063E  2E39               	goto	u645
  1097     063F  0876               	movf	___lwdiv@divisor+1,w
  1098     0640  0278               	subwf	___lwdiv@dividend+1,w
  1099     0641  1D03               	skipz
  1100     0642  2E45               	goto	u655
  1101     0643  0875               	movf	___lwdiv@divisor,w
  1102     0644  0277               	subwf	___lwdiv@dividend,w
  1103     0645                     u655:
  1104     0645  1C03               	skipc
  1105     0646  2E48               	goto	u651
  1106     0647  2E49               	goto	u650
  1107     0648                     u651:
  1108     0648  2E50               	goto	l715
  1109     0649                     u650:
  1110     0649                     l711:
  1111     0649  0875               	movf	___lwdiv@divisor,w
  1112     064A  02F7               	subwf	___lwdiv@dividend,f
  1113     064B  0876               	movf	___lwdiv@divisor+1,w
  1114     064C  1C03               	skipc
  1115     064D  03F8               	decf	___lwdiv@dividend+1,f
  1116     064E  02F8               	subwf	___lwdiv@dividend+1,f
  1117     064F                     l713:
  1118     064F  1479               	bsf	___lwdiv@quotient,0
  1119     0650                     l715:
  1120     0650  3001               	movlw	1
  1121     0651                     u665:
  1122     0651  1003               	clrc
  1123     0652  0CF6               	rrf	___lwdiv@divisor+1,f
  1124     0653  0CF5               	rrf	___lwdiv@divisor,f
  1125     0654  3EFF               	addlw	-1
  1126     0655  1D03               	skipz
  1127     0656  2E51               	goto	u665
  1128     0657                     l717:
  1129     0657  3001               	movlw	1
  1130     0658  02FB               	subwf	___lwdiv@counter,f
  1131     0659  1D03               	btfss	3,2
  1132     065A  2E5C               	goto	u671
  1133     065B  2E5D               	goto	u670
  1134     065C                     u671:
  1135     065C  2E38               	goto	l709
  1136     065D                     u670:
  1137     065D                     l719:
  1138     065D  087A               	movf	___lwdiv@quotient+1,w
  1139     065E  00F6               	movwf	?___lwdiv+1
  1140     065F  0879               	movf	___lwdiv@quotient,w
  1141     0660  00F5               	movwf	?___lwdiv
  1142     0661                     l415:
  1143     0661  0008               	return
  1144     0662                     __end_of___lwdiv:
  1145     007E                     btemp	set	126	;btemp
  1146     007E                     wtemp0	set	126
  1147                           
  1148                           	psect	config
  1149                           
  1150                           ;Config register CONFIG @ 0x2007
  1151                           ;	Oscillator Selection bits
  1152                           ;	FOSC = HS, HS oscillator
  1153                           ;	Watchdog Timer Enable bit
  1154                           ;	WDTE = ON, WDT enabled
  1155                           ;	Power-up Timer Enable bit
  1156                           ;	PWRTE = ON, PWRT enabled
  1157                           ;	Brown-out Reset Enable bit
  1158                           ;	BOREN = OFF, BOR disabled
  1159                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1160                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1161                           ;	Data EEPROM Memory Code Protection bit
  1162                           ;	CPD = OFF, Data EEPROM code protection off
  1163                           ;	Flash Program Memory Write Enable bits
  1164                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1165                           ;	In-Circuit Debugger Mode bit
  1166                           ;	DEBUG = 0x1, unprogrammed default
  1167                           ;	Flash Program Memory Code Protection bit
  1168                           ;	CP = OFF, Code protection off
  1169     2007                     	org	8199
  1170     2007  3F36               	dw	16182

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      6      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->___lwdiv
    ___lwdiv->___lwmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2068
                                             12 COMMON     2     2      0
                                              0 BANK0      6     6      0
                            ___lwdiv
                            ___lwmod
                            _hienthi
 ---------------------------------------------------------------------------------
 (1) _hienthi                                              2     2      0     176
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___lwmod                                              5     1      4    1071
                                              0 COMMON     5     1      4
 ---------------------------------------------------------------------------------
 (1) ___lwdiv                                              7     3      4     618
                                              5 COMMON     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___lwdiv
     ___lwmod (ARG)
   ___lwmod
   _hienthi

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      6      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Dec 18 11:28:36 2023

                      pc 0002                       l44 06F6                       l45 06F8  
                     l39 06EB                       fsr 0004                      l415 0661  
                    l425 061D                      l701 0626                      l711 0649  
                    l703 0629                      l713 064F                      l705 0630  
                    l715 0650                      l707 0634                      l731 05F8  
                    l723 05E4                      l717 0657                      l709 0638  
                    l733 05FC                      l725 05EA                      l741 0619  
                    l719 065D                      l735 0606                      l727 05ED  
                    l737 060C                      l729 05F4                      l761 071C  
                    l745 06EC                      l739 0613                      l771 0761  
                    l763 071D                      l755 06F9                      l747 06F0  
                    l693 0663                      l781 07A5                      l773 0785  
                    l765 074A                      l757 0710                      l749 06F4  
                    l695 066D                      l791 07E1                      l783 07B8  
                    l775 078E                      l767 074D                      l759 0719  
                    l697 061E                      l785 07CF                      l777 0791  
                    l769 074E                      l699 0620                      l787 07D8  
                    l779 0792                      l789 07DB                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _RC0 0038  
                    _RB3 0033                      _RC1 0039                      _RB4 0034  
                    _RC2 003A                      _RB5 0035                      _RC3 003B  
                    _RB6 0036                      _RB7 0037                      u410 067C  
                    u411 0678                      u500 06B2                      u501 06AE  
                    u405 0670                      u440 068E                      u424 067F  
                    u441 068A                      u610 0626                      u530 06C4  
                    u514 06B5                      u611 0625                      u531 06C0  
                    u435 0682                      u700 05FC                      u604 06EB  
                    u380 066A                      u701 05FB                      u525 06B8  
                    u381 0666                      u630 0638                      u710 0606  
                    u470 06A0                      u454 0691                      u631 0637  
                    u711 0605                      u471 069C                      u560 06D6  
                    u544 06C7                      u625 062A                      u561 06D2  
                    u465 0694                      u650 0649                      u730 0619  
                    u394 066D                      u651 0648                      u731 0618  
                    u715 0602                      u555 06CA                      u484 06A3  
                    u740 07EA                      u645 0639                      u725 060D  
                    u741 07E9                      u670 065D                      u590 06E8  
                    u574 06D9                      u671 065C                      u655 0645  
                    u591 06E4                      u495 06A6                      u680 05EA  
                    u665 0651                      u681 05E9                      u585 06DC  
                    u757 0714                      u695 05EE                      u767 0745  
                    u777 0789                      u787 07D3                      fsr0 0004  
                    indf 0000                     _main 06EC                     btemp 007E  
                   start 0000                    ?_main 0070          __end_of___lwdiv 0662  
        __end_of___lwmod 061E                    _PORTB 0006                    _PORTC 0007  
                  _TRISB 0086                    _TRISC 0087          __end_of_hienthi 06EC  
                  main@i 002E                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 007C                ??___lwdiv 0079                ??___lwmod 0074  
                 _ma_led 0020                ??_hienthi 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 05C7            hienthi@dulieu 0071  
             __pmaintext 06EC                  ___lwdiv 061E                  ___lwmod 05E4  
                __ptext1 0662                  __ptext2 05E4                  __ptext3 061E  
                _hienthi 0662     end_of_initialization 07FC      start_initialization 07EE  
             init_fetch0 05D1              __pdataBANK0 0020                ___latbits 0002  
          __pcstackBANK0 002A         ___lwdiv@dividend 0077                 ?___lwdiv 0075  
               ?___lwmod 0070                 ?_hienthi 0070         ___lwdiv@quotient 0079  
               _main$656 002C                 _main$657 002A          ___lwdiv@divisor 0075  
        ___lwdiv@counter 007B                 init_ram0 05D5         ___lwmod@dividend 0072  
        ___lwmod@divisor 0070          ___lwmod@counter 0074  
