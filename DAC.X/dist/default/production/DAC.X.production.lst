

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 19 00:11:58 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10     0000                     
    11                           ; Generated 22/03/2023 GMT
    12                           ; 
    13                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    14                           ; All rights reserved.
    15                           ; 
    16                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    17                           ; 
    18                           ; Redistribution and use in source and binary forms, with or without modification, are
    19                           ; permitted provided that the following conditions are met:
    20                           ; 
    21                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    22                           ;        conditions and the following disclaimer.
    23                           ; 
    24                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    25                           ;        of conditions and the following disclaimer in the documentation and/or other
    26                           ;        materials provided with the distribution. Publication is not required when
    27                           ;        this file is used in an embedded application.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F877A Definitions
    43                           ; 
    44                           ; SFR Addresses
    45     0000                     	;# 
    46     0001                     	;# 
    47     0002                     	;# 
    48     0003                     	;# 
    49     0004                     	;# 
    50     0005                     	;# 
    51     0006                     	;# 
    52     0007                     	;# 
    53     0008                     	;# 
    54     0009                     	;# 
    55     000A                     	;# 
    56     000B                     	;# 
    57     000C                     	;# 
    58     000D                     	;# 
    59     000E                     	;# 
    60     000E                     	;# 
    61     000F                     	;# 
    62     0010                     	;# 
    63     0011                     	;# 
    64     0012                     	;# 
    65     0013                     	;# 
    66     0014                     	;# 
    67     0015                     	;# 
    68     0015                     	;# 
    69     0016                     	;# 
    70     0017                     	;# 
    71     0018                     	;# 
    72     0019                     	;# 
    73     001A                     	;# 
    74     001B                     	;# 
    75     001B                     	;# 
    76     001C                     	;# 
    77     001D                     	;# 
    78     001E                     	;# 
    79     001F                     	;# 
    80     0081                     	;# 
    81     0085                     	;# 
    82     0086                     	;# 
    83     0087                     	;# 
    84     0088                     	;# 
    85     0089                     	;# 
    86     008C                     	;# 
    87     008D                     	;# 
    88     008E                     	;# 
    89     0091                     	;# 
    90     0092                     	;# 
    91     0093                     	;# 
    92     0094                     	;# 
    93     0098                     	;# 
    94     0099                     	;# 
    95     009C                     	;# 
    96     009D                     	;# 
    97     009E                     	;# 
    98     009F                     	;# 
    99     010C                     	;# 
   100     010D                     	;# 
   101     010E                     	;# 
   102     010F                     	;# 
   103     018C                     	;# 
   104     018D                     	;# 
   105     0000                     	;# 
   106     0001                     	;# 
   107     0002                     	;# 
   108     0003                     	;# 
   109     0004                     	;# 
   110     0005                     	;# 
   111     0006                     	;# 
   112     0007                     	;# 
   113     0008                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0088                     	;# 
   145     0089                     	;# 
   146     008C                     	;# 
   147     008D                     	;# 
   148     008E                     	;# 
   149     0091                     	;# 
   150     0092                     	;# 
   151     0093                     	;# 
   152     0094                     	;# 
   153     0098                     	;# 
   154     0099                     	;# 
   155     009C                     	;# 
   156     009D                     	;# 
   157     009E                     	;# 
   158     009F                     	;# 
   159     010C                     	;# 
   160     010D                     	;# 
   161     010E                     	;# 
   162     010F                     	;# 
   163     018C                     	;# 
   164     018D                     	;# 
   165     001E                     _ADRESH	set	30
   166     001F                     _ADCON0bits	set	31
   167     001F                     _ADCON0	set	31
   168     0006                     _PORTB	set	6
   169     00FA                     _GO_DONE	set	250
   170     009E                     _ADRESL	set	158
   171     009F                     _ADCON1	set	159
   172     0086                     _TRISB	set	134
   173                           
   174                           	psect	cinit
   175     07FC                     start_initialization:	
   176                           ; #config settings
   177                           
   178     07FC                     __initialization:
   179     07FC                     end_of_initialization:	
   180                           ;End of C runtime variable initialization code
   181                           
   182     07FC                     __end_of__initialization:
   183     07FC  0183               	clrf	3
   184     07FD  120A  118A  2F9E   	ljmp	_main	;jump to C main() function
   185                           
   186                           	psect	cstackCOMMON
   187     0070                     __pcstackCOMMON:
   188     0070                     ?_ADC_Init:
   189     0070                     ??_ADC_Init:	
   190                           ; 1 bytes @ 0x0
   191                           
   192     0070                     ?_main:	
   193                           ; 1 bytes @ 0x0
   194                           
   195     0070                     ?_ADC_Read:	
   196                           ; 1 bytes @ 0x0
   197                           
   198                           
   199                           ; 2 bytes @ 0x0
   200     0070                     	ds	2
   201     0072                     ??_ADC_Read:
   202                           
   203                           ; 1 bytes @ 0x2
   204     0072                     	ds	1
   205     0073                     ADC_Read@ANC:
   206                           
   207                           ; 1 bytes @ 0x3
   208     0073                     	ds	1
   209     0074                     ??_main:
   210                           
   211                           ; 1 bytes @ 0x4
   212     0074                     	ds	2
   213     0076                     main@AN0RES:
   214                           
   215                           ; 2 bytes @ 0x6
   216     0076                     	ds	2
   217                           
   218                           	psect	maintext
   219     079E                     __pmaintext:	
   220 ;;
   221 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   222 ;;
   223 ;; *************** function _main *****************
   224 ;; Defined at:
   225 ;;		line 16 in file "main.c"
   226 ;; Parameters:    Size  Location     Type
   227 ;;		None
   228 ;; Auto vars:     Size  Location     Type
   229 ;;  AN0RES          2    6[COMMON] unsigned short 
   230 ;; Return value:  Size  Location     Type
   231 ;;                  1    wreg      void 
   232 ;; Registers used:
   233 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   234 ;; Tracked objects:
   235 ;;		On entry : B00/0
   236 ;;		On exit  : 0/0
   237 ;;		Unchanged: 0/0
   238 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   239 ;;      Params:         0       0       0       0       0
   240 ;;      Locals:         2       0       0       0       0
   241 ;;      Temps:          2       0       0       0       0
   242 ;;      Totals:         4       0       0       0       0
   243 ;;Total ram usage:        4 bytes
   244 ;; Hardware stack levels required when called: 1
   245 ;; This function calls:
   246 ;;		_ADC_Init
   247 ;;		_ADC_Read
   248 ;; This function is called by:
   249 ;;		Startup code after reset
   250 ;; This function uses a non-reentrant model
   251 ;;
   252                           
   253     079E                     _main:	
   254                           ;psect for function _main
   255                           
   256     079E                     l630:	
   257                           ;incstack = 0
   258                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   259                           
   260                           
   261                           ;main.c: 18:   ADC_Init();
   262     079E  120A  118A  2795  120A  118A  	fcall	_ADC_Init
   263     07A3                     l632:
   264                           
   265                           ;main.c: 19:   TRISB = 0x00;
   266     07A3  1683               	bsf	3,5	;RP0=1, select bank1
   267     07A4  1303               	bcf	3,6	;RP1=0, select bank1
   268     07A5  0186               	clrf	6	;volatile
   269     07A6                     l634:
   270                           
   271                           ;main.c: 20:   PORTB = 0x00;
   272     07A6  1283               	bcf	3,5	;RP0=0, select bank0
   273     07A7  1303               	bcf	3,6	;RP1=0, select bank0
   274     07A8  0186               	clrf	6	;volatile
   275     07A9                     l636:
   276                           
   277                           ;main.c: 23:   {;main.c: 24:     AN0RES = ADC_Read(0)>>2;
   278     07A9  3000               	movlw	0
   279     07AA  120A  118A  27CC  120A  118A  	fcall	_ADC_Read
   280     07AF  0870               	movf	?_ADC_Read,w
   281     07B0  00F4               	movwf	??_main
   282     07B1  0871               	movf	?_ADC_Read+1,w
   283     07B2  00F5               	movwf	??_main+1
   284     07B3  1003               	clrc
   285     07B4  0CF5               	rrf	??_main+1,f
   286     07B5  0CF4               	rrf	??_main,f
   287     07B6  1003               	clrc
   288     07B7  0CF5               	rrf	??_main+1,f
   289     07B8  0CF4               	rrf	??_main,f
   290     07B9  0874               	movf	??_main,w
   291     07BA  00F6               	movwf	main@AN0RES
   292     07BB  0875               	movf	??_main+1,w
   293     07BC  00F7               	movwf	main@AN0RES+1
   294     07BD                     l638:
   295                           
   296                           ;main.c: 25:     PORTB = AN0RES;
   297     07BD  0876               	movf	main@AN0RES,w
   298     07BE  1283               	bcf	3,5	;RP0=0, select bank0
   299     07BF  1303               	bcf	3,6	;RP1=0, select bank0
   300     07C0  0086               	movwf	6	;volatile
   301     07C1                     l640:
   302                           
   303                           ;main.c: 26:     _delay((unsigned long)((1)*(4000000/4000.0)));
   304     07C1  30C7               	movlw	199
   305     07C2  00F4               	movwf	??_main
   306     07C3                     u77:
   307     07C3  2FC4               	nop2
   308     07C4  0BF4               	decfsz	??_main,f
   309     07C5  2FC3               	goto	u77
   310     07C6  2FC7               	nop2
   311     07C7  2FC8               	nop2
   312     07C8  2FA9               	goto	l636
   313     07C9  120A  118A  2800   	ljmp	start
   314     07CC                     __end_of_main:
   315                           
   316                           	psect	text1
   317     07CC                     __ptext1:	
   318 ;; *************** function _ADC_Read *****************
   319 ;; Defined at:
   320 ;;		line 37 in file "main.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;  ANC             1    wreg     unsigned char 
   323 ;; Auto vars:     Size  Location     Type
   324 ;;  ANC             1    3[COMMON] unsigned char 
   325 ;; Return value:  Size  Location     Type
   326 ;;                  2    0[COMMON] unsigned short 
   327 ;; Registers used:
   328 ;;		wreg, status,2, status,0, btemp+1
   329 ;; Tracked objects:
   330 ;;		On entry : 0/0
   331 ;;		On exit  : 0/0
   332 ;;		Unchanged: 0/0
   333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   334 ;;      Params:         2       0       0       0       0
   335 ;;      Locals:         1       0       0       0       0
   336 ;;      Temps:          1       0       0       0       0
   337 ;;      Totals:         4       0       0       0       0
   338 ;;Total ram usage:        4 bytes
   339 ;; Hardware stack levels used: 1
   340 ;; This function calls:
   341 ;;		Nothing
   342 ;; This function is called by:
   343 ;;		_main
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347     07CC                     _ADC_Read:	
   348                           ;psect for function _ADC_Read
   349                           
   350                           
   351                           ;incstack = 0
   352                           ; Regs used in _ADC_Read: [wreg+status,2+status,0+btemp+1]
   353                           ;ADC_Read@ANC stored from wreg
   354     07CC  00F3               	movwf	ADC_Read@ANC
   355     07CD                     l614:
   356                           
   357                           ;main.c: 37: uint16_t ADC_Read(uint8_t ANC);main.c: 38: {;main.c: 39:   if(ANC<0 || ANC>
      +                          7)
   358     07CD  3008               	movlw	8
   359     07CE  0273               	subwf	ADC_Read@ANC,w
   360     07CF  1C03               	skipc
   361     07D0  2FD2               	goto	u41
   362     07D1  2FD3               	goto	u40
   363     07D2                     u41:
   364     07D2  2FD6               	goto	l620
   365     07D3                     u40:
   366     07D3                     l616:
   367                           
   368                           ;main.c: 40:   { return 0;}
   369     07D3  01F0               	clrf	?_ADC_Read
   370     07D4  01F1               	clrf	?_ADC_Read+1
   371     07D5  2FFB               	goto	l37
   372     07D6                     l620:
   373                           
   374                           ;main.c: 41:   ADCON0 &= 0x11000101;
   375     07D6  3001               	movlw	1
   376     07D7  00FF               	movwf	btemp+1
   377     07D8  087F               	movf	btemp+1,w
   378     07D9  1283               	bcf	3,5	;RP0=0, select bank0
   379     07DA  1303               	bcf	3,6	;RP1=0, select bank0
   380     07DB  059F               	andwf	31,f	;volatile
   381                           
   382                           ;main.c: 42:   ADCON0 |= ANC<<3;
   383     07DC  0873               	movf	ADC_Read@ANC,w	;volatile
   384     07DD  00F2               	movwf	??_ADC_Read
   385     07DE  3002               	movlw	2
   386     07DF                     u55:
   387     07DF  1003               	clrc
   388     07E0  0DF2               	rlf	??_ADC_Read,f
   389     07E1  3EFF               	addlw	-1
   390     07E2  1D03               	skipz
   391     07E3  2FDF               	goto	u55
   392     07E4  1003               	clrc
   393     07E5  0D72               	rlf	??_ADC_Read,w
   394     07E6  00FF               	movwf	btemp+1
   395     07E7  087F               	movf	btemp+1,w
   396     07E8  049F               	iorwf	31,f	;volatile
   397     07E9                     l622:
   398                           
   399                           ;main.c: 44:   _delay((unsigned long)((30)*(4000000/4000000.0)));
   400     07E9  3009               	movlw	9
   401     07EA  00F2               	movwf	??_ADC_Read
   402     07EB                     u87:
   403     07EB  0BF2               	decfsz	??_ADC_Read,f
   404     07EC  2FEB               	goto	u87
   405     07ED  2FEE               	nop2
   406     07EE                     l624:
   407                           
   408                           ;main.c: 45:   GO_DONE = 1;
   409     07EE  1283               	bcf	3,5	;RP0=0, select bank0
   410     07EF  1303               	bcf	3,6	;RP1=0, select bank0
   411     07F0  151F               	bsf	31,2	;volatile
   412     07F1                     l38:	
   413                           ;main.c: 46:   while(ADCON0bits.GO_DONE);
   414                           
   415     07F1  191F               	btfsc	31,2	;volatile
   416     07F2  2FF4               	goto	u61
   417     07F3  2FF5               	goto	u60
   418     07F4                     u61:
   419     07F4  2FF1               	goto	l38
   420     07F5                     u60:
   421     07F5                     l626:
   422                           
   423                           ;main.c: 48:   return ((ADRESH << 8) + ADRESL);
   424     07F5  081E               	movf	30,w	;volatile
   425     07F6  00F1               	movwf	?_ADC_Read+1
   426     07F7  1683               	bsf	3,5	;RP0=1, select bank1
   427     07F8  1303               	bcf	3,6	;RP1=0, select bank1
   428     07F9  081E               	movf	30,w	;volatile
   429     07FA  00F0               	movwf	?_ADC_Read
   430     07FB                     l37:
   431     07FB  0008               	return
   432     07FC                     __end_of_ADC_Read:
   433                           
   434                           	psect	text2
   435     0795                     __ptext2:	
   436 ;; *************** function _ADC_Init *****************
   437 ;; Defined at:
   438 ;;		line 31 in file "main.c"
   439 ;; Parameters:    Size  Location     Type
   440 ;;		None
   441 ;; Auto vars:     Size  Location     Type
   442 ;;		None
   443 ;; Return value:  Size  Location     Type
   444 ;;                  1    wreg      void 
   445 ;; Registers used:
   446 ;;		wreg
   447 ;; Tracked objects:
   448 ;;		On entry : 0/0
   449 ;;		On exit  : 0/0
   450 ;;		Unchanged: 0/0
   451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   452 ;;      Params:         0       0       0       0       0
   453 ;;      Locals:         0       0       0       0       0
   454 ;;      Temps:          0       0       0       0       0
   455 ;;      Totals:         0       0       0       0       0
   456 ;;Total ram usage:        0 bytes
   457 ;; Hardware stack levels used: 1
   458 ;; This function calls:
   459 ;;		Nothing
   460 ;; This function is called by:
   461 ;;		_main
   462 ;; This function uses a non-reentrant model
   463 ;;
   464                           
   465     0795                     _ADC_Init:	
   466                           ;psect for function _ADC_Init
   467                           
   468     0795                     l584:	
   469                           ;incstack = 0
   470                           ; Regs used in _ADC_Init: [wreg]
   471                           
   472                           
   473                           ;main.c: 33:   ADCON0 = 0x41;
   474     0795  3041               	movlw	65
   475     0796  1283               	bcf	3,5	;RP0=0, select bank0
   476     0797  1303               	bcf	3,6	;RP1=0, select bank0
   477     0798  009F               	movwf	31	;volatile
   478                           
   479                           ;main.c: 34:   ADCON1 = 0x80;
   480     0799  3080               	movlw	128
   481     079A  1683               	bsf	3,5	;RP0=1, select bank1
   482     079B  1303               	bcf	3,6	;RP1=0, select bank1
   483     079C  009F               	movwf	31	;volatile
   484     079D                     l33:
   485     079D  0008               	return
   486     079E                     __end_of_ADC_Init:
   487     007E                     btemp	set	126	;btemp
   488     007E                     wtemp0	set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      67
                                              4 COMMON     4     4      0
                           _ADC_Init
                           _ADC_Read
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      44
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 19 00:11:58 2023

                     l33 079D                       l37 07FB                       l38 07F1  
                     u40 07D3                       u41 07D2                       u60 07F5  
                     u61 07F4                       u55 07DF                       u77 07C3  
                     u87 07EB                      l620 07D6                      l622 07E9  
                    l614 07CD                      l630 079E                      l624 07EE  
                    l616 07D3                      l640 07C1                      l632 07A3  
                    l626 07F5                      l634 07A6                      l636 07A9  
                    l638 07BD                      l584 0795                     _main 079E  
                   btemp 007E         __end_of_ADC_Init 079E         __end_of_ADC_Read 07FC  
                   start 0000                    ?_main 0070                    _PORTB 0006  
                  _TRISB 0086                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 07CC                   ??_main 0074  
                 _ADCON0 001F                   _ADCON1 009F                   _ADRESH 001E  
                 _ADRESL 009E                ?_ADC_Init 0070                ?_ADC_Read 0070  
__end_of__initialization 07FC           __pcstackCOMMON 0070               ??_ADC_Init 0070  
             ??_ADC_Read 0072               __pmaintext 079E                  _GO_DONE 00FA  
                __ptext1 07CC                  __ptext2 0795     end_of_initialization 07FC  
             main@AN0RES 0076      start_initialization 07FC                ___latbits 0002  
               _ADC_Init 0795                 _ADC_Read 07CC              ADC_Read@ANC 0073  
             _ADCON0bits 001F  
