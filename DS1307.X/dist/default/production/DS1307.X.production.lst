

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 19 03:24:43 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2,group=3
    15                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text9,local,class=CODE,merge=1,delta=2,group=3
    23                           	psect	text10,local,class=CODE,merge=1,delta=2,group=3
    24                           	psect	text11,local,class=CODE,merge=1,delta=2,group=3
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=3
    26                           	psect	text13,local,class=CODE,merge=1,delta=2,group=3
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=3
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    29                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text25,local,class=CODE,merge=1,delta=2
    39                           	psect	text26,local,class=CODE,merge=1,delta=2
    40                           	psect	text27,local,class=CODE,merge=1,delta=2
    41                           	psect	text28,local,class=CODE,merge=1,delta=2
    42                           	psect	text29,local,class=CODE,merge=1,delta=2
    43                           	psect	text30,local,class=CODE,merge=1,delta=2
    44                           	psect	text31,local,class=CODE,merge=1,delta=2
    45                           	psect	text32,local,class=CODE,merge=1,delta=2
    46                           	psect	text33,local,class=CODE,merge=1,delta=2
    47                           	psect	text34,local,class=CODE,merge=1,delta=2
    48                           	psect	text35,local,class=CODE,merge=1,delta=2
    49                           	psect	text36,local,class=CODE,merge=1,delta=2
    50                           	psect	text37,local,class=CODE,merge=1,delta=2
    51                           	psect	text38,local,class=CODE,merge=1,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	psect	text6_split_1,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55     0000                     
    56                           ; Generated 22/03/2023 GMT
    57                           ; 
    58                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F877A Definitions
    88                           ; 
    89                           ; SFR Addresses
    90     0000                     	;# 
    91     0001                     	;# 
    92     0002                     	;# 
    93     0003                     	;# 
    94     0004                     	;# 
    95     0005                     	;# 
    96     0006                     	;# 
    97     0007                     	;# 
    98     0008                     	;# 
    99     0009                     	;# 
   100     000A                     	;# 
   101     000B                     	;# 
   102     000C                     	;# 
   103     000D                     	;# 
   104     000E                     	;# 
   105     000E                     	;# 
   106     000F                     	;# 
   107     0010                     	;# 
   108     0011                     	;# 
   109     0012                     	;# 
   110     0013                     	;# 
   111     0014                     	;# 
   112     0015                     	;# 
   113     0015                     	;# 
   114     0016                     	;# 
   115     0017                     	;# 
   116     0018                     	;# 
   117     0019                     	;# 
   118     001A                     	;# 
   119     001B                     	;# 
   120     001B                     	;# 
   121     001C                     	;# 
   122     001D                     	;# 
   123     001E                     	;# 
   124     001F                     	;# 
   125     0081                     	;# 
   126     0085                     	;# 
   127     0086                     	;# 
   128     0087                     	;# 
   129     0088                     	;# 
   130     0089                     	;# 
   131     008C                     	;# 
   132     008D                     	;# 
   133     008E                     	;# 
   134     0091                     	;# 
   135     0092                     	;# 
   136     0093                     	;# 
   137     0094                     	;# 
   138     0098                     	;# 
   139     0099                     	;# 
   140     009C                     	;# 
   141     009D                     	;# 
   142     009E                     	;# 
   143     009F                     	;# 
   144     010C                     	;# 
   145     010D                     	;# 
   146     010E                     	;# 
   147     010F                     	;# 
   148     018C                     	;# 
   149     018D                     	;# 
   150     0000                     	;# 
   151     0001                     	;# 
   152     0002                     	;# 
   153     0003                     	;# 
   154     0004                     	;# 
   155     0005                     	;# 
   156     0006                     	;# 
   157     0007                     	;# 
   158     0008                     	;# 
   159     0009                     	;# 
   160     000A                     	;# 
   161     000B                     	;# 
   162     000C                     	;# 
   163     000D                     	;# 
   164     000E                     	;# 
   165     000E                     	;# 
   166     000F                     	;# 
   167     0010                     	;# 
   168     0011                     	;# 
   169     0012                     	;# 
   170     0013                     	;# 
   171     0014                     	;# 
   172     0015                     	;# 
   173     0015                     	;# 
   174     0016                     	;# 
   175     0017                     	;# 
   176     0018                     	;# 
   177     0019                     	;# 
   178     001A                     	;# 
   179     001B                     	;# 
   180     001B                     	;# 
   181     001C                     	;# 
   182     001D                     	;# 
   183     001E                     	;# 
   184     001F                     	;# 
   185     0081                     	;# 
   186     0085                     	;# 
   187     0086                     	;# 
   188     0087                     	;# 
   189     0088                     	;# 
   190     0089                     	;# 
   191     008C                     	;# 
   192     008D                     	;# 
   193     008E                     	;# 
   194     0091                     	;# 
   195     0092                     	;# 
   196     0093                     	;# 
   197     0094                     	;# 
   198     0098                     	;# 
   199     0099                     	;# 
   200     009C                     	;# 
   201     009D                     	;# 
   202     009E                     	;# 
   203     009F                     	;# 
   204     010C                     	;# 
   205     010D                     	;# 
   206     010E                     	;# 
   207     010F                     	;# 
   208     018C                     	;# 
   209     018D                     	;# 
   210     0013                     _SSPBUF	set	19
   211     0014                     _SSPCON	set	20
   212     0006                     _PORTBbits	set	6
   213     0006                     _PORTB	set	6
   214     0063                     _SSPIF	set	99
   215     0086                     _TRISB	set	134
   216     0093                     _SSPADD	set	147
   217     048C                     _ACKEN	set	1164
   218     048D                     _ACKDT	set	1165
   219     0489                     _RSEN	set	1161
   220     048A                     _PEN	set	1162
   221     0488                     _SEN	set	1160
   222     048B                     _RCEN	set	1163
   223     048E                     _ACKSTAT	set	1166
   224     043C                     _TRISC4	set	1084
   225     043B                     _TRISC3	set	1083
   226                           
   227                           	psect	strings
   228     1000                     __pstrings:
   229     1000                     stringtab:
   230     1000                     __stringtab:
   231                           
   232                           ;	String table - string pointers are 1 byte each
   233     1000  1BFF               	btfsc	btemp+1,7
   234     1001  280A               	ljmp	stringcode
   235     1002  1383               	bcf	3,7
   236     1003  187F               	btfsc	btemp+1,0
   237     1004  1783               	bsf	3,7
   238     1005  0800               	movf	0,w
   239     1006  0A84               	incf	4,f
   240     1007  1903               	skipnz
   241     1008  0AFF               	incf	btemp+1,f
   242     1009  0008               	return
   243     100A                     stringcode:
   244     100A                     stringdir:
   245     100A  3010               	movlw	high stringdir
   246     100B  008A               	movwf	10
   247     100C  0804               	movf	4,w
   248     100D  0A84               	incf	4,f
   249     100E  0782               	addwf	2,f
   250     100F                     __stringbase:
   251     100F  3400               	retlw	0
   252     1010                     __end_of__stringtab:
   253     1010                     STR_1:
   254     1010  3458               	retlw	88	;'X'
   255     1011  3469               	retlw	105	;'i'
   256     1012  346E               	retlw	110	;'n'
   257     1013  3420               	retlw	32	;' '
   258     1014  3463               	retlw	99	;'c'
   259     1015  3468               	retlw	104	;'h'
   260     1016  3461               	retlw	97	;'a'
   261     1017  346F               	retlw	111	;'o'
   262     1018  3400               	retlw	0
   263     1019                     STR_2:
   264     1019  3420               	retlw	32	;' '
   265     101A  3425               	retlw	37	;'%'
   266     101B  342E               	retlw	46	;'.'
   267     101C  3432               	retlw	50	;'2'
   268     101D  3466               	retlw	102	;'f'
   269     101E  3400               	retlw	0
   270     101F                     STR_3:
   271     101F  3469               	retlw	105	;'i'
   272     1020  346E               	retlw	110	;'n'
   273     1021  3466               	retlw	102	;'f'
   274     1022  3400               	retlw	0
   275     1023                     STR_6:
   276     1023  346E               	retlw	110	;'n'
   277     1024  3461               	retlw	97	;'a'
   278     1025  346E               	retlw	110	;'n'
   279     1026  3400               	retlw	0
   280     101F                     
   281                           	psect	cinit
   282     07E2                     start_initialization:	
   283                           ; #config settings
   284                           
   285     07E2                     __initialization:
   286                           
   287                           ; Clear objects allocated to BANK0
   288     07E2  1383               	bcf	3,7	;select IRP bank0
   289     07E3  3065               	movlw	low __pbssBANK0
   290     07E4  0084               	movwf	4
   291     07E5  306D               	movlw	low (__pbssBANK0+8)
   292     07E6  160A  158A  2743  120A  118A  	fcall	clear_ram0
   293                           
   294                           ; Clear objects allocated to BANK1
   295     07EB  30E4               	movlw	low __pbssBANK1
   296     07EC  0084               	movwf	4
   297     07ED  30F0               	movlw	low (__pbssBANK1+12)
   298     07EE  160A  158A  2743  120A  118A  	fcall	clear_ram0
   299                           
   300                           ; Clear objects allocated to BANK3
   301     07F3  1783               	bsf	3,7	;select IRP bank2
   302     07F4  3090               	movlw	low __pbssBANK3
   303     07F5  0084               	movwf	4
   304     07F6  30E0               	movlw	low (__pbssBANK3+80)
   305     07F7  160A  158A  2743  120A  118A  	fcall	clear_ram0
   306     07FC                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309     07FC                     __end_of__initialization:
   310     07FC  0183               	clrf	3
   311     07FD  160A  118A  2EB2   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssBANK0
   314     0065                     __pbssBANK0:
   315     0065                     ___fpclassifyf@F465:
   316     0065                     	ds	4
   317     0069                     _width:
   318     0069                     	ds	2
   319     006B                     _prec:
   320     006B                     	ds	2
   321                           
   322                           	psect	bssBANK1
   323     00E4                     __pbssBANK1:
   324     00E4                     floorf@F521:
   325     00E4                     	ds	4
   326     00E8                     _flags:
   327     00E8                     	ds	1
   328     00E9                     _year:
   329     00E9                     	ds	1
   330     00EA                     _month:
   331     00EA                     	ds	1
   332     00EB                     _date:
   333     00EB                     	ds	1
   334     00EC                     _day:
   335     00EC                     	ds	1
   336     00ED                     _hour:
   337     00ED                     	ds	1
   338     00EE                     _min:
   339     00EE                     	ds	1
   340     00EF                     _sec:
   341     00EF                     	ds	1
   342                           
   343                           	psect	bssBANK3
   344     0190                     __pbssBANK3:
   345     0190                     _dbuf:
   346     0190                     	ds	80
   347                           
   348                           	psect	clrtext
   349     1F43                     clear_ram0:	
   350                           ;	Called with FSR containing the base address, and
   351                           ;	W with the last address+1
   352                           
   353     1F43  0064               	clrwdt	;clear the watchdog before getting into this loop
   354     1F44                     clrloop0:
   355     1F44  0180               	clrf	0	;clear RAM location pointed to by FSR
   356     1F45  0A84               	incf	4,f	;increment pointer
   357     1F46  0604               	xorwf	4,w	;XOR with final address
   358     1F47  1903               	btfsc	3,2	;have we reached the end yet?
   359     1F48  3400               	retlw	0	;all done for this memory range, return
   360     1F49  0604               	xorwf	4,w	;XOR again to restore value
   361     1F4A  2F44               	goto	clrloop0	;do the next byte
   362                           
   363                           	psect	cstackBANK1
   364     00A0                     __pcstackBANK1:
   365     00A0                     efgtoa@ne:
   366                           
   367                           ; 2 bytes @ 0x0
   368     00A0                     	ds	2
   369     00A2                     efgtoa@p:
   370                           
   371                           ; 2 bytes @ 0x2
   372     00A2                     	ds	2
   373     00A4                     efgtoa@t:
   374                           
   375                           ; 2 bytes @ 0x4
   376     00A4                     	ds	2
   377     00A6                     _efgtoa$714:
   378                           
   379                           ; 2 bytes @ 0x6
   380     00A6                     	ds	2
   381     00A8                     efgtoa@pp:
   382                           
   383                           ; 1 bytes @ 0x8
   384     00A8                     	ds	1
   385     00A9                     efgtoa@mode:
   386                           
   387                           ; 1 bytes @ 0x9
   388     00A9                     	ds	1
   389     00AA                     efgtoa@nmode:
   390                           
   391                           ; 1 bytes @ 0xA
   392     00AA                     	ds	1
   393     00AB                     efgtoa@d:
   394                           
   395                           ; 2 bytes @ 0xB
   396     00AB                     	ds	2
   397     00AD                     efgtoa@m:
   398                           
   399                           ; 2 bytes @ 0xD
   400     00AD                     	ds	2
   401     00AF                     efgtoa@fp:
   402                           
   403                           ; 1 bytes @ 0xF
   404     00AF                     	ds	1
   405     00B0                     efgtoa@e:
   406                           
   407                           ; 2 bytes @ 0x10
   408     00B0                     	ds	2
   409     00B2                     efgtoa@w:
   410                           
   411                           ; 2 bytes @ 0x12
   412     00B2                     	ds	2
   413     00B4                     efgtoa@ou:
   414                           
   415                           ; 4 bytes @ 0x14
   416     00B4                     	ds	4
   417     00B8                     efgtoa@i:
   418                           
   419                           ; 2 bytes @ 0x18
   420     00B8                     	ds	2
   421     00BA                     efgtoa@h:
   422                           
   423                           ; 4 bytes @ 0x1A
   424     00BA                     	ds	4
   425     00BE                     efgtoa@l:
   426                           
   427                           ; 4 bytes @ 0x1E
   428     00BE                     	ds	4
   429     00C2                     efgtoa@sign:
   430                           
   431                           ; 1 bytes @ 0x22
   432     00C2                     	ds	1
   433     00C3                     efgtoa@n:
   434                           
   435                           ; 2 bytes @ 0x23
   436     00C3                     	ds	2
   437     00C5                     efgtoa@g:
   438                           
   439                           ; 4 bytes @ 0x25
   440     00C5                     	ds	4
   441     00C9                     efgtoa@u:
   442                           
   443                           ; 4 bytes @ 0x29
   444     00C9                     	ds	4
   445     00CD                     ?_vfpfcnvrt:
   446     00CD                     vfpfcnvrt@fmt:	
   447                           ; 1 bytes @ 0x2D
   448                           
   449                           
   450                           ; 1 bytes @ 0x2D
   451     00CD                     	ds	1
   452     00CE                     vfpfcnvrt@ap:
   453                           
   454                           ; 1 bytes @ 0x2E
   455     00CE                     	ds	1
   456     00CF                     ?_vfprintf:
   457     00CF                     vfprintf@fmt:	
   458                           ; 2 bytes @ 0x2F
   459                           
   460                           
   461                           ; 1 bytes @ 0x2F
   462     00CF                     	ds	1
   463     00D0                     vfprintf@ap:
   464                           
   465                           ; 1 bytes @ 0x30
   466     00D0                     	ds	1
   467     00D1                     ?_sprintf:
   468     00D1                     sprintf@fmt:	
   469                           ; 2 bytes @ 0x31
   470                           
   471                           
   472                           ; 1 bytes @ 0x31
   473     00D1                     	ds	3
   474     00D4                     main@Temp:
   475                           
   476                           ; 16 bytes @ 0x34
   477     00D4                     	ds	16
   478                           
   479                           	psect	cstackCOMMON
   480     0070                     __pcstackCOMMON:
   481     0070                     ?___fleq:
   482     0070                     ?_rtc_stop:	
   483                           ; 1 bit 
   484                           
   485     0070                     ??_rtc_stop:	
   486                           ; 1 bytes @ 0x0
   487                           
   488     0070                     ?_rtc_res:	
   489                           ; 1 bytes @ 0x0
   490                           
   491     0070                     ??_rtc_res:	
   492                           ; 1 bytes @ 0x0
   493                           
   494     0070                     ?_rtc_nak:	
   495                           ; 1 bytes @ 0x0
   496                           
   497     0070                     ??_rtc_nak:	
   498                           ; 1 bytes @ 0x0
   499                           
   500     0070                     ?_strcpy:	
   501                           ; 1 bytes @ 0x0
   502                           
   503     0070                     ?_memcpy:	
   504                           ; 1 bytes @ 0x0
   505                           
   506     0070                     ?_putch:	
   507                           ; 1 bytes @ 0x0
   508                           
   509     0070                     ??_putch:	
   510                           ; 1 bytes @ 0x0
   511                           
   512     0070                     ?_LCD_Cmd:	
   513                           ; 1 bytes @ 0x0
   514                           
   515     0070                     ??_LCD_Cmd:	
   516                           ; 1 bytes @ 0x0
   517                           
   518     0070                     ?_LCD_Data:	
   519                           ; 1 bytes @ 0x0
   520                           
   521     0070                     ??_LCD_Data:	
   522                           ; 1 bytes @ 0x0
   523                           
   524     0070                     ?_LCD_Init:	
   525                           ; 1 bytes @ 0x0
   526                           
   527     0070                     ?_rtc_int:	
   528                           ; 1 bytes @ 0x0
   529                           
   530     0070                     ??_rtc_int:	
   531                           ; 1 bytes @ 0x0
   532                           
   533     0070                     ?_waitmssp:	
   534                           ; 1 bytes @ 0x0
   535                           
   536     0070                     ??_waitmssp:	
   537                           ; 1 bytes @ 0x0
   538                           
   539     0070                     ?_rtc_send:	
   540                           ; 1 bytes @ 0x0
   541                           
   542     0070                     ??_rtc_send:	
   543                           ; 1 bytes @ 0x0
   544                           
   545     0070                     ?_rtc_read:	
   546                           ; 1 bytes @ 0x0
   547                           
   548     0070                     ??_rtc_read:	
   549                           ; 1 bytes @ 0x0
   550                           
   551     0070                     ?_rtc_read_byte:	
   552                           ; 1 bytes @ 0x0
   553                           
   554     0070                     ?_convup:	
   555                           ; 1 bytes @ 0x0
   556                           
   557     0070                     ??_convup:	
   558                           ; 1 bytes @ 0x0
   559                           
   560     0070                     ?_convd:	
   561                           ; 1 bytes @ 0x0
   562                           
   563     0070                     ??_convd:	
   564                           ; 1 bytes @ 0x0
   565                           
   566     0070                     ?_main:	
   567                           ; 1 bytes @ 0x0
   568                           
   569     0070                     ?__Umul8_16:	
   570                           ; 1 bytes @ 0x0
   571                           
   572     0070                     ?_fputc:	
   573                           ; 2 bytes @ 0x0
   574                           
   575     0070                     ?___fpclassifyf:	
   576                           ; 2 bytes @ 0x0
   577                           
   578     0070                     ?___wmul:	
   579                           ; 2 bytes @ 0x0
   580                           
   581     0070                     ?_labs:	
   582                           ; 2 bytes @ 0x0
   583                           
   584     0070                     ?___flneg:	
   585                           ; 4 bytes @ 0x0
   586                           
   587     0070                     ?___fltol:	
   588                           ; 4 bytes @ 0x0
   589                           
   590     0070                     ?___fladd:	
   591                           ; 4 bytes @ 0x0
   592                           
   593     0070                     ?___fldiv:	
   594                           ; 4 bytes @ 0x0
   595                           
   596     0070                     rtc_send@a:	
   597                           ; 4 bytes @ 0x0
   598                           
   599     0070                     convd@bcd:	
   600                           ; 1 bytes @ 0x0
   601                           
   602     0070                     __Umul8_16@multiplicand:	
   603                           ; 1 bytes @ 0x0
   604                           
   605     0070                     memcpy@s1:	
   606                           ; 1 bytes @ 0x0
   607                           
   608     0070                     putch@c:	
   609                           ; 1 bytes @ 0x0
   610                           
   611     0070                     strcpy@src:	
   612                           ; 1 bytes @ 0x0
   613                           
   614     0070                     ___wmul@multiplier:	
   615                           ; 1 bytes @ 0x0
   616                           
   617     0070                     fputc@c:	
   618                           ; 2 bytes @ 0x0
   619                           
   620     0070                     ___fleq@ff1:	
   621                           ; 2 bytes @ 0x0
   622                           
   623     0070                     ___flneg@f1:	
   624                           ; 4 bytes @ 0x0
   625                           
   626     0070                     ___fltol@f1:	
   627                           ; 4 bytes @ 0x0
   628                           
   629     0070                     ___fladd@b:	
   630                           ; 4 bytes @ 0x0
   631                           
   632     0070                     ___fldiv@a:	
   633                           ; 4 bytes @ 0x0
   634                           
   635     0070                     ___fpclassifyf@x:	
   636                           ; 4 bytes @ 0x0
   637                           
   638     0070                     labs@a:	
   639                           ; 4 bytes @ 0x0
   640                           
   641                           
   642                           ; 4 bytes @ 0x0
   643     0070                     	ds	1
   644     0071                     ??_strcpy:
   645     0071                     ??_rtc_read_byte:	
   646                           ; 1 bytes @ 0x1
   647                           
   648     0071                     rtc_read_byte@addr:	
   649                           ; 1 bytes @ 0x1
   650                           
   651     0071                     convup@bcd:	
   652                           ; 1 bytes @ 0x1
   653                           
   654     0071                     strcpy@d:	
   655                           ; 1 bytes @ 0x1
   656                           
   657     0071                     memcpy@n:	
   658                           ; 1 bytes @ 0x1
   659                           
   660                           
   661                           ; 2 bytes @ 0x1
   662     0071                     	ds	1
   663     0072                     ??__Umul8_16:
   664     0072                     LCD_Cmd@data:	
   665                           ; 1 bytes @ 0x2
   666                           
   667     0072                     LCD_Data@data:	
   668                           ; 1 bytes @ 0x2
   669                           
   670     0072                     rtc_read_byte@rec:	
   671                           ; 1 bytes @ 0x2
   672                           
   673     0072                     fputc@fp:	
   674                           ; 1 bytes @ 0x2
   675                           
   676     0072                     strcpy@dest:	
   677                           ; 1 bytes @ 0x2
   678                           
   679     0072                     ___wmul@multiplicand:	
   680                           ; 1 bytes @ 0x2
   681                           
   682                           
   683                           ; 2 bytes @ 0x2
   684     0072                     	ds	1
   685     0073                     ??_fputc:
   686     0073                     ??_memcpy:	
   687                           ; 1 bytes @ 0x3
   688                           
   689     0073                     ??_LCD_Init:	
   690                           ; 1 bytes @ 0x3
   691                           
   692     0073                     ?_LCD_String:	
   693                           ; 1 bytes @ 0x3
   694                           
   695     0073                     memcpy@tmp:	
   696                           ; 1 bytes @ 0x3
   697                           
   698     0073                     LCD_String@s:	
   699                           ; 1 bytes @ 0x3
   700                           
   701                           
   702                           ; 2 bytes @ 0x3
   703     0073                     	ds	1
   704     0074                     ??___fpclassifyf:
   705     0074                     ??_labs:	
   706                           ; 1 bytes @ 0x4
   707                           
   708     0074                     ??___wmul:	
   709                           ; 1 bytes @ 0x4
   710                           
   711     0074                     ??___flneg:	
   712                           ; 1 bytes @ 0x4
   713                           
   714     0074                     ??___fltol:	
   715                           ; 1 bytes @ 0x4
   716                           
   717     0074                     memcpy@d1:	
   718                           ; 1 bytes @ 0x4
   719                           
   720     0074                     ___wmul@product:	
   721                           ; 1 bytes @ 0x4
   722                           
   723     0074                     __Umul8_16@product:	
   724                           ; 2 bytes @ 0x4
   725                           
   726     0074                     ___fleq@ff2:	
   727                           ; 2 bytes @ 0x4
   728                           
   729     0074                     ___fladd@a:	
   730                           ; 4 bytes @ 0x4
   731                           
   732     0074                     ___fldiv@b:	
   733                           ; 4 bytes @ 0x4
   734                           
   735                           
   736                           ; 4 bytes @ 0x4
   737     0074                     	ds	1
   738     0075                     ??_LCD_String:
   739     0075                     memcpy@d:	
   740                           ; 1 bytes @ 0x5
   741                           
   742                           
   743                           ; 1 bytes @ 0x5
   744     0075                     	ds	1
   745     0076                     ?_read_prec_or_width:
   746     0076                     read_prec_or_width@ap:	
   747                           ; 2 bytes @ 0x6
   748                           
   749     0076                     memcpy@s:	
   750                           ; 1 bytes @ 0x6
   751                           
   752     0076                     __Umul8_16@word_mpld:	
   753                           ; 1 bytes @ 0x6
   754                           
   755                           
   756                           ; 2 bytes @ 0x6
   757     0076                     	ds	2
   758     0078                     ??___fleq:
   759     0078                     ??___fldiv:	
   760                           ; 1 bytes @ 0x8
   761                           
   762     0078                     ??_read_prec_or_width:	
   763                           ; 1 bytes @ 0x8
   764                           
   765     0078                     ?_fputs:	
   766                           ; 1 bytes @ 0x8
   767                           
   768     0078                     ___fltol@sign1:	
   769                           ; 2 bytes @ 0x8
   770                           
   771     0078                     ___fladd@signs:	
   772                           ; 1 bytes @ 0x8
   773                           
   774     0078                     __Umul8_16@multiplier:	
   775                           ; 1 bytes @ 0x8
   776                           
   777     0078                     read_prec_or_width@c:	
   778                           ; 1 bytes @ 0x8
   779                           
   780     0078                     fputs@fp:	
   781                           ; 1 bytes @ 0x8
   782                           
   783                           
   784                           ; 1 bytes @ 0x8
   785     0078                     	ds	1
   786     0079                     ??_fputs:
   787     0079                     ??___flmul:	
   788                           ; 1 bytes @ 0x9
   789                           
   790     0079                     ___fltol@exp1:	
   791                           ; 1 bytes @ 0x9
   792                           
   793     0079                     ___fladd@aexp:	
   794                           ; 1 bytes @ 0x9
   795                           
   796     0079                     read_prec_or_width@n:	
   797                           ; 1 bytes @ 0x9
   798                           
   799                           
   800                           ; 2 bytes @ 0x9
   801     0079                     	ds	1
   802     007A                     ___fladd@bexp:
   803                           
   804                           ; 1 bytes @ 0xA
   805     007A                     	ds	1
   806     007B                     ?_pad:
   807     007B                     ___fladd@grs:	
   808                           ; 1 bytes @ 0xB
   809                           
   810     007B                     pad@buf:	
   811                           ; 1 bytes @ 0xB
   812                           
   813     007B                     read_prec_or_width@fmt:	
   814                           ; 1 bytes @ 0xB
   815                           
   816                           
   817                           ; 1 bytes @ 0xB
   818     007B                     	ds	1
   819     007C                     pad@p:
   820                           
   821                           ; 2 bytes @ 0xC
   822     007C                     	ds	2
   823     007E                     ??_vfprintf:
   824     007E                     ??___flsub:	
   825                           ; 1 bytes @ 0xE
   826                           
   827                           
   828                           	psect	cstackBANK0
   829     0020                     __pcstackBANK0:	
   830                           ; 1 bytes @ 0xE
   831                           
   832     0020                     ??___fladd:
   833     0020                     ?___flmul:	
   834                           ; 1 bytes @ 0x0
   835                           
   836     0020                     fputs@c:	
   837                           ; 4 bytes @ 0x0
   838                           
   839     0020                     ___fpclassifyf@e:	
   840                           ; 1 bytes @ 0x0
   841                           
   842     0020                     ___fldiv@rem:	
   843                           ; 2 bytes @ 0x0
   844                           
   845     0020                     ___flmul@b:	
   846                           ; 4 bytes @ 0x0
   847                           
   848                           
   849                           ; 4 bytes @ 0x0
   850     0020                     	ds	1
   851     0021                     fputs@i:
   852                           
   853                           ; 2 bytes @ 0x1
   854     0021                     	ds	1
   855     0022                     ___fpclassifyf@u:
   856                           
   857                           ; 4 bytes @ 0x2
   858     0022                     	ds	1
   859     0023                     fputs@s:
   860                           
   861                           ; 1 bytes @ 0x3
   862     0023                     	ds	1
   863     0024                     ??_pad:
   864     0024                     ___fldiv@sign:	
   865                           ; 1 bytes @ 0x4
   866                           
   867     0024                     ___flmul@a:	
   868                           ; 1 bytes @ 0x4
   869                           
   870                           
   871                           ; 4 bytes @ 0x4
   872     0024                     	ds	1
   873     0025                     ___fldiv@new_exp:
   874     0025                     pad@i:	
   875                           ; 2 bytes @ 0x5
   876                           
   877                           
   878                           ; 2 bytes @ 0x5
   879     0025                     	ds	2
   880     0027                     pad@fp:
   881     0027                     ___fldiv@grs:	
   882                           ; 1 bytes @ 0x7
   883                           
   884                           
   885                           ; 4 bytes @ 0x7
   886     0027                     	ds	1
   887     0028                     ___flmul@sign:
   888                           
   889                           ; 1 bytes @ 0x8
   890     0028                     	ds	1
   891     0029                     ___flmul@grs:
   892                           
   893                           ; 4 bytes @ 0x9
   894     0029                     	ds	2
   895     002B                     ___fldiv@bexp:
   896                           
   897                           ; 1 bytes @ 0xB
   898     002B                     	ds	1
   899     002C                     ___fldiv@aexp:
   900                           
   901                           ; 1 bytes @ 0xC
   902     002C                     	ds	1
   903     002D                     ?_floorf:
   904     002D                     ___flmul@aexp:	
   905                           ; 4 bytes @ 0xD
   906                           
   907     002D                     floorf@x:	
   908                           ; 1 bytes @ 0xD
   909                           
   910                           
   911                           ; 4 bytes @ 0xD
   912     002D                     	ds	1
   913     002E                     ___flmul@bexp:
   914                           
   915                           ; 1 bytes @ 0xE
   916     002E                     	ds	1
   917     002F                     ___flmul@prod:
   918                           
   919                           ; 4 bytes @ 0xF
   920     002F                     	ds	2
   921     0031                     ??_floorf:
   922                           
   923                           ; 1 bytes @ 0x11
   924     0031                     	ds	2
   925     0033                     ___flmul@temp:
   926                           
   927                           ; 2 bytes @ 0x13
   928     0033                     	ds	2
   929     0035                     ?___flge:
   930     0035                     ?___flsub:	
   931                           ; 1 bit 
   932                           
   933     0035                     ___flge@ff1:	
   934                           ; 4 bytes @ 0x15
   935                           
   936     0035                     ___flsub@a:	
   937                           ; 4 bytes @ 0x15
   938                           
   939                           
   940                           ; 4 bytes @ 0x15
   941     0035                     	ds	2
   942     0037                     floorf@m:
   943                           
   944                           ; 4 bytes @ 0x17
   945     0037                     	ds	2
   946     0039                     ___flge@ff2:
   947     0039                     ___flsub@b:	
   948                           ; 4 bytes @ 0x19
   949                           
   950                           
   951                           ; 4 bytes @ 0x19
   952     0039                     	ds	2
   953     003B                     floorf@e:
   954                           
   955                           ; 2 bytes @ 0x1B
   956     003B                     	ds	2
   957     003D                     ??___flge:
   958     003D                     floorf@u:	
   959                           ; 1 bytes @ 0x1D
   960                           
   961                           
   962                           ; 4 bytes @ 0x1D
   963     003D                     	ds	4
   964     0041                     ?_efgtoa:
   965     0041                     efgtoa@f:	
   966                           ; 1 bytes @ 0x21
   967                           
   968                           
   969                           ; 4 bytes @ 0x21
   970     0041                     	ds	4
   971     0045                     efgtoa@c:
   972                           
   973                           ; 1 bytes @ 0x25
   974     0045                     	ds	1
   975     0046                     ??_efgtoa:
   976                           
   977                           ; 1 bytes @ 0x26
   978     0046                     	ds	4
   979     004A                     ??_vfpfcnvrt:
   980                           
   981                           ; 1 bytes @ 0x2A
   982     004A                     	ds	2
   983     004C                     vfpfcnvrt@convarg:
   984                           
   985                           ; 4 bytes @ 0x2C
   986     004C                     	ds	4
   987     0050                     vfpfcnvrt@fp:
   988                           
   989                           ; 1 bytes @ 0x30
   990     0050                     	ds	1
   991     0051                     vfpfcnvrt@c:
   992                           
   993                           ; 1 bytes @ 0x31
   994     0051                     	ds	1
   995     0052                     vfpfcnvrt@cp:
   996                           
   997                           ; 1 bytes @ 0x32
   998     0052                     	ds	1
   999     0053                     vfprintf@fp:
  1000                           
  1001                           ; 1 bytes @ 0x33
  1002     0053                     	ds	1
  1003     0054                     vfprintf@cfmt:
  1004                           
  1005                           ; 1 bytes @ 0x34
  1006     0054                     	ds	1
  1007     0055                     ??_sprintf:
  1008                           
  1009                           ; 1 bytes @ 0x35
  1010     0055                     	ds	1
  1011     0056                     sprintf@s:
  1012                           
  1013                           ; 1 bytes @ 0x36
  1014     0056                     	ds	1
  1015     0057                     sprintf@ap:
  1016                           
  1017                           ; 1 bytes @ 0x37
  1018     0057                     	ds	1
  1019     0058                     sprintf@f:
  1020                           
  1021                           ; 11 bytes @ 0x38
  1022     0058                     	ds	11
  1023     0063                     ??_main:
  1024                           
  1025                           ; 1 bytes @ 0x43
  1026     0063                     	ds	2
  1027                           
  1028                           	psect	maintext
  1029     16B2                     __pmaintext:	
  1030 ;;
  1031 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1032 ;;
  1033 ;; *************** function _main *****************
  1034 ;; Defined at:
  1035 ;;		line 176 in file "main.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;		None
  1038 ;; Auto vars:     Size  Location     Type
  1039 ;;  Temp           16   52[BANK1 ] unsigned char [16]
  1040 ;; Return value:  Size  Location     Type
  1041 ;;                  1    wreg      void 
  1042 ;; Registers used:
  1043 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1044 ;; Tracked objects:
  1045 ;;		On entry : B00/0
  1046 ;;		On exit  : 0/0
  1047 ;;		Unchanged: 0/0
  1048 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1049 ;;      Params:         0       0       0       0       0
  1050 ;;      Locals:         0       0      16       0       0
  1051 ;;      Temps:          0       2       0       0       0
  1052 ;;      Totals:         0       2      16       0       0
  1053 ;;Total ram usage:       18 bytes
  1054 ;; Hardware stack levels required when called: 8
  1055 ;; This function calls:
  1056 ;;		_LCD_Cmd
  1057 ;;		_LCD_Data
  1058 ;;		_LCD_Init
  1059 ;;		_LCD_String
  1060 ;;		_convd
  1061 ;;		_convup
  1062 ;;		_rtc_int
  1063 ;;		_rtc_read_byte
  1064 ;;		_sprintf
  1065 ;; This function is called by:
  1066 ;;		Startup code after reset
  1067 ;; This function uses a non-reentrant model
  1068 ;;
  1069                           
  1070     16B2                     _main:	
  1071                           ;psect for function _main
  1072                           
  1073     16B2                     l3353:	
  1074                           ;incstack = 0
  1075                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1076                           
  1077                           
  1078                           ;main.c: 177:       LCD_Data(convd(min));
  1079     16B2  1683               	bsf	3,5	;RP0=1, select bank1
  1080     16B3  1303               	bcf	3,6	;RP1=0, select bank1
  1081     16B4  0186               	clrf	6	;volatile
  1082     16B5                     l3355:
  1083                           
  1084                           ;main.c: 178:       LCD_Data(':');
  1085     16B5  160A  158A  27B0  160A  118A  	fcall	_rtc_int
  1086     16BA                     l3357:
  1087                           
  1088                           ;main.c: 179: 
  1089     16BA  160A  158A  27E1  160A  118A  	fcall	_LCD_Init
  1090     16BF                     l3359:
  1091                           
  1092                           ;main.c: 180:       LCD_Data(convup(sec));;main.c: 181:       LCD_Data(convd(sec));
  1093     16BF  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1094     16C0  00F3               	movwf	LCD_String@s
  1095     16C1  3080               	movlw	128
  1096     16C2  00F4               	movwf	LCD_String@s+1
  1097     16C3  160A  118A  2097  160A  118A  	fcall	_LCD_String
  1098     16C8                     l3361:
  1099                           
  1100                           ;main.c: 183: 
  1101     16C8  3000               	movlw	0
  1102     16C9  160A  118A  21BD  160A  118A  	fcall	_rtc_read_byte
  1103     16CE  1683               	bsf	3,5	;RP0=1, select bank1
  1104     16CF  1303               	bcf	3,6	;RP1=0, select bank1
  1105     16D0  00EF               	movwf	_sec^(0+128)
  1106     16D1                     l3363:
  1107                           
  1108                           ;main.c: 184:       LCD_Cmd(0xC0);
  1109     16D1  3001               	movlw	1
  1110     16D2  160A  118A  21BD  160A  118A  	fcall	_rtc_read_byte
  1111     16D7  1683               	bsf	3,5	;RP0=1, select bank1
  1112     16D8  1303               	bcf	3,6	;RP1=0, select bank1
  1113     16D9  00EE               	movwf	_min^(0+128)
  1114     16DA                     l3365:
  1115                           
  1116                           ;main.c: 185:       LCD_Data(convup(date));
  1117     16DA  3002               	movlw	2
  1118     16DB  160A  118A  21BD  160A  118A  	fcall	_rtc_read_byte
  1119     16E0  1683               	bsf	3,5	;RP0=1, select bank1
  1120     16E1  1303               	bcf	3,6	;RP1=0, select bank1
  1121     16E2  00ED               	movwf	_hour^(0+128)
  1122     16E3                     l3367:
  1123                           
  1124                           ;main.c: 186:       LCD_Data(convd(date));
  1125     16E3  3003               	movlw	3
  1126     16E4  160A  118A  21BD  160A  118A  	fcall	_rtc_read_byte
  1127     16E9  1683               	bsf	3,5	;RP0=1, select bank1
  1128     16EA  1303               	bcf	3,6	;RP1=0, select bank1
  1129     16EB  00EC               	movwf	_day^(0+128)
  1130     16EC                     l3369:
  1131                           
  1132                           ;main.c: 187:       LCD_Data(':');
  1133     16EC  3004               	movlw	4
  1134     16ED  160A  118A  21BD  160A  118A  	fcall	_rtc_read_byte
  1135     16F2  1683               	bsf	3,5	;RP0=1, select bank1
  1136     16F3  1303               	bcf	3,6	;RP1=0, select bank1
  1137     16F4  00EB               	movwf	_date^(0+128)
  1138     16F5                     l3371:
  1139                           
  1140                           ;main.c: 188: 
  1141     16F5  3005               	movlw	5
  1142     16F6  160A  118A  21BD  160A  118A  	fcall	_rtc_read_byte
  1143     16FB  1683               	bsf	3,5	;RP0=1, select bank1
  1144     16FC  1303               	bcf	3,6	;RP1=0, select bank1
  1145     16FD  00EA               	movwf	_month^(0+128)
  1146     16FE                     l3373:
  1147                           
  1148                           ;main.c: 189:       LCD_Data(convup(month));
  1149     16FE  3006               	movlw	6
  1150     16FF  160A  118A  21BD  160A  118A  	fcall	_rtc_read_byte
  1151     1704  1683               	bsf	3,5	;RP0=1, select bank1
  1152     1705  1303               	bcf	3,6	;RP1=0, select bank1
  1153     1706  00E9               	movwf	_year^(0+128)
  1154     1707                     l3375:
  1155                           
  1156                           ;main.c: 191:       LCD_Data(':');
  1157     1707  3080               	movlw	128
  1158     1708  160A  118A  215F  160A  118A  	fcall	_LCD_Cmd
  1159     170D                     l3377:
  1160                           
  1161                           ;main.c: 192: 
  1162     170D  1683               	bsf	3,5	;RP0=1, select bank1
  1163     170E  1303               	bcf	3,6	;RP1=0, select bank1
  1164     170F  086D               	movf	_hour^(0+128),w
  1165     1710  160A  158A  2772  160A  118A  	fcall	_convup
  1166     1715  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1167     171A                     l3379:
  1168                           
  1169                           ;main.c: 193:       LCD_Data(convup(year));
  1170     171A  1683               	bsf	3,5	;RP0=1, select bank1
  1171     171B  1303               	bcf	3,6	;RP1=0, select bank1
  1172     171C  086D               	movf	_hour^(0+128),w
  1173     171D  160A  118A  2028  160A  118A  	fcall	_convd
  1174     1722  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1175     1727                     l3381:
  1176                           
  1177                           ;main.c: 194:       LCD_Data(convd(year));
  1178     1727  303A               	movlw	58
  1179     1728  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1180     172D                     l3383:
  1181                           
  1182                           ;main.c: 195:       LCD_Data(':');
  1183     172D  300A               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1184     172E  1683               	bsf	3,5	;RP0=1, select bank1
  1185     172F  1303               	bcf	3,6	;RP1=0, select bank1
  1186     1730  00D1               	movwf	sprintf@fmt^(0+128)
  1187     1731  086D               	movf	_hour^(0+128),w
  1188     1732  1283               	bcf	3,5	;RP0=0, select bank0
  1189     1733  1303               	bcf	3,6	;RP1=0, select bank0
  1190     1734  00E3               	movwf	??_main
  1191     1735  01E4               	clrf	??_main+1
  1192     1736  0863               	movf	??_main,w
  1193     1737  1683               	bsf	3,5	;RP0=1, select bank1
  1194     1738  1303               	bcf	3,6	;RP1=0, select bank1
  1195     1739  00D2               	movwf	(?_sprintf^(0+128)+1)
  1196     173A  1283               	bcf	3,5	;RP0=0, select bank0
  1197     173B  1303               	bcf	3,6	;RP1=0, select bank0
  1198     173C  0864               	movf	??_main+1,w
  1199     173D  1683               	bsf	3,5	;RP0=1, select bank1
  1200     173E  1303               	bcf	3,6	;RP1=0, select bank1
  1201     173F  00D3               	movwf	((?_sprintf+1)^(0+128)+1)
  1202     1740  30D4               	movlw	(low (main@Temp| 0))& (0+255)
  1203     1741  160A  118A  202D  160A  118A  	fcall	_sprintf
  1204     1746                     l3385:
  1205                           
  1206                           ;main.c: 196:   }
  1207     1746  1683               	bsf	3,5	;RP0=1, select bank1
  1208     1747  1303               	bcf	3,6	;RP1=0, select bank1
  1209     1748  086D               	movf	_hour^(0+128),w
  1210     1749  1283               	bcf	3,5	;RP0=0, select bank0
  1211     174A  1303               	bcf	3,6	;RP1=0, select bank0
  1212     174B  00E3               	movwf	??_main
  1213     174C  01E4               	clrf	??_main+1
  1214     174D  0863               	movf	??_main,w
  1215     174E  00F3               	movwf	LCD_String@s
  1216     174F  0864               	movf	??_main+1,w
  1217     1750  00F4               	movwf	LCD_String@s+1
  1218     1751  160A  118A  2097  160A  118A  	fcall	_LCD_String
  1219     1756                     l3387:
  1220                           
  1221                           ;main.c: 198: }
  1222     1756  1683               	bsf	3,5	;RP0=1, select bank1
  1223     1757  1303               	bcf	3,6	;RP1=0, select bank1
  1224     1758  086E               	movf	_min^(0+128),w
  1225     1759  160A  158A  2772  160A  118A  	fcall	_convup
  1226     175E  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1227     1763                     l3389:
  1228     1763  1683               	bsf	3,5	;RP0=1, select bank1
  1229     1764  1303               	bcf	3,6	;RP1=0, select bank1
  1230     1765  086E               	movf	_min^(0+128),w
  1231     1766  160A  118A  2028  160A  118A  	fcall	_convd
  1232     176B  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1233     1770                     l3391:
  1234     1770  303A               	movlw	58
  1235     1771  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1236     1776                     l3393:
  1237     1776  1683               	bsf	3,5	;RP0=1, select bank1
  1238     1777  1303               	bcf	3,6	;RP1=0, select bank1
  1239     1778  086F               	movf	_sec^(0+128),w
  1240     1779  160A  158A  2772  160A  118A  	fcall	_convup
  1241     177E  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1242     1783                     l3395:
  1243     1783  1683               	bsf	3,5	;RP0=1, select bank1
  1244     1784  1303               	bcf	3,6	;RP1=0, select bank1
  1245     1785  086F               	movf	_sec^(0+128),w
  1246     1786  160A  118A  2028  160A  118A  	fcall	_convd
  1247     178B  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1248     1790                     l3397:
  1249     1790  303A               	movlw	58
  1250     1791  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1251     1796                     l3399:
  1252     1796  30C0               	movlw	192
  1253     1797  160A  118A  215F  160A  118A  	fcall	_LCD_Cmd
  1254     179C                     l3401:
  1255     179C  1683               	bsf	3,5	;RP0=1, select bank1
  1256     179D  1303               	bcf	3,6	;RP1=0, select bank1
  1257     179E  086B               	movf	_date^(0+128),w
  1258     179F  160A  158A  2772  160A  118A  	fcall	_convup
  1259     17A4  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1260     17A9                     l3403:
  1261     17A9  1683               	bsf	3,5	;RP0=1, select bank1
  1262     17AA  1303               	bcf	3,6	;RP1=0, select bank1
  1263     17AB  086B               	movf	_date^(0+128),w
  1264     17AC  160A  118A  2028  160A  118A  	fcall	_convd
  1265     17B1  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1266     17B6                     l3405:
  1267     17B6  303A               	movlw	58
  1268     17B7  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1269     17BC                     l3407:
  1270     17BC  1683               	bsf	3,5	;RP0=1, select bank1
  1271     17BD  1303               	bcf	3,6	;RP1=0, select bank1
  1272     17BE  086A               	movf	_month^(0+128),w
  1273     17BF  160A  158A  2772  160A  118A  	fcall	_convup
  1274     17C4  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1275     17C9                     l3409:
  1276     17C9  1683               	bsf	3,5	;RP0=1, select bank1
  1277     17CA  1303               	bcf	3,6	;RP1=0, select bank1
  1278     17CB  086A               	movf	_month^(0+128),w
  1279     17CC  160A  118A  2028  160A  118A  	fcall	_convd
  1280     17D1  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1281     17D6                     l3411:
  1282     17D6  303A               	movlw	58
  1283     17D7  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1284     17DC                     l3413:
  1285     17DC  1683               	bsf	3,5	;RP0=1, select bank1
  1286     17DD  1303               	bcf	3,6	;RP1=0, select bank1
  1287     17DE  0869               	movf	_year^(0+128),w
  1288     17DF  160A  158A  2772  160A  118A  	fcall	_convup
  1289     17E4  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1290     17E9                     l3415:
  1291     17E9  1683               	bsf	3,5	;RP0=1, select bank1
  1292     17EA  1303               	bcf	3,6	;RP1=0, select bank1
  1293     17EB  0869               	movf	_year^(0+128),w
  1294     17EC  160A  118A  2028  160A  118A  	fcall	_convd
  1295     17F1  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1296     17F6                     l3417:
  1297     17F6  303A               	movlw	58
  1298     17F7  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  1299     17FC  2EC8               	goto	l3361
  1300     17FD  120A  118A  2800   	ljmp	start
  1301     1800                     __end_of_main:
  1302                           
  1303                           	psect	text1
  1304     102D                     __ptext1:	
  1305 ;; *************** function _sprintf *****************
  1306 ;; Defined at:
  1307 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  1308 ;; Parameters:    Size  Location     Type
  1309 ;;  s               1    wreg     PTR unsigned char 
  1310 ;;		 -> main@Temp(16), 
  1311 ;;  fmt             1   49[BANK1 ] PTR const unsigned char 
  1312 ;;		 -> STR_2(6), 
  1313 ;; Auto vars:     Size  Location     Type
  1314 ;;  s               1   54[BANK0 ] PTR unsigned char 
  1315 ;;		 -> main@Temp(16), 
  1316 ;;  f              11   56[BANK0 ] struct _IO_FILE
  1317 ;;  ret             2    0        int 
  1318 ;;  ap              1   55[BANK0 ] PTR void [1]
  1319 ;;		 -> ?_sprintf(2), 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  2   49[BANK1 ] int 
  1322 ;; Registers used:
  1323 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1329 ;;      Params:         0       0       3       0       0
  1330 ;;      Locals:         0      13       0       0       0
  1331 ;;      Temps:          0       1       0       0       0
  1332 ;;      Totals:         0      14       3       0       0
  1333 ;;Total ram usage:       17 bytes
  1334 ;; Hardware stack levels used: 1
  1335 ;; Hardware stack levels required when called: 7
  1336 ;; This function calls:
  1337 ;;		_vfprintf
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343     102D                     _sprintf:	
  1344                           ;psect for function _sprintf
  1345                           
  1346                           
  1347                           ;incstack = 0
  1348                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1349                           ;sprintf@s stored from wreg
  1350     102D  1283               	bcf	3,5	;RP0=0, select bank0
  1351     102E  1303               	bcf	3,6	;RP1=0, select bank0
  1352     102F  00D6               	movwf	sprintf@s
  1353     1030                     l3323:
  1354     1030  30D2               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1355     1031  00D7               	movwf	sprintf@ap
  1356     1032  0856               	movf	sprintf@s,w
  1357     1033  00D8               	movwf	sprintf@f
  1358     1034                     l3325:
  1359     1034  01DA               	clrf	sprintf@f+2
  1360     1035  01DB               	clrf	sprintf@f+3
  1361     1036                     l3327:
  1362     1036  01E1               	clrf	sprintf@f+9
  1363     1037  01E2               	clrf	sprintf@f+10
  1364     1038                     l3329:
  1365     1038  1683               	bsf	3,5	;RP0=1, select bank1
  1366     1039  1303               	bcf	3,6	;RP1=0, select bank1
  1367     103A  0851               	movf	sprintf@fmt^(0+128),w
  1368     103B  00CF               	movwf	vfprintf@fmt^(0+128)
  1369     103C  3057               	movlw	(low (sprintf@ap| 0))& (0+255)
  1370     103D  00D0               	movwf	vfprintf@ap^(0+128)
  1371     103E  3058               	movlw	(low (sprintf@f| 0))& (0+255)
  1372     103F  160A  118A  2134  160A  118A  	fcall	_vfprintf
  1373     1044                     l3331:
  1374     1044  1283               	bcf	3,5	;RP0=0, select bank0
  1375     1045  1303               	bcf	3,6	;RP1=0, select bank0
  1376     1046  085A               	movf	sprintf@f+2,w
  1377     1047  0756               	addwf	sprintf@s,w
  1378     1048  00D5               	movwf	??_sprintf
  1379     1049  0855               	movf	??_sprintf,w
  1380     104A  0084               	movwf	4
  1381     104B  1383               	bcf	3,7	;select IRP bank0
  1382     104C  0180               	clrf	0
  1383     104D                     l679:
  1384     104D  0008               	return
  1385     104E                     __end_of_sprintf:
  1386                           
  1387                           	psect	text2
  1388     1134                     __ptext2:	
  1389 ;; *************** function _vfprintf *****************
  1390 ;; Defined at:
  1391 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1392 ;; Parameters:    Size  Location     Type
  1393 ;;  fp              1    wreg     PTR struct _IO_FILE
  1394 ;;		 -> sprintf@f(11), 
  1395 ;;  fmt             1   47[BANK1 ] PTR const unsigned char 
  1396 ;;		 -> STR_2(6), 
  1397 ;;  ap              1   48[BANK1 ] PTR PTR void 
  1398 ;;		 -> sprintf@ap(1), 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  fp              1   51[BANK0 ] PTR struct _IO_FILE
  1401 ;;		 -> sprintf@f(11), 
  1402 ;;  cfmt            1   52[BANK0 ] PTR unsigned char 
  1403 ;;		 -> STR_2(6), 
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  2   47[BANK1 ] int 
  1406 ;; Registers used:
  1407 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         0       0       2       0       0
  1414 ;;      Locals:         0       2       0       0       0
  1415 ;;      Temps:          0       0       0       0       0
  1416 ;;      Totals:         0       2       2       0       0
  1417 ;;Total ram usage:        4 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; Hardware stack levels required when called: 6
  1420 ;; This function calls:
  1421 ;;		_vfpfcnvrt
  1422 ;; This function is called by:
  1423 ;;		_sprintf
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427     1134                     _vfprintf:	
  1428                           ;psect for function _vfprintf
  1429                           
  1430                           
  1431                           ;incstack = 0
  1432 ;; using string table level
  1433                           ; Regs used in _vfprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1434                           ;vfprintf@fp stored from wreg
  1435     1134  1283               	bcf	3,5	;RP0=0, select bank0
  1436     1135  1303               	bcf	3,6	;RP1=0, select bank0
  1437     1136  00D3               	movwf	vfprintf@fp
  1438     1137                     l3271:
  1439                           
  1440                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1441     1137  1683               	bsf	3,5	;RP0=1, select bank1
  1442     1138  1303               	bcf	3,6	;RP1=0, select bank1
  1443     1139  084F               	movf	vfprintf@fmt^(0+128),w
  1444     113A  1283               	bcf	3,5	;RP0=0, select bank0
  1445     113B  1303               	bcf	3,6	;RP1=0, select bank0
  1446     113C  00D4               	movwf	vfprintf@cfmt
  1447                           
  1448                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1449     113D  294C               	goto	l3275
  1450     113E                     l3273:
  1451                           
  1452                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1453     113E  3054               	movlw	(low (vfprintf@cfmt| 0))& (0+255)
  1454     113F  1683               	bsf	3,5	;RP0=1, select bank1
  1455     1140  1303               	bcf	3,6	;RP1=0, select bank1
  1456     1141  00CD               	movwf	vfpfcnvrt@fmt^(0+128)
  1457     1142  0850               	movf	vfprintf@ap^(0+128),w
  1458     1143  00CE               	movwf	vfpfcnvrt@ap^(0+128)
  1459     1144  1283               	bcf	3,5	;RP0=0, select bank0
  1460     1145  1303               	bcf	3,6	;RP1=0, select bank0
  1461     1146  0853               	movf	vfprintf@fp,w
  1462     1147  160A  118A  258F  160A  118A  	fcall	_vfpfcnvrt
  1463     114C                     l3275:
  1464                           
  1465                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1466     114C  1283               	bcf	3,5	;RP0=0, select bank0
  1467     114D  1303               	bcf	3,6	;RP1=0, select bank0
  1468     114E  0854               	movf	vfprintf@cfmt,w
  1469     114F  0084               	movwf	4
  1470     1150  160A  118A  200A  160A  118A  	fcall	stringdir
  1471     1155  3A00               	xorlw	0
  1472     1156  1D03               	skipz
  1473     1157  2959               	goto	u4371
  1474     1158  295A               	goto	u4370
  1475     1159                     u4371:
  1476     1159  293E               	goto	l3273
  1477     115A                     u4370:
  1478     115A                     l3277:
  1479                           
  1480                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1481     115A  1683               	bsf	3,5	;RP0=1, select bank1
  1482     115B  1303               	bcf	3,6	;RP1=0, select bank1
  1483     115C  01CF               	clrf	?_vfprintf^(0+128)
  1484     115D  01D0               	clrf	(?_vfprintf+1)^(0+128)
  1485     115E                     l797:
  1486     115E  0008               	return
  1487     115F                     __end_of_vfprintf:
  1488                           
  1489                           	psect	text3
  1490     158F                     __ptext3:	
  1491 ;; *************** function _vfpfcnvrt *****************
  1492 ;; Defined at:
  1493 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;  fp              1    wreg     PTR struct _IO_FILE
  1496 ;;		 -> sprintf@f(11), 
  1497 ;;  fmt             1   45[BANK1 ] PTR PTR unsigned char 
  1498 ;;		 -> vfprintf@cfmt(1), 
  1499 ;;  ap              1   46[BANK1 ] PTR PTR void 
  1500 ;;		 -> sprintf@ap(1), 
  1501 ;; Auto vars:     Size  Location     Type
  1502 ;;  fp              1   48[BANK0 ] PTR struct _IO_FILE
  1503 ;;		 -> sprintf@f(11), 
  1504 ;;  convarg         4   44[BANK0 ] struct .
  1505 ;;  cp              1   50[BANK0 ] PTR unsigned char 
  1506 ;;		 -> STR_2(6), 
  1507 ;;  c               1   49[BANK0 ] unsigned char 
  1508 ;;  done            1    0        _Bool 
  1509 ;; Return value:  Size  Location     Type
  1510 ;;                  1    wreg      void 
  1511 ;; Registers used:
  1512 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1513 ;; Tracked objects:
  1514 ;;		On entry : 0/0
  1515 ;;		On exit  : 0/0
  1516 ;;		Unchanged: 0/0
  1517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1518 ;;      Params:         0       0       2       0       0
  1519 ;;      Locals:         0       7       0       0       0
  1520 ;;      Temps:          0       2       0       0       0
  1521 ;;      Totals:         0       9       2       0       0
  1522 ;;Total ram usage:       11 bytes
  1523 ;; Hardware stack levels used: 1
  1524 ;; Hardware stack levels required when called: 5
  1525 ;; This function calls:
  1526 ;;		_efgtoa
  1527 ;;		_fputc
  1528 ;;		_read_prec_or_width
  1529 ;; This function is called by:
  1530 ;;		_vfprintf
  1531 ;; This function uses a non-reentrant model
  1532 ;;
  1533                           
  1534     158F                     _vfpfcnvrt:	
  1535                           ;psect for function _vfpfcnvrt
  1536                           
  1537                           
  1538                           ;incstack = 0
  1539 ;; using string table level
  1540                           ; Regs used in _vfpfcnvrt: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1541                           ;vfpfcnvrt@fp stored from wreg
  1542     158F  1283               	bcf	3,5	;RP0=0, select bank0
  1543     1590  1303               	bcf	3,6	;RP1=0, select bank0
  1544     1591  00D0               	movwf	vfpfcnvrt@fp
  1545     1592                     l3123:
  1546                           
  1547                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1548     1592  1683               	bsf	3,5	;RP0=1, select bank1
  1549     1593  1303               	bcf	3,6	;RP1=0, select bank1
  1550     1594  084D               	movf	vfpfcnvrt@fmt^(0+128),w
  1551     1595  0084               	movwf	4
  1552     1596  1383               	bcf	3,7	;select IRP bank0
  1553     1597  0800               	movf	0,w
  1554     1598  0084               	movwf	4
  1555     1599  160A  118A  200A  160A  118A  	fcall	stringdir
  1556     159E  3A25               	xorlw	37
  1557     159F  1D03               	skipz
  1558     15A0  2DA2               	goto	u4311
  1559     15A1  2DA3               	goto	u4310
  1560     15A2                     u4311:
  1561     15A2  2E98               	goto	l3175
  1562     15A3                     u4310:
  1563     15A3                     l3125:
  1564                           
  1565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1566     15A3  3001               	movlw	1
  1567     15A4  00FF               	movwf	btemp+1
  1568     15A5  084D               	movf	vfpfcnvrt@fmt^(0+128),w
  1569     15A6  0084               	movwf	4
  1570     15A7  087F               	movf	btemp+1,w
  1571     15A8  0780               	addwf	0,f
  1572     15A9                     l3127:
  1573                           
  1574                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1575     15A9  1283               	bcf	3,5	;RP0=0, select bank0
  1576     15AA  1303               	bcf	3,6	;RP1=0, select bank0
  1577     15AB  01E9               	clrf	_width
  1578     15AC  01EA               	clrf	_width+1
  1579     15AD  1003               	clrc
  1580     15AE  3000               	movlw	0
  1581     15AF  1803               	btfsc	3,0
  1582     15B0  3001               	movlw	1
  1583     15B1  1683               	bsf	3,5	;RP0=1, select bank1
  1584     15B2  1303               	bcf	3,6	;RP1=0, select bank1
  1585     15B3  00E8               	movwf	_flags^(0+128)
  1586     15B4                     l3129:
  1587                           
  1588                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1589     15B4  30FF               	movlw	255
  1590     15B5  1283               	bcf	3,5	;RP0=0, select bank0
  1591     15B6  1303               	bcf	3,6	;RP1=0, select bank0
  1592     15B7  00EB               	movwf	_prec
  1593     15B8  30FF               	movlw	255
  1594     15B9  00EC               	movwf	_prec+1
  1595     15BA                     l3131:
  1596                           
  1597                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  1598     15BA  1683               	bsf	3,5	;RP0=1, select bank1
  1599     15BB  1303               	bcf	3,6	;RP1=0, select bank1
  1600     15BC  084D               	movf	vfpfcnvrt@fmt^(0+128),w
  1601     15BD  0084               	movwf	4
  1602     15BE  0800               	movf	0,w
  1603     15BF  0084               	movwf	4
  1604     15C0  160A  118A  200A  160A  118A  	fcall	stringdir
  1605     15C5  3A2E               	xorlw	46
  1606     15C6  1D03               	skipz
  1607     15C7  2DC9               	goto	u4321
  1608     15C8  2DCA               	goto	u4320
  1609     15C9                     u4321:
  1610     15C9  2DDE               	goto	l3137
  1611     15CA                     u4320:
  1612     15CA                     l3133:
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  1615     15CA  3001               	movlw	1
  1616     15CB  00FF               	movwf	btemp+1
  1617     15CC  084D               	movf	vfpfcnvrt@fmt^(0+128),w
  1618     15CD  0084               	movwf	4
  1619     15CE  087F               	movf	btemp+1,w
  1620     15CF  0780               	addwf	0,f
  1621     15D0                     l3135:
  1622                           
  1623                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  1624     15D0  084E               	movf	vfpfcnvrt@ap^(0+128),w
  1625     15D1  00F6               	movwf	read_prec_or_width@ap
  1626     15D2  084D               	movf	vfpfcnvrt@fmt^(0+128),w
  1627     15D3  160A  118A  2299  160A  118A  	fcall	_read_prec_or_width
  1628     15D8  0877               	movf	?_read_prec_or_width+1,w
  1629     15D9  1283               	bcf	3,5	;RP0=0, select bank0
  1630     15DA  1303               	bcf	3,6	;RP1=0, select bank0
  1631     15DB  00EC               	movwf	_prec+1
  1632     15DC  0876               	movf	?_read_prec_or_width,w
  1633     15DD  00EB               	movwf	_prec
  1634     15DE                     l3137:
  1635                           
  1636                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  1637     15DE  1683               	bsf	3,5	;RP0=1, select bank1
  1638     15DF  1303               	bcf	3,6	;RP1=0, select bank1
  1639     15E0  084D               	movf	vfpfcnvrt@fmt^(0+128),w
  1640     15E1  0084               	movwf	4
  1641     15E2  1383               	bcf	3,7	;select IRP bank0
  1642     15E3  0800               	movf	0,w
  1643     15E4  1283               	bcf	3,5	;RP0=0, select bank0
  1644     15E5  1303               	bcf	3,6	;RP1=0, select bank0
  1645     15E6  00D2               	movwf	vfpfcnvrt@cp
  1646     15E7                     l3139:
  1647                           
  1648                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  1649     15E7  0852               	movf	vfpfcnvrt@cp,w
  1650     15E8  0084               	movwf	4
  1651     15E9  160A  118A  200A  160A  118A  	fcall	stringdir
  1652     15EE  00D1               	movwf	vfpfcnvrt@c
  1653                           
  1654                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  1655     15EF  2DFA               	goto	l3149
  1656     15F0                     l3141:
  1657                           
  1658                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  1659     15F0  3001               	movlw	1
  1660     15F1  00FF               	movwf	btemp+1
  1661     15F2  087F               	movf	btemp+1,w
  1662     15F3  07D2               	addwf	vfpfcnvrt@cp,f
  1663                           
  1664                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  1665     15F4  2E0D               	goto	l3151
  1666     15F5                     l3143:
  1667                           
  1668                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  1669     15F5  306C               	movlw	108
  1670     15F6  00D1               	movwf	vfpfcnvrt@c
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  1673     15F7  2E0D               	goto	l3151
  1674     15F8                     l3145:
  1675                           
  1676                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  1677     15F8  01D1               	clrf	vfpfcnvrt@c
  1678                           
  1679                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  1680     15F9  2E0D               	goto	l3151
  1681     15FA                     l3149:
  1682     15FA  0851               	movf	vfpfcnvrt@c,w
  1683     15FB  00CA               	movwf	??_vfpfcnvrt
  1684     15FC  01CB               	clrf	??_vfpfcnvrt+1
  1685                           
  1686                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1687                           ; Switch size 1, requested type "simple"
  1688                           ; Number of cases is 1, Range of values is 0 to 0
  1689                           ; switch strategies available:
  1690                           ; Name         Instructions Cycles
  1691                           ; simple_byte            4     3 (average)
  1692                           ; direct_byte           11     8 (fixed)
  1693                           ; jumptable            260     6 (fixed)
  1694                           ;	Chosen strategy is simple_byte
  1695     15FD  084B               	movf	??_vfpfcnvrt+1,w
  1696     15FE  3A00               	xorlw	0	; case 0
  1697     15FF  1903               	skipnz
  1698     1600  2E02               	goto	l3509
  1699     1601  2DF8               	goto	l3145
  1700     1602                     l3509:
  1701                           
  1702                           ; Switch size 1, requested type "simple"
  1703                           ; Number of cases is 3, Range of values is 76 to 108
  1704                           ; switch strategies available:
  1705                           ; Name         Instructions Cycles
  1706                           ; simple_byte           10     6 (average)
  1707                           ; direct_byte          110    11 (fixed)
  1708                           ; jumptable            263     9 (fixed)
  1709                           ;	Chosen strategy is simple_byte
  1710     1602  084A               	movf	??_vfpfcnvrt,w
  1711     1603  3A4C               	xorlw	76	; case 76
  1712     1604  1903               	skipnz
  1713     1605  2DF0               	goto	l3141
  1714     1606  3A2A               	xorlw	42	; case 102
  1715     1607  1903               	skipnz
  1716     1608  2DF5               	goto	l3143
  1717     1609  3A0A               	xorlw	10	; case 108
  1718     160A  1903               	skipnz
  1719     160B  2DF0               	goto	l3141
  1720     160C  2DF8               	goto	l3145
  1721     160D                     l3151:
  1722     160D  0852               	movf	vfpfcnvrt@cp,w
  1723     160E  0084               	movwf	4
  1724     160F  160A  118A  200A  160A  118A  	fcall	stringdir
  1725     1614  3A66               	xorlw	102
  1726     1615  1D03               	skipz
  1727     1616  2E18               	goto	u4331
  1728     1617  2E19               	goto	u4330
  1729     1618                     u4331:
  1730     1618  2E8E               	goto	l3171
  1731     1619                     u4330:
  1732     1619  2E4A               	goto	l3159
  1733     161A                     l3153:
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  1736     161A  1683               	bsf	3,5	;RP0=1, select bank1
  1737     161B  1303               	bcf	3,6	;RP1=0, select bank1
  1738     161C  084E               	movf	vfpfcnvrt@ap^(0+128),w
  1739     161D  0084               	movwf	4
  1740     161E  0800               	movf	0,w
  1741     161F  00FF               	movwf	btemp+1
  1742     1620  3004               	movlw	4
  1743     1621  0780               	addwf	0,f
  1744     1622  087F               	movf	btemp+1,w
  1745     1623  0084               	movwf	4
  1746     1624  0800               	movf	0,w
  1747     1625  1283               	bcf	3,5	;RP0=0, select bank0
  1748     1626  1303               	bcf	3,6	;RP1=0, select bank0
  1749     1627  00CC               	movwf	vfpfcnvrt@convarg
  1750     1628  0A84               	incf	4,f
  1751     1629  0800               	movf	0,w
  1752     162A  00CD               	movwf	vfpfcnvrt@convarg+1
  1753     162B  0A84               	incf	4,f
  1754     162C  0800               	movf	0,w
  1755     162D  00CE               	movwf	vfpfcnvrt@convarg+2
  1756     162E  0A84               	incf	4,f
  1757     162F  0800               	movf	0,w
  1758     1630  00CF               	movwf	vfpfcnvrt@convarg+3
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  1761     1631  2E5A               	goto	l3161
  1762     1632                     l3155:
  1763                           
  1764                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  1765     1632  1683               	bsf	3,5	;RP0=1, select bank1
  1766     1633  1303               	bcf	3,6	;RP1=0, select bank1
  1767     1634  084E               	movf	vfpfcnvrt@ap^(0+128),w
  1768     1635  0084               	movwf	4
  1769     1636  0800               	movf	0,w
  1770     1637  00FF               	movwf	btemp+1
  1771     1638  3004               	movlw	4
  1772     1639  0780               	addwf	0,f
  1773     163A  087F               	movf	btemp+1,w
  1774     163B  0084               	movwf	4
  1775     163C  0800               	movf	0,w
  1776     163D  1283               	bcf	3,5	;RP0=0, select bank0
  1777     163E  1303               	bcf	3,6	;RP1=0, select bank0
  1778     163F  00CC               	movwf	vfpfcnvrt@convarg
  1779     1640  0A84               	incf	4,f
  1780     1641  0800               	movf	0,w
  1781     1642  00CD               	movwf	vfpfcnvrt@convarg+1
  1782     1643  0A84               	incf	4,f
  1783     1644  0800               	movf	0,w
  1784     1645  00CE               	movwf	vfpfcnvrt@convarg+2
  1785     1646  0A84               	incf	4,f
  1786     1647  0800               	movf	0,w
  1787     1648  00CF               	movwf	vfpfcnvrt@convarg+3
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  1790     1649  2E5A               	goto	l3161
  1791     164A                     l3159:
  1792     164A  0851               	movf	vfpfcnvrt@c,w
  1793     164B  00CA               	movwf	??_vfpfcnvrt
  1794     164C  01CB               	clrf	??_vfpfcnvrt+1
  1795                           
  1796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1797                           ; Switch size 1, requested type "simple"
  1798                           ; Number of cases is 1, Range of values is 0 to 0
  1799                           ; switch strategies available:
  1800                           ; Name         Instructions Cycles
  1801                           ; simple_byte            4     3 (average)
  1802                           ; direct_byte           11     8 (fixed)
  1803                           ; jumptable            260     6 (fixed)
  1804                           ;	Chosen strategy is simple_byte
  1805     164D  084B               	movf	??_vfpfcnvrt+1,w
  1806     164E  3A00               	xorlw	0	; case 0
  1807     164F  1903               	skipnz
  1808     1650  2E52               	goto	l3511
  1809     1651  2E5A               	goto	l3161
  1810     1652                     l3511:
  1811                           
  1812                           ; Switch size 1, requested type "simple"
  1813                           ; Number of cases is 2, Range of values is 76 to 108
  1814                           ; switch strategies available:
  1815                           ; Name         Instructions Cycles
  1816                           ; simple_byte            7     4 (average)
  1817                           ; direct_byte          110    11 (fixed)
  1818                           ; jumptable            263     9 (fixed)
  1819                           ;	Chosen strategy is simple_byte
  1820     1652  084A               	movf	??_vfpfcnvrt,w
  1821     1653  3A4C               	xorlw	76	; case 76
  1822     1654  1903               	skipnz
  1823     1655  2E32               	goto	l3155
  1824     1656  3A20               	xorlw	32	; case 108
  1825     1657  1903               	skipnz
  1826     1658  2E1A               	goto	l3153
  1827     1659  2E5A               	goto	l3161
  1828     165A                     l3161:
  1829                           
  1830                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  1831     165A  1683               	bsf	3,5	;RP0=1, select bank1
  1832     165B  1303               	bcf	3,6	;RP1=0, select bank1
  1833     165C  084D               	movf	vfpfcnvrt@fmt^(0+128),w
  1834     165D  0084               	movwf	4
  1835     165E  1283               	bcf	3,5	;RP0=0, select bank0
  1836     165F  1303               	bcf	3,6	;RP1=0, select bank0
  1837     1660  0852               	movf	vfpfcnvrt@cp,w
  1838     1661  3E01               	addlw	1
  1839     1662  0080               	movwf	0
  1840                           
  1841                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  1842     1663  2E7B               	goto	l3169
  1843     1664                     l3163:
  1844                           
  1845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  1846     1664  084F               	movf	vfpfcnvrt@convarg+3,w
  1847     1665  00C4               	movwf	efgtoa@f+3
  1848     1666  084E               	movf	vfpfcnvrt@convarg+2,w
  1849     1667  00C3               	movwf	efgtoa@f+2
  1850     1668  084D               	movf	vfpfcnvrt@convarg+1,w
  1851     1669  00C2               	movwf	efgtoa@f+1
  1852     166A  084C               	movf	vfpfcnvrt@convarg,w
  1853     166B  00C1               	movwf	efgtoa@f
  1854     166C  0852               	movf	vfpfcnvrt@cp,w
  1855     166D  0084               	movwf	4
  1856     166E  160A  118A  200A  160A  118A  	fcall	stringdir
  1857     1673  00C5               	movwf	efgtoa@c
  1858     1674  0850               	movf	vfpfcnvrt@fp,w
  1859     1675  160A  118A  2476  160A  118A  	fcall	_efgtoa
  1860     167A  2EB1               	goto	l790
  1861     167B                     l3169:
  1862     167B  0852               	movf	vfpfcnvrt@cp,w
  1863     167C  0084               	movwf	4
  1864     167D  160A  118A  200A  160A  118A  	fcall	stringdir
  1865     1682  00CA               	movwf	??_vfpfcnvrt
  1866     1683  01CB               	clrf	??_vfpfcnvrt+1
  1867                           
  1868                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1869                           ; Switch size 1, requested type "simple"
  1870                           ; Number of cases is 1, Range of values is 0 to 0
  1871                           ; switch strategies available:
  1872                           ; Name         Instructions Cycles
  1873                           ; simple_byte            4     3 (average)
  1874                           ; direct_byte           11     8 (fixed)
  1875                           ; jumptable            260     6 (fixed)
  1876                           ;	Chosen strategy is simple_byte
  1877     1684  084B               	movf	??_vfpfcnvrt+1,w
  1878     1685  3A00               	xorlw	0	; case 0
  1879     1686  1903               	skipnz
  1880     1687  2E89               	goto	l3513
  1881     1688  2E8E               	goto	l3171
  1882     1689                     l3513:
  1883                           
  1884                           ; Switch size 1, requested type "simple"
  1885                           ; Number of cases is 1, Range of values is 102 to 102
  1886                           ; switch strategies available:
  1887                           ; Name         Instructions Cycles
  1888                           ; simple_byte            4     3 (average)
  1889                           ; direct_byte           14    11 (fixed)
  1890                           ; jumptable            263     9 (fixed)
  1891                           ;	Chosen strategy is simple_byte
  1892     1689  084A               	movf	??_vfpfcnvrt,w
  1893     168A  3A66               	xorlw	102	; case 102
  1894     168B  1903               	skipnz
  1895     168C  2E64               	goto	l3163
  1896     168D  2E8E               	goto	l3171
  1897     168E                     l3171:
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1900     168E  3001               	movlw	1
  1901     168F  00FF               	movwf	btemp+1
  1902     1690  1683               	bsf	3,5	;RP0=1, select bank1
  1903     1691  1303               	bcf	3,6	;RP1=0, select bank1
  1904     1692  084D               	movf	vfpfcnvrt@fmt^(0+128),w
  1905     1693  0084               	movwf	4
  1906     1694  087F               	movf	btemp+1,w
  1907     1695  1383               	bcf	3,7	;select IRP bank0
  1908     1696  0780               	addwf	0,f
  1909     1697  2EB1               	goto	l790
  1910     1698                     l3175:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1913     1698  084D               	movf	vfpfcnvrt@fmt^(0+128),w
  1914     1699  0084               	movwf	4
  1915     169A  0800               	movf	0,w
  1916     169B  0084               	movwf	4
  1917     169C  160A  118A  200A  160A  118A  	fcall	stringdir
  1918     16A1  1283               	bcf	3,5	;RP0=0, select bank0
  1919     16A2  1303               	bcf	3,6	;RP1=0, select bank0
  1920     16A3  00CA               	movwf	??_vfpfcnvrt
  1921     16A4  01CB               	clrf	??_vfpfcnvrt+1
  1922     16A5  084A               	movf	??_vfpfcnvrt,w
  1923     16A6  00F0               	movwf	fputc@c
  1924     16A7  084B               	movf	??_vfpfcnvrt+1,w
  1925     16A8  00F1               	movwf	fputc@c+1
  1926     16A9  0850               	movf	vfpfcnvrt@fp,w
  1927     16AA  00F2               	movwf	fputc@fp
  1928     16AB  160A  118A  2243  160A  118A  	fcall	_fputc
  1929     16B0  2E8E               	goto	l3171
  1930     16B1                     l790:
  1931     16B1  0008               	return
  1932     16B2                     __end_of_vfpfcnvrt:
  1933                           
  1934                           	psect	text4
  1935     1299                     __ptext4:	
  1936 ;; *************** function _read_prec_or_width *****************
  1937 ;; Defined at:
  1938 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;  fmt             1    wreg     PTR PTR const unsigned c
  1941 ;;		 -> vfprintf@cfmt(1), 
  1942 ;;  ap              1    6[COMMON] PTR PTR void [1]
  1943 ;;		 -> sprintf@ap(1), 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  fmt             1   11[COMMON] PTR PTR const unsigned c
  1946 ;;		 -> vfprintf@cfmt(1), 
  1947 ;;  c               1    8[COMMON] unsigned char 
  1948 ;;  n               2    9[COMMON] int 
  1949 ;; Return value:  Size  Location     Type
  1950 ;;                  2    6[COMMON] int 
  1951 ;; Registers used:
  1952 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1953 ;; Tracked objects:
  1954 ;;		On entry : 0/0
  1955 ;;		On exit  : 0/0
  1956 ;;		Unchanged: 0/0
  1957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1958 ;;      Params:         2       0       0       0       0
  1959 ;;      Locals:         4       0       0       0       0
  1960 ;;      Temps:          0       0       0       0       0
  1961 ;;      Totals:         6       0       0       0       0
  1962 ;;Total ram usage:        6 bytes
  1963 ;; Hardware stack levels used: 1
  1964 ;; Hardware stack levels required when called: 1
  1965 ;; This function calls:
  1966 ;;		___wmul
  1967 ;; This function is called by:
  1968 ;;		_vfpfcnvrt
  1969 ;; This function uses a non-reentrant model
  1970 ;;
  1971                           
  1972     1299                     _read_prec_or_width:	
  1973                           ;psect for function _read_prec_or_width
  1974                           
  1975                           
  1976                           ;incstack = 0
  1977                           ; Regs used in _read_prec_or_width: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1978                           ;read_prec_or_width@fmt stored from wreg
  1979     1299  00FB               	movwf	read_prec_or_width@fmt
  1980     129A                     l3105:
  1981                           
  1982                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1983     129A  01F9               	clrf	read_prec_or_width@n
  1984     129B  01FA               	clrf	read_prec_or_width@n+1
  1985     129C                     l3107:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1988     129C  087B               	movf	read_prec_or_width@fmt,w
  1989     129D  0084               	movwf	4
  1990     129E  1383               	bcf	3,7	;select IRP bank0
  1991     129F  0800               	movf	0,w
  1992     12A0  0084               	movwf	4
  1993     12A1  160A  118A  200A  160A  118A  	fcall	stringdir
  1994     12A6  3A2A               	xorlw	42
  1995     12A7  1D03               	skipz
  1996     12A8  2AAA               	goto	u4281
  1997     12A9  2AAB               	goto	u4280
  1998     12AA                     u4281:
  1999     12AA  2ADB               	goto	l3115
  2000     12AB                     u4280:
  2001     12AB                     l3109:
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  2004     12AB  3001               	movlw	1
  2005     12AC  00FF               	movwf	btemp+1
  2006     12AD  087B               	movf	read_prec_or_width@fmt,w
  2007     12AE  0084               	movwf	4
  2008     12AF  087F               	movf	btemp+1,w
  2009     12B0  0780               	addwf	0,f
  2010                           
  2011                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  2012     12B1  0876               	movf	read_prec_or_width@ap,w
  2013     12B2  0084               	movwf	4
  2014     12B3  0800               	movf	0,w
  2015     12B4  00FF               	movwf	btemp+1
  2016     12B5  3002               	movlw	2
  2017     12B6  0780               	addwf	0,f
  2018     12B7  087F               	movf	btemp+1,w
  2019     12B8  0084               	movwf	4
  2020     12B9  0800               	movf	0,w
  2021     12BA  00F9               	movwf	read_prec_or_width@n
  2022     12BB  0A84               	incf	4,f
  2023     12BC  0800               	movf	0,w
  2024     12BD  00FA               	movwf	read_prec_or_width@n+1
  2025                           
  2026                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  2027     12BE  2AEC               	goto	l3117
  2028     12BF                     l3111:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  2031     12BF  087A               	movf	read_prec_or_width@n+1,w
  2032     12C0  00F1               	movwf	___wmul@multiplier+1
  2033     12C1  0879               	movf	read_prec_or_width@n,w
  2034     12C2  00F0               	movwf	___wmul@multiplier
  2035     12C3  300A               	movlw	10
  2036     12C4  00F2               	movwf	___wmul@multiplicand
  2037     12C5  3000               	movlw	0
  2038     12C6  00F3               	movwf	___wmul@multiplicand+1
  2039     12C7  160A  118A  2072  160A  118A  	fcall	___wmul
  2040     12CC  0878               	movf	read_prec_or_width@c,w
  2041     12CD  0770               	addwf	?___wmul,w
  2042     12CE  00F9               	movwf	read_prec_or_width@n
  2043     12CF  3000               	movlw	0
  2044     12D0  1803               	skipnc
  2045     12D1  3001               	movlw	1
  2046     12D2  0771               	addwf	?___wmul+1,w
  2047     12D3  00FA               	movwf	read_prec_or_width@n+1
  2048     12D4                     l3113:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  2051     12D4  3001               	movlw	1
  2052     12D5  00FF               	movwf	btemp+1
  2053     12D6  087B               	movf	read_prec_or_width@fmt,w
  2054     12D7  0084               	movwf	4
  2055     12D8  087F               	movf	btemp+1,w
  2056     12D9  1383               	bcf	3,7	;select IRP bank0
  2057     12DA  0780               	addwf	0,f
  2058     12DB                     l3115:
  2059                           
  2060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  2061     12DB  087B               	movf	read_prec_or_width@fmt,w
  2062     12DC  0084               	movwf	4
  2063     12DD  0800               	movf	0,w
  2064     12DE  0084               	movwf	4
  2065     12DF  160A  118A  200A  160A  118A  	fcall	stringdir
  2066     12E4  3ED0               	addlw	208
  2067     12E5  00F8               	movwf	read_prec_or_width@c
  2068     12E6  300A               	movlw	10
  2069     12E7  0278               	subwf	read_prec_or_width@c,w
  2070     12E8  1C03               	skipc
  2071     12E9  2AEB               	goto	u4291
  2072     12EA  2AEC               	goto	u4290
  2073     12EB                     u4291:
  2074     12EB  2ABF               	goto	l3111
  2075     12EC                     u4290:
  2076     12EC                     l3117:
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  2079     12EC  087A               	movf	read_prec_or_width@n+1,w
  2080     12ED  00F7               	movwf	?_read_prec_or_width+1
  2081     12EE  0879               	movf	read_prec_or_width@n,w
  2082     12EF  00F6               	movwf	?_read_prec_or_width
  2083     12F0                     l770:
  2084     12F0  0008               	return
  2085     12F1                     __end_of_read_prec_or_width:
  2086                           
  2087                           	psect	text5
  2088     1072                     __ptext5:	
  2089 ;; *************** function ___wmul *****************
  2090 ;; Defined at:
  2091 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  multiplier      2    0[COMMON] unsigned int 
  2094 ;;  multiplicand    2    2[COMMON] unsigned int 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  product         2    4[COMMON] unsigned int 
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  2    0[COMMON] unsigned int 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0
  2101 ;; Tracked objects:
  2102 ;;		On entry : 0/0
  2103 ;;		On exit  : 0/0
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2106 ;;      Params:         4       0       0       0       0
  2107 ;;      Locals:         2       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0
  2109 ;;      Totals:         6       0       0       0       0
  2110 ;;Total ram usage:        6 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; This function calls:
  2113 ;;		Nothing
  2114 ;; This function is called by:
  2115 ;;		_read_prec_or_width
  2116 ;; This function uses a non-reentrant model
  2117 ;;
  2118                           
  2119     1072                     ___wmul:	
  2120                           ;psect for function ___wmul
  2121                           
  2122     1072                     l2423:	
  2123                           ;incstack = 0
  2124                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2125                           
  2126     1072  01F4               	clrf	___wmul@product
  2127     1073  01F5               	clrf	___wmul@product+1
  2128     1074                     l2425:
  2129     1074  1C70               	btfss	___wmul@multiplier,0
  2130     1075  2877               	goto	u2761
  2131     1076  2878               	goto	u2760
  2132     1077                     u2761:
  2133     1077  287E               	goto	l216
  2134     1078                     u2760:
  2135     1078                     l2427:
  2136     1078  0872               	movf	___wmul@multiplicand,w
  2137     1079  07F4               	addwf	___wmul@product,f
  2138     107A  1803               	skipnc
  2139     107B  0AF5               	incf	___wmul@product+1,f
  2140     107C  0873               	movf	___wmul@multiplicand+1,w
  2141     107D  07F5               	addwf	___wmul@product+1,f
  2142     107E                     l216:
  2143     107E  3001               	movlw	1
  2144     107F                     u2775:
  2145     107F  1003               	clrc
  2146     1080  0DF2               	rlf	___wmul@multiplicand,f
  2147     1081  0DF3               	rlf	___wmul@multiplicand+1,f
  2148     1082  3EFF               	addlw	-1
  2149     1083  1D03               	skipz
  2150     1084  287F               	goto	u2775
  2151     1085                     l2429:
  2152     1085  3001               	movlw	1
  2153     1086                     u2785:
  2154     1086  1003               	clrc
  2155     1087  0CF1               	rrf	___wmul@multiplier+1,f
  2156     1088  0CF0               	rrf	___wmul@multiplier,f
  2157     1089  3EFF               	addlw	-1
  2158     108A  1D03               	skipz
  2159     108B  2886               	goto	u2785
  2160     108C                     l2431:
  2161     108C  0870               	movf	___wmul@multiplier,w
  2162     108D  0471               	iorwf	___wmul@multiplier+1,w
  2163     108E  1D03               	btfss	3,2
  2164     108F  2891               	goto	u2791
  2165     1090  2892               	goto	u2790
  2166     1091                     u2791:
  2167     1091  2874               	goto	l2425
  2168     1092                     u2790:
  2169     1092                     l2433:
  2170     1092  0875               	movf	___wmul@product+1,w
  2171     1093  00F1               	movwf	?___wmul+1
  2172     1094  0874               	movf	___wmul@product,w
  2173     1095  00F0               	movwf	?___wmul
  2174     1096                     l218:
  2175     1096  0008               	return
  2176     1097                     __end_of___wmul:
  2177                           
  2178                           	psect	text6
  2179     1476                     __ptext6:	
  2180 ;; *************** function _efgtoa *****************
  2181 ;; Defined at:
  2182 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2183 ;; Parameters:    Size  Location     Type
  2184 ;;  fp              1    wreg     PTR struct _IO_FILE
  2185 ;;		 -> sprintf@f(11), 
  2186 ;;  f               4   33[BANK0 ] PTR struct _IO_FILE
  2187 ;;  c               1   37[BANK0 ] unsigned char 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  fp              1   15[BANK1 ] PTR struct _IO_FILE
  2190 ;;		 -> sprintf@f(11), 
  2191 ;;  u               4   41[BANK1 ] struct flui
  2192 ;;  g               4   37[BANK1 ] struct flui
  2193 ;;  l               4   30[BANK1 ] struct flui
  2194 ;;  h               4   26[BANK1 ] struct flui
  2195 ;;  ou              4   20[BANK1 ] struct flui
  2196 ;;  n               2   35[BANK1 ] int 
  2197 ;;  i               2   24[BANK1 ] int 
  2198 ;;  w               2   18[BANK1 ] int 
  2199 ;;  e               2   16[BANK1 ] int 
  2200 ;;  m               2   13[BANK1 ] int 
  2201 ;;  d               2   11[BANK1 ] int 
  2202 ;;  t               2    4[BANK1 ] int 
  2203 ;;  p               2    2[BANK1 ] int 
  2204 ;;  ne              2    0[BANK1 ] int 
  2205 ;;  sign            1   34[BANK1 ] unsigned char 
  2206 ;;  nmode           1   10[BANK1 ] unsigned char 
  2207 ;;  mode            1    9[BANK1 ] unsigned char 
  2208 ;;  pp              1    8[BANK1 ] unsigned char 
  2209 ;;  esign           1    0        unsigned char 
  2210 ;; Return value:  Size  Location     Type
  2211 ;;                  1    wreg      void 
  2212 ;; Registers used:
  2213 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2214 ;; Tracked objects:
  2215 ;;		On entry : 0/0
  2216 ;;		On exit  : 0/0
  2217 ;;		Unchanged: 0/0
  2218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2219 ;;      Params:         0       5       0       0       0
  2220 ;;      Locals:         0       0      45       0       0
  2221 ;;      Temps:          0       4       0       0       0
  2222 ;;      Totals:         0       9      45       0       0
  2223 ;;Total ram usage:       54 bytes
  2224 ;; Hardware stack levels used: 1
  2225 ;; Hardware stack levels required when called: 4
  2226 ;; This function calls:
  2227 ;;		___fladd
  2228 ;;		___fldiv
  2229 ;;		___fleq
  2230 ;;		___flge
  2231 ;;		___flmul
  2232 ;;		___flneg
  2233 ;;		___flsub
  2234 ;;		___fltol
  2235 ;;		___fpclassifyf
  2236 ;;		_floorf
  2237 ;;		_labs
  2238 ;;		_memcpy
  2239 ;;		_pad
  2240 ;;		_strcpy
  2241 ;; This function is called by:
  2242 ;;		_vfpfcnvrt
  2243 ;; This function uses a non-reentrant model
  2244 ;;
  2245                           
  2246     1476                     _efgtoa:	
  2247                           ;psect for function _efgtoa
  2248                           
  2249                           
  2250                           ;incstack = 0
  2251                           ; Regs used in _efgtoa: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2252                           ;efgtoa@fp stored from wreg
  2253     1476  1683               	bsf	3,5	;RP0=1, select bank1
  2254     1477  1303               	bcf	3,6	;RP1=0, select bank1
  2255     1478  00AF               	movwf	efgtoa@fp^(0+128)
  2256     1479                     l2897:
  2257                           
  2258                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  2259     1479  01C2               	clrf	efgtoa@sign^(0+128)
  2260     147A                     l2899:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  2263     147A  1283               	bcf	3,5	;RP0=0, select bank0
  2264     147B  1303               	bcf	3,6	;RP1=0, select bank0
  2265     147C  0844               	movf	efgtoa@f+3,w
  2266     147D  1683               	bsf	3,5	;RP0=1, select bank1
  2267     147E  1303               	bcf	3,6	;RP1=0, select bank1
  2268     147F  00C8               	movwf	(efgtoa@g+3)^(0+128)
  2269     1480  1283               	bcf	3,5	;RP0=0, select bank0
  2270     1481  1303               	bcf	3,6	;RP1=0, select bank0
  2271     1482  0843               	movf	efgtoa@f+2,w
  2272     1483  1683               	bsf	3,5	;RP0=1, select bank1
  2273     1484  1303               	bcf	3,6	;RP1=0, select bank1
  2274     1485  00C7               	movwf	(efgtoa@g+2)^(0+128)
  2275     1486  1283               	bcf	3,5	;RP0=0, select bank0
  2276     1487  1303               	bcf	3,6	;RP1=0, select bank0
  2277     1488  0842               	movf	efgtoa@f+1,w
  2278     1489  1683               	bsf	3,5	;RP0=1, select bank1
  2279     148A  1303               	bcf	3,6	;RP1=0, select bank1
  2280     148B  00C6               	movwf	(efgtoa@g+1)^(0+128)
  2281     148C  1283               	bcf	3,5	;RP0=0, select bank0
  2282     148D  1303               	bcf	3,6	;RP1=0, select bank0
  2283     148E  0841               	movf	efgtoa@f,w
  2284     148F  1683               	bsf	3,5	;RP0=1, select bank1
  2285     1490  1303               	bcf	3,6	;RP1=0, select bank1
  2286     1491  00C5               	movwf	efgtoa@g^(0+128)
  2287     1492                     l2901:
  2288                           
  2289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  2290     1492  0848               	movf	(efgtoa@g+3)^(0+128),w
  2291     1493  1283               	bcf	3,5	;RP0=0, select bank0
  2292     1494  1303               	bcf	3,6	;RP1=0, select bank0
  2293     1495  00B8               	movwf	___flge@ff1+3
  2294     1496  1683               	bsf	3,5	;RP0=1, select bank1
  2295     1497  1303               	bcf	3,6	;RP1=0, select bank1
  2296     1498  0847               	movf	(efgtoa@g+2)^(0+128),w
  2297     1499  1283               	bcf	3,5	;RP0=0, select bank0
  2298     149A  1303               	bcf	3,6	;RP1=0, select bank0
  2299     149B  00B7               	movwf	___flge@ff1+2
  2300     149C  1683               	bsf	3,5	;RP0=1, select bank1
  2301     149D  1303               	bcf	3,6	;RP1=0, select bank1
  2302     149E  0846               	movf	(efgtoa@g+1)^(0+128),w
  2303     149F  1283               	bcf	3,5	;RP0=0, select bank0
  2304     14A0  1303               	bcf	3,6	;RP1=0, select bank0
  2305     14A1  00B6               	movwf	___flge@ff1+1
  2306     14A2  1683               	bsf	3,5	;RP0=1, select bank1
  2307     14A3  1303               	bcf	3,6	;RP1=0, select bank1
  2308     14A4  0845               	movf	efgtoa@g^(0+128),w
  2309     14A5  1283               	bcf	3,5	;RP0=0, select bank0
  2310     14A6  1303               	bcf	3,6	;RP1=0, select bank0
  2311     14A7  00B5               	movwf	___flge@ff1
  2312     14A8  3000               	movlw	0
  2313     14A9  00BC               	movwf	___flge@ff2+3
  2314     14AA  3000               	movlw	0
  2315     14AB  00BB               	movwf	___flge@ff2+2
  2316     14AC  3000               	movlw	0
  2317     14AD  00BA               	movwf	___flge@ff2+1
  2318     14AE  3000               	movlw	0
  2319     14AF  00B9               	movwf	___flge@ff2
  2320     14B0  120A  118A  203F  160A  118A  	fcall	___flge
  2321     14B5  1803               	btfsc	3,0
  2322     14B6  2CB8               	goto	u3931
  2323     14B7  2CB9               	goto	u3930
  2324     14B8                     u3931:
  2325     14B8  2CD4               	goto	l2907
  2326     14B9                     u3930:
  2327     14B9                     l2903:
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  2330     14B9  1683               	bsf	3,5	;RP0=1, select bank1
  2331     14BA  1303               	bcf	3,6	;RP1=0, select bank1
  2332     14BB  01C2               	clrf	efgtoa@sign^(0+128)
  2333     14BC  0AC2               	incf	efgtoa@sign^(0+128),f
  2334     14BD                     l2905:
  2335                           
  2336                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  2337     14BD  0848               	movf	(efgtoa@g+3)^(0+128),w
  2338     14BE  00F3               	movwf	___flneg@f1+3
  2339     14BF  0847               	movf	(efgtoa@g+2)^(0+128),w
  2340     14C0  00F2               	movwf	___flneg@f1+2
  2341     14C1  0846               	movf	(efgtoa@g+1)^(0+128),w
  2342     14C2  00F1               	movwf	___flneg@f1+1
  2343     14C3  0845               	movf	efgtoa@g^(0+128),w
  2344     14C4  00F0               	movwf	___flneg@f1
  2345     14C5  160A  158A  2767  160A  118A  	fcall	___flneg
  2346     14CA  0873               	movf	?___flneg+3,w
  2347     14CB  1683               	bsf	3,5	;RP0=1, select bank1
  2348     14CC  1303               	bcf	3,6	;RP1=0, select bank1
  2349     14CD  00C8               	movwf	(efgtoa@g+3)^(0+128)
  2350     14CE  0872               	movf	?___flneg+2,w
  2351     14CF  00C7               	movwf	(efgtoa@g+2)^(0+128)
  2352     14D0  0871               	movf	?___flneg+1,w
  2353     14D1  00C6               	movwf	(efgtoa@g+1)^(0+128)
  2354     14D2  0870               	movf	?___flneg,w
  2355     14D3  00C5               	movwf	efgtoa@g^(0+128)
  2356     14D4                     l2907:
  2357                           
  2358                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  2359     14D4  1683               	bsf	3,5	;RP0=1, select bank1
  2360     14D5  1303               	bcf	3,6	;RP1=0, select bank1
  2361     14D6  01C3               	clrf	efgtoa@n^(0+128)
  2362     14D7  01C4               	clrf	(efgtoa@n+1)^(0+128)
  2363     14D8                     l2909:
  2364                           
  2365                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  2366     14D8  1283               	bcf	3,5	;RP0=0, select bank0
  2367     14D9  1303               	bcf	3,6	;RP1=0, select bank0
  2368     14DA  086A               	movf	_width+1,w
  2369     14DB  1683               	bsf	3,5	;RP0=1, select bank1
  2370     14DC  1303               	bcf	3,6	;RP1=0, select bank1
  2371     14DD  00B3               	movwf	(efgtoa@w+1)^(0+128)
  2372     14DE  1283               	bcf	3,5	;RP0=0, select bank0
  2373     14DF  1303               	bcf	3,6	;RP1=0, select bank0
  2374     14E0  0869               	movf	_width,w
  2375     14E1  1683               	bsf	3,5	;RP0=1, select bank1
  2376     14E2  1303               	bcf	3,6	;RP1=0, select bank1
  2377     14E3  00B2               	movwf	efgtoa@w^(0+128)
  2378     14E4                     l2911:
  2379                           
  2380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  2381     14E4  0842               	movf	efgtoa@sign^(0+128),w
  2382     14E5  1903               	btfsc	3,2
  2383     14E6  2CE8               	goto	u3941
  2384     14E7  2CE9               	goto	u3940
  2385     14E8                     u3941:
  2386     14E8  2CF9               	goto	l2919
  2387     14E9                     u3940:
  2388     14E9                     l2913:
  2389                           
  2390                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  2391     14E9  0842               	movf	efgtoa@sign^(0+128),w
  2392     14EA  1D03               	btfss	3,2
  2393     14EB  2CED               	goto	u3951
  2394     14EC  2CEE               	goto	u3950
  2395     14ED                     u3951:
  2396     14ED  2CF3               	goto	l2917
  2397     14EE                     u3950:
  2398     14EE                     l2915:
  2399     14EE  302B               	movlw	43
  2400     14EF  00A6               	movwf	_efgtoa$714^(0+128)
  2401     14F0  3000               	movlw	0
  2402     14F1  00A7               	movwf	(_efgtoa$714^(0+128)+1)
  2403     14F2  2CF7               	goto	l718
  2404     14F3                     l2917:
  2405     14F3  302D               	movlw	45
  2406     14F4  00A6               	movwf	_efgtoa$714^(0+128)
  2407     14F5  3000               	movlw	0
  2408     14F6  00A7               	movwf	(_efgtoa$714^(0+128)+1)
  2409     14F7                     l718:
  2410     14F7  0826               	movf	_efgtoa$714^(0+128),w
  2411     14F8  00C2               	movwf	efgtoa@sign^(0+128)
  2412     14F9                     l2919:
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  2415     14F9  0848               	movf	(efgtoa@g+3)^(0+128),w
  2416     14FA  00F3               	movwf	___fpclassifyf@x+3
  2417     14FB  0847               	movf	(efgtoa@g+2)^(0+128),w
  2418     14FC  00F2               	movwf	___fpclassifyf@x+2
  2419     14FD  0846               	movf	(efgtoa@g+1)^(0+128),w
  2420     14FE  00F1               	movwf	___fpclassifyf@x+1
  2421     14FF  0845               	movf	efgtoa@g^(0+128),w
  2422     1500  00F0               	movwf	___fpclassifyf@x
  2423     1501  120A  158A  2003  160A  118A  	fcall	___fpclassifyf
  2424     1506  0370               	decf	?___fpclassifyf,w
  2425     1507  0471               	iorwf	?___fpclassifyf+1,w
  2426     1508  1D03               	btfss	3,2
  2427     1509  2D0B               	goto	u3961
  2428     150A  2D0C               	goto	u3960
  2429     150B                     u3961:
  2430     150B  2D43               	goto	l2933
  2431     150C                     u3960:
  2432     150C                     l2921:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  2435     150C  1683               	bsf	3,5	;RP0=1, select bank1
  2436     150D  1303               	bcf	3,6	;RP1=0, select bank1
  2437     150E  0842               	movf	efgtoa@sign^(0+128),w
  2438     150F  1903               	btfsc	3,2
  2439     1510  2D12               	goto	u3971
  2440     1511  2D13               	goto	u3970
  2441     1512                     u3971:
  2442     1512  2D23               	goto	l2925
  2443     1513                     u3970:
  2444     1513                     l2923:
  2445                           
  2446                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  2447     1513  0842               	movf	efgtoa@sign^(0+128),w
  2448     1514  1683               	bsf	3,5	;RP0=1, select bank3
  2449     1515  1703               	bsf	3,6	;RP1=1, select bank3
  2450     1516  0090               	movwf	_dbuf^(0+384)
  2451                           
  2452                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  2453     1517  30FF               	movlw	255
  2454     1518  1683               	bsf	3,5	;RP0=1, select bank1
  2455     1519  1303               	bcf	3,6	;RP1=0, select bank1
  2456     151A  07B2               	addwf	efgtoa@w^(0+128),f
  2457     151B  1803               	skipnc
  2458     151C  0AB3               	incf	(efgtoa@w+1)^(0+128),f
  2459     151D  30FF               	movlw	255
  2460     151E  07B3               	addwf	(efgtoa@w+1)^(0+128),f
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  2463     151F  3001               	movlw	1
  2464     1520  00C3               	movwf	efgtoa@n^(0+128)
  2465     1521  3000               	movlw	0
  2466     1522  00C4               	movwf	(efgtoa@n^(0+128)+1)
  2467     1523                     l2925:
  2468                           
  2469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  2470     1523  3010               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  2471     1524  00F0               	movwf	strcpy@src
  2472     1525  0843               	movf	efgtoa@n^(0+128),w
  2473     1526  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2474     1527  160A  158A  27C6  160A  118A  	fcall	_strcpy
  2475     152C                     l2927:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  2478     152C  30FD               	movlw	253
  2479     152D  1683               	bsf	3,5	;RP0=1, select bank1
  2480     152E  1303               	bcf	3,6	;RP1=0, select bank1
  2481     152F  07B2               	addwf	efgtoa@w^(0+128),f
  2482     1530  1803               	skipnc
  2483     1531  0AB3               	incf	(efgtoa@w+1)^(0+128),f
  2484     1532  30FF               	movlw	255
  2485     1533  07B3               	addwf	(efgtoa@w+1)^(0+128),f
  2486     1534                     l2929:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2489     1534  3090               	movlw	(low (_dbuf| (0+256)))& (0+255)
  2490     1535  00FB               	movwf	pad@buf
  2491     1536  0833               	movf	(efgtoa@w+1)^(0+128),w
  2492     1537  00FD               	movwf	pad@p+1
  2493     1538  0832               	movf	efgtoa@w^(0+128),w
  2494     1539  00FC               	movwf	pad@p
  2495     153A  082F               	movf	efgtoa@fp^(0+128),w
  2496     153B  120A  118A  2005  160A  118A  	fcall	_pad
  2497     1540                     L1:
  2498     1540  120A  118A  2FE1   	goto	l721
  2499     1543                     l2933:
  2500                           
  2501                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  2502     1543  1683               	bsf	3,5	;RP0=1, select bank1
  2503     1544  1303               	bcf	3,6	;RP1=0, select bank1
  2504     1545  0848               	movf	(efgtoa@g+3)^(0+128),w
  2505     1546  00F3               	movwf	___fpclassifyf@x+3
  2506     1547  0847               	movf	(efgtoa@g+2)^(0+128),w
  2507     1548  00F2               	movwf	___fpclassifyf@x+2
  2508     1549  0846               	movf	(efgtoa@g+1)^(0+128),w
  2509     154A  00F1               	movwf	___fpclassifyf@x+1
  2510     154B  0845               	movf	efgtoa@g^(0+128),w
  2511     154C  00F0               	movwf	___fpclassifyf@x
  2512     154D  120A  158A  2003  160A  118A  	fcall	___fpclassifyf
  2513     1552  0870               	movf	?___fpclassifyf,w
  2514     1553  0471               	iorwf	?___fpclassifyf+1,w
  2515     1554  1D03               	btfss	3,2
  2516     1555  2D57               	goto	u3981
  2517     1556  2D5A               	goto	u3980
  2518     1557                     u3981:
  2519     1557  120A  118A  28E3   	goto	l2947
  2520     155A                     u3980:
  2521     155A                     l2935:
  2522                           
  2523                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  2524     155A  1683               	bsf	3,5	;RP0=1, select bank1
  2525     155B  1303               	bcf	3,6	;RP1=0, select bank1
  2526     155C  0842               	movf	efgtoa@sign^(0+128),w
  2527     155D  1903               	btfsc	3,2
  2528     155E  2D60               	goto	u3991
  2529     155F  2D61               	goto	u3990
  2530     1560                     u3991:
  2531     1560  2D71               	goto	l2939
  2532     1561                     u3990:
  2533     1561                     l2937:
  2534                           
  2535                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  2536     1561  0842               	movf	efgtoa@sign^(0+128),w
  2537     1562  1683               	bsf	3,5	;RP0=1, select bank3
  2538     1563  1703               	bsf	3,6	;RP1=1, select bank3
  2539     1564  0090               	movwf	_dbuf^(0+384)
  2540                           
  2541                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  2542     1565  30FF               	movlw	255
  2543     1566  1683               	bsf	3,5	;RP0=1, select bank1
  2544     1567  1303               	bcf	3,6	;RP1=0, select bank1
  2545     1568  07B2               	addwf	efgtoa@w^(0+128),f
  2546     1569  1803               	skipnc
  2547     156A  0AB3               	incf	(efgtoa@w+1)^(0+128),f
  2548     156B  30FF               	movlw	255
  2549     156C  07B3               	addwf	(efgtoa@w+1)^(0+128),f
  2550                           
  2551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  2552     156D  3001               	movlw	1
  2553     156E  00C3               	movwf	efgtoa@n^(0+128)
  2554     156F  3000               	movlw	0
  2555     1570  00C4               	movwf	(efgtoa@n^(0+128)+1)
  2556     1571                     l2939:
  2557                           
  2558                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  2559     1571  3014               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2560     1572  00F0               	movwf	strcpy@src
  2561     1573  0843               	movf	efgtoa@n^(0+128),w
  2562     1574  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  2563     1575  160A  158A  27C6  160A  118A  	fcall	_strcpy
  2564     157A                     l2941:
  2565                           
  2566                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 651:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 652:         w -= ((
      +                          sizeof("nan")/sizeof("nan"[0]))-1);
  2567     157A  30FD               	movlw	253
  2568     157B  1683               	bsf	3,5	;RP0=1, select bank1
  2569     157C  1303               	bcf	3,6	;RP1=0, select bank1
  2570     157D  07B2               	addwf	efgtoa@w^(0+128),f
  2571     157E  1803               	skipnc
  2572     157F  0AB3               	incf	(efgtoa@w+1)^(0+128),f
  2573     1580  30FF               	movlw	255
  2574     1581  07B3               	addwf	(efgtoa@w+1)^(0+128),f
  2575     1582                     l2943:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 653:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  2578     1582  3090               	movlw	(low (_dbuf| (0+256)))& (0+255)
  2579     1583  00FB               	movwf	pad@buf
  2580     1584  0833               	movf	(efgtoa@w+1)^(0+128),w
  2581     1585  00FD               	movwf	pad@p+1
  2582     1586  0832               	movf	efgtoa@w^(0+128),w
  2583     1587  00FC               	movwf	pad@p
  2584     1588  082F               	movf	efgtoa@fp^(0+128),w
  2585     1589  120A  118A  2005  160A  118A  	fcall	_pad
  2586     158E  2D40               	goto	L1
  2587                           
  2588                           	psect	text7
  2589     1FC6                     __ptext7:	
  2590 ;; *************** function _strcpy *****************
  2591 ;; Defined at:
  2592 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  dest            1    wreg     PTR unsigned char 
  2595 ;;		 -> dbuf(80), 
  2596 ;;  src             1    0[COMMON] PTR const unsigned char 
  2597 ;;		 -> STR_6(4), STR_3(4), 
  2598 ;; Auto vars:     Size  Location     Type
  2599 ;;  dest            1    2[COMMON] PTR unsigned char 
  2600 ;;		 -> dbuf(80), 
  2601 ;;  d               1    1[COMMON] PTR unsigned char 
  2602 ;;		 -> dbuf(80), 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  1    wreg      PTR unsigned char 
  2605 ;; Registers used:
  2606 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2612 ;;      Params:         1       0       0       0       0
  2613 ;;      Locals:         2       0       0       0       0
  2614 ;;      Temps:          0       0       0       0       0
  2615 ;;      Totals:         3       0       0       0       0
  2616 ;;Total ram usage:        3 bytes
  2617 ;; Hardware stack levels used: 2
  2618 ;; This function calls:
  2619 ;;		Nothing
  2620 ;; This function is called by:
  2621 ;;		_efgtoa
  2622 ;; This function uses a non-reentrant model
  2623 ;;
  2624                           
  2625     1FC6                     _strcpy:	
  2626                           ;psect for function _strcpy
  2627                           
  2628                           
  2629                           ;incstack = 0
  2630                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  2631                           ;strcpy@dest stored from wreg
  2632     1FC6  00F2               	movwf	strcpy@dest
  2633     1FC7                     l2845:
  2634     1FC7  0872               	movf	strcpy@dest,w
  2635     1FC8  00F1               	movwf	strcpy@d
  2636     1FC9                     l2847:
  2637     1FC9  3001               	movlw	1
  2638     1FCA  07F0               	addwf	strcpy@src,f
  2639     1FCB  30FF               	movlw	-1
  2640     1FCC  0770               	addwf	strcpy@src,w
  2641     1FCD  0084               	movwf	4
  2642     1FCE  160A  118A  200A  160A  158A  	fcall	stringdir
  2643     1FD3  00FF               	movwf	btemp+1
  2644     1FD4  0871               	movf	strcpy@d,w
  2645     1FD5  0084               	movwf	4
  2646     1FD6  3001               	movlw	1
  2647     1FD7  07F1               	addwf	strcpy@d,f
  2648     1FD8  087F               	movf	btemp+1,w
  2649     1FD9  1783               	bsf	3,7	;select IRP bank2
  2650     1FDA  0080               	movwf	0
  2651     1FDB  0800               	movf	0,w
  2652     1FDC  1D03               	btfss	3,2
  2653     1FDD  2FDF               	goto	u3781
  2654     1FDE  2FE0               	goto	u3780
  2655     1FDF                     u3781:
  2656     1FDF  2FC9               	goto	l2847
  2657     1FE0                     u3780:
  2658     1FE0                     l863:
  2659     1FE0  0008               	return
  2660     1FE1                     __end_of_strcpy:
  2661                           
  2662                           	psect	text8
  2663     0005                     __ptext8:	
  2664 ;; *************** function _pad *****************
  2665 ;; Defined at:
  2666 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  2667 ;; Parameters:    Size  Location     Type
  2668 ;;  fp              1    wreg     PTR struct _IO_FILE
  2669 ;;		 -> sprintf@f(11), 
  2670 ;;  buf             1   11[COMMON] PTR unsigned char 
  2671 ;;		 -> dbuf(80), 
  2672 ;;  p               2   12[COMMON] int 
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  fp              1    7[BANK0 ] PTR struct _IO_FILE
  2675 ;;		 -> sprintf@f(11), 
  2676 ;;  i               2    5[BANK0 ] int 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2686 ;;      Params:         3       0       0       0       0
  2687 ;;      Locals:         0       3       0       0       0
  2688 ;;      Temps:          0       1       0       0       0
  2689 ;;      Totals:         3       4       0       0       0
  2690 ;;Total ram usage:        7 bytes
  2691 ;; Hardware stack levels used: 1
  2692 ;; Hardware stack levels required when called: 3
  2693 ;; This function calls:
  2694 ;;		_fputc
  2695 ;;		_fputs
  2696 ;; This function is called by:
  2697 ;;		_efgtoa
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701     0005                     _pad:	
  2702                           ;psect for function _pad
  2703                           
  2704                           
  2705                           ;incstack = 0
  2706                           ; Regs used in _pad: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2707                           ;pad@fp stored from wreg
  2708     0005  1283               	bcf	3,5	;RP0=0, select bank0
  2709     0006  1303               	bcf	3,6	;RP1=0, select bank0
  2710     0007  00A7               	movwf	pad@fp
  2711     0008                     l2809:
  2712                           
  2713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  2714     0008  1FFD               	btfss	pad@p+1,7
  2715     0009  280B               	goto	u3681
  2716     000A  280C               	goto	u3680
  2717     000B                     u3681:
  2718     000B  280E               	goto	l706
  2719     000C                     u3680:
  2720     000C                     l2811:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2723     000C  01FC               	clrf	pad@p
  2724     000D  01FD               	clrf	pad@p+1
  2725     000E                     l706:	
  2726                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 207:  }
  2727                           
  2728                           
  2729                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2730     000E  01A5               	clrf	pad@i
  2731     000F  01A6               	clrf	pad@i+1
  2732                           
  2733                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2734     0010  2826               	goto	l2817
  2735     0011                     l2813:
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2738     0011  3020               	movlw	32
  2739     0012  00F0               	movwf	fputc@c
  2740     0013  3000               	movlw	0
  2741     0014  00F1               	movwf	fputc@c+1
  2742     0015  1283               	bcf	3,5	;RP0=0, select bank0
  2743     0016  1303               	bcf	3,6	;RP1=0, select bank0
  2744     0017  0827               	movf	pad@fp,w
  2745     0018  00F2               	movwf	fputc@fp
  2746     0019  160A  118A  2243  120A  118A  	fcall	_fputc
  2747     001E                     l2815:
  2748                           
  2749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2750     001E  3001               	movlw	1
  2751     001F  1283               	bcf	3,5	;RP0=0, select bank0
  2752     0020  1303               	bcf	3,6	;RP1=0, select bank0
  2753     0021  07A5               	addwf	pad@i,f
  2754     0022  1803               	skipnc
  2755     0023  0AA6               	incf	pad@i+1,f
  2756     0024  3000               	movlw	0
  2757     0025  07A6               	addwf	pad@i+1,f
  2758     0026                     l2817:
  2759                           
  2760                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2761     0026  0826               	movf	pad@i+1,w
  2762     0027  3A80               	xorlw	128
  2763     0028  00A4               	movwf	??_pad
  2764     0029  087D               	movf	pad@p+1,w
  2765     002A  3A80               	xorlw	128
  2766     002B  0224               	subwf	??_pad,w
  2767     002C  1D03               	skipz
  2768     002D  2830               	goto	u3695
  2769     002E  087C               	movf	pad@p,w
  2770     002F  0225               	subwf	pad@i,w
  2771     0030                     u3695:
  2772     0030  1C03               	skipc
  2773     0031  2833               	goto	u3691
  2774     0032  2834               	goto	u3690
  2775     0033                     u3691:
  2776     0033  2811               	goto	l2813
  2777     0034                     u3690:
  2778     0034                     l2819:
  2779                           
  2780                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2781     0034  1283               	bcf	3,5	;RP0=0, select bank0
  2782     0035  1303               	bcf	3,6	;RP1=0, select bank0
  2783     0036  0827               	movf	pad@fp,w
  2784     0037  00F8               	movwf	fputs@fp
  2785     0038  087B               	movf	pad@buf,w
  2786     0039  160A  118A  210A  120A  118A  	fcall	_fputs
  2787     003E                     l710:
  2788     003E  0008               	return
  2789     003F                     __end_of_pad:
  2790                           
  2791                           	psect	text9
  2792     110A                     __ptext9:	
  2793 ;; *************** function _fputs *****************
  2794 ;; Defined at:
  2795 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  2796 ;; Parameters:    Size  Location     Type
  2797 ;;  s               1    wreg     PTR const unsigned char 
  2798 ;;		 -> dbuf(80), 
  2799 ;;  fp              1    8[COMMON] PTR struct _IO_FILE
  2800 ;;		 -> sprintf@f(11), 
  2801 ;; Auto vars:     Size  Location     Type
  2802 ;;  s               1    3[BANK0 ] PTR const unsigned char 
  2803 ;;		 -> dbuf(80), 
  2804 ;;  i               2    1[BANK0 ] int 
  2805 ;;  c               1    0[BANK0 ] unsigned char 
  2806 ;; Return value:  Size  Location     Type
  2807 ;;                  2    8[COMMON] int 
  2808 ;; Registers used:
  2809 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2810 ;; Tracked objects:
  2811 ;;		On entry : 0/0
  2812 ;;		On exit  : 0/0
  2813 ;;		Unchanged: 0/0
  2814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2815 ;;      Params:         1       0       0       0       0
  2816 ;;      Locals:         0       4       0       0       0
  2817 ;;      Temps:          2       0       0       0       0
  2818 ;;      Totals:         3       4       0       0       0
  2819 ;;Total ram usage:        7 bytes
  2820 ;; Hardware stack levels used: 1
  2821 ;; Hardware stack levels required when called: 2
  2822 ;; This function calls:
  2823 ;;		_fputc
  2824 ;; This function is called by:
  2825 ;;		_pad
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829     110A                     _fputs:	
  2830                           ;psect for function _fputs
  2831                           
  2832                           
  2833                           ;incstack = 0
  2834                           ; Regs used in _fputs: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2835                           ;fputs@s stored from wreg
  2836     110A  1283               	bcf	3,5	;RP0=0, select bank0
  2837     110B  1303               	bcf	3,6	;RP1=0, select bank0
  2838     110C  00A3               	movwf	fputs@s
  2839     110D                     l2415:
  2840     110D  01A1               	clrf	fputs@i
  2841     110E  01A2               	clrf	fputs@i+1
  2842     110F  2926               	goto	l2421
  2843     1110                     l2417:
  2844     1110  0820               	movf	fputs@c,w
  2845     1111  00F9               	movwf	??_fputs
  2846     1112  01FA               	clrf	??_fputs+1
  2847     1113  0879               	movf	??_fputs,w
  2848     1114  00F0               	movwf	fputc@c
  2849     1115  087A               	movf	??_fputs+1,w
  2850     1116  00F1               	movwf	fputc@c+1
  2851     1117  0878               	movf	fputs@fp,w
  2852     1118  00F2               	movwf	fputc@fp
  2853     1119  160A  118A  2243  160A  118A  	fcall	_fputc
  2854     111E                     l2419:
  2855     111E  3001               	movlw	1
  2856     111F  1283               	bcf	3,5	;RP0=0, select bank0
  2857     1120  1303               	bcf	3,6	;RP1=0, select bank0
  2858     1121  07A1               	addwf	fputs@i,f
  2859     1122  1803               	skipnc
  2860     1123  0AA2               	incf	fputs@i+1,f
  2861     1124  3000               	movlw	0
  2862     1125  07A2               	addwf	fputs@i+1,f
  2863     1126                     l2421:
  2864     1126  0821               	movf	fputs@i,w
  2865     1127  0723               	addwf	fputs@s,w
  2866     1128  00F9               	movwf	??_fputs
  2867     1129  0879               	movf	??_fputs,w
  2868     112A  0084               	movwf	4
  2869     112B  1783               	bsf	3,7	;select IRP bank2
  2870     112C  0800               	movf	0,w
  2871     112D  00A0               	movwf	fputs@c
  2872     112E  0820               	movf	fputs@c,w
  2873     112F  1D03               	btfss	3,2
  2874     1130  2932               	goto	u2751
  2875     1131  2933               	goto	u2750
  2876     1132                     u2751:
  2877     1132  2910               	goto	l2417
  2878     1133                     u2750:
  2879     1133                     l854:
  2880     1133  0008               	return
  2881     1134                     __end_of_fputs:
  2882                           
  2883                           	psect	text10
  2884     1243                     __ptext10:	
  2885 ;; *************** function _fputc *****************
  2886 ;; Defined at:
  2887 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;  c               2    0[COMMON] int 
  2890 ;;  fp              1    2[COMMON] PTR struct _IO_FILE
  2891 ;;		 -> sprintf@f(11), 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2    0[COMMON] int 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2903 ;;      Params:         3       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0
  2905 ;;      Temps:          5       0       0       0       0
  2906 ;;      Totals:         8       0       0       0       0
  2907 ;;Total ram usage:        8 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 1
  2910 ;; This function calls:
  2911 ;;		_putch
  2912 ;; This function is called by:
  2913 ;;		_pad
  2914 ;;		_vfpfcnvrt
  2915 ;;		_fputs
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919     1243                     _fputc:	
  2920                           ;psect for function _fputc
  2921                           
  2922     1243                     l2187:	
  2923                           ;incstack = 0
  2924                           ; Regs used in _fputc: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2925                           
  2926     1243  0872               	movf	fputc@fp,w
  2927     1244  1903               	btfsc	3,2
  2928     1245  2A47               	goto	u2221
  2929     1246  2A48               	goto	u2220
  2930     1247                     u2221:
  2931     1247  2A4D               	goto	l2191
  2932     1248                     u2220:
  2933     1248                     l2189:
  2934     1248  0872               	movf	fputc@fp,w
  2935     1249  1D03               	btfss	3,2
  2936     124A  2A4C               	goto	u2231
  2937     124B  2A4D               	goto	u2230
  2938     124C                     u2231:
  2939     124C  2A54               	goto	l2193
  2940     124D                     u2230:
  2941     124D                     l2191:
  2942     124D  0870               	movf	fputc@c,w
  2943     124E  120A  118A  2004  160A  118A  	fcall	_putch
  2944     1253  2A98               	goto	l846
  2945     1254                     l2193:
  2946     1254  0872               	movf	fputc@fp,w
  2947     1255  3E09               	addlw	9
  2948     1256  0084               	movwf	4
  2949     1257  1383               	bcf	3,7	;select IRP bank0
  2950     1258  0800               	movf	0,w
  2951     1259  00F3               	movwf	??_fputc
  2952     125A  0A84               	incf	4,f
  2953     125B  0800               	movf	0,w
  2954     125C  00F4               	movwf	??_fputc+1
  2955     125D  0873               	movf	??_fputc,w
  2956     125E  0474               	iorwf	??_fputc+1,w
  2957     125F  1903               	btfsc	3,2
  2958     1260  2A62               	goto	u2241
  2959     1261  2A63               	goto	u2240
  2960     1262                     u2241:
  2961     1262  2A81               	goto	l2197
  2962     1263                     u2240:
  2963     1263                     l2195:
  2964     1263  0872               	movf	fputc@fp,w
  2965     1264  3E09               	addlw	9
  2966     1265  0084               	movwf	4
  2967     1266  0800               	movf	0,w
  2968     1267  00F3               	movwf	??_fputc
  2969     1268  0A84               	incf	4,f
  2970     1269  0800               	movf	0,w
  2971     126A  00F4               	movwf	??_fputc+1
  2972     126B  0872               	movf	fputc@fp,w
  2973     126C  3E02               	addlw	2
  2974     126D  0084               	movwf	4
  2975     126E  0800               	movf	0,w
  2976     126F  00F5               	movwf	??_fputc+2
  2977     1270  0A84               	incf	4,f
  2978     1271  0800               	movf	0,w
  2979     1272  00F6               	movwf	??_fputc+3
  2980     1273  0876               	movf	??_fputc+3,w
  2981     1274  3A80               	xorlw	128
  2982     1275  00F7               	movwf	??_fputc+4
  2983     1276  0874               	movf	??_fputc+1,w
  2984     1277  3A80               	xorlw	128
  2985     1278  0277               	subwf	??_fputc+4,w
  2986     1279  1D03               	skipz
  2987     127A  2A7D               	goto	u2255
  2988     127B  0873               	movf	??_fputc,w
  2989     127C  0275               	subwf	??_fputc+2,w
  2990     127D                     u2255:
  2991     127D  1803               	skipnc
  2992     127E  2A80               	goto	u2251
  2993     127F  2A81               	goto	u2250
  2994     1280                     u2251:
  2995     1280  2A98               	goto	l846
  2996     1281                     u2250:
  2997     1281                     l2197:
  2998     1281  0872               	movf	fputc@fp,w
  2999     1282  3E02               	addlw	2
  3000     1283  0084               	movwf	4
  3001     1284  1383               	bcf	3,7	;select IRP bank0
  3002     1285  0800               	movf	0,w
  3003     1286  00F3               	movwf	??_fputc
  3004     1287  0872               	movf	fputc@fp,w
  3005     1288  0084               	movwf	4
  3006     1289  0800               	movf	0,w
  3007     128A  0773               	addwf	??_fputc,w
  3008     128B  00F4               	movwf	??_fputc+1
  3009     128C  0874               	movf	??_fputc+1,w
  3010     128D  0084               	movwf	4
  3011     128E  0870               	movf	fputc@c,w
  3012     128F  0080               	movwf	0
  3013     1290  0872               	movf	fputc@fp,w
  3014     1291  3E02               	addlw	2
  3015     1292  0084               	movwf	4
  3016     1293  3001               	movlw	1
  3017     1294  0780               	addwf	0,f
  3018     1295  0A84               	incf	4,f
  3019     1296  1803               	skipnc
  3020     1297  0A80               	incf	0,f
  3021     1298                     l846:
  3022     1298  0008               	return
  3023     1299                     __end_of_fputc:
  3024                           
  3025                           	psect	text11
  3026     0004                     __ptext11:	
  3027 ;; *************** function _putch *****************
  3028 ;; Defined at:
  3029 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  3030 ;; Parameters:    Size  Location     Type
  3031 ;;  c               1    wreg     unsigned char 
  3032 ;; Auto vars:     Size  Location     Type
  3033 ;;  c               1    0[COMMON] unsigned char 
  3034 ;; Return value:  Size  Location     Type
  3035 ;;                  1    wreg      void 
  3036 ;; Registers used:
  3037 ;;		wreg
  3038 ;; Tracked objects:
  3039 ;;		On entry : 0/0
  3040 ;;		On exit  : 0/0
  3041 ;;		Unchanged: 0/0
  3042 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3043 ;;      Params:         0       0       0       0       0
  3044 ;;      Locals:         0       0       0       0       0
  3045 ;;      Temps:          0       0       0       0       0
  3046 ;;      Totals:         0       0       0       0       0
  3047 ;;Total ram usage:        0 bytes
  3048 ;; Hardware stack levels used: 1
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_fputc
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056     0004                     _putch:	
  3057                           ;psect for function _putch
  3058                           
  3059     0004                     l857:	
  3060                           ;incstack = 0
  3061                           ; Regs used in _putch: [wreg]
  3062                           
  3063     0004  0008               	return
  3064     0005                     __end_of_putch:
  3065                           
  3066                           	psect	text12
  3067     10BD                     __ptext12:	
  3068 ;; *************** function _memcpy *****************
  3069 ;; Defined at:
  3070 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  3071 ;; Parameters:    Size  Location     Type
  3072 ;;  d1              1    wreg     PTR void 
  3073 ;;		 -> dbuf(80), 
  3074 ;;  s1              1    0[COMMON] PTR const void 
  3075 ;;		 -> dbuf(80), 
  3076 ;;  n               2    1[COMMON] unsigned int 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  d1              1    4[COMMON] PTR void 
  3079 ;;		 -> dbuf(80), 
  3080 ;;  s               1    6[COMMON] PTR const unsigned char 
  3081 ;;		 -> dbuf(80), 
  3082 ;;  d               1    5[COMMON] PTR unsigned char 
  3083 ;;		 -> dbuf(80), 
  3084 ;;  tmp             1    3[COMMON] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      PTR void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3094 ;;      Params:         3       0       0       0       0
  3095 ;;      Locals:         4       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0
  3097 ;;      Totals:         7       0       0       0       0
  3098 ;;Total ram usage:        7 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; This function calls:
  3101 ;;		Nothing
  3102 ;; This function is called by:
  3103 ;;		_efgtoa
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107     10BD                     _memcpy:	
  3108                           ;psect for function _memcpy
  3109                           
  3110                           
  3111                           ;incstack = 0
  3112                           ; Regs used in _memcpy: [wreg-fsr0h+status,2+status,0+btemp+1]
  3113                           ;memcpy@d1 stored from wreg
  3114     10BD  00F4               	movwf	memcpy@d1
  3115     10BE                     l2887:
  3116     10BE  0870               	movf	memcpy@s1,w
  3117     10BF  00F6               	movwf	memcpy@s
  3118     10C0  0874               	movf	memcpy@d1,w
  3119     10C1  00F5               	movwf	memcpy@d
  3120     10C2  28D4               	goto	l2895
  3121     10C3                     l2889:
  3122     10C3  0876               	movf	memcpy@s,w
  3123     10C4  0084               	movwf	4
  3124     10C5  1783               	bsf	3,7	;select IRP bank2
  3125     10C6  0800               	movf	0,w
  3126     10C7  00F3               	movwf	memcpy@tmp
  3127     10C8                     l2891:
  3128     10C8  3001               	movlw	1
  3129     10C9  00FF               	movwf	btemp+1
  3130     10CA  087F               	movf	btemp+1,w
  3131     10CB  07F6               	addwf	memcpy@s,f
  3132     10CC                     l2893:
  3133     10CC  0875               	movf	memcpy@d,w
  3134     10CD  0084               	movwf	4
  3135     10CE  0873               	movf	memcpy@tmp,w
  3136     10CF  0080               	movwf	0
  3137     10D0  3001               	movlw	1
  3138     10D1  00FF               	movwf	btemp+1
  3139     10D2  087F               	movf	btemp+1,w
  3140     10D3  07F5               	addwf	memcpy@d,f
  3141     10D4                     l2895:
  3142     10D4  3001               	movlw	1
  3143     10D5  02F1               	subwf	memcpy@n,f
  3144     10D6  3000               	movlw	0
  3145     10D7  1C03               	skipc
  3146     10D8  03F2               	decf	memcpy@n+1,f
  3147     10D9  02F2               	subwf	memcpy@n+1,f
  3148     10DA  0A71               	incf	memcpy@n,w
  3149     10DB  1D03               	skipz
  3150     10DC  28E1               	goto	u3921
  3151     10DD  0A72               	incf	memcpy@n+1,w
  3152     10DE  1D03               	btfss	3,2
  3153     10DF  28E1               	goto	u3921
  3154     10E0  28E2               	goto	u3920
  3155     10E1                     u3921:
  3156     10E1  28C3               	goto	l2889
  3157     10E2                     u3920:
  3158     10E2                     l834:
  3159     10E2  0008               	return
  3160     10E3                     __end_of_memcpy:
  3161                           
  3162                           	psect	text13
  3163     1F9B                     __ptext13:	
  3164 ;; *************** function _labs *****************
  3165 ;; Defined at:
  3166 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  3167 ;; Parameters:    Size  Location     Type
  3168 ;;  a               4    0[COMMON] long 
  3169 ;; Auto vars:     Size  Location     Type
  3170 ;;		None
  3171 ;; Return value:  Size  Location     Type
  3172 ;;                  4    0[COMMON] long 
  3173 ;; Registers used:
  3174 ;;		wreg, status,2, status,0
  3175 ;; Tracked objects:
  3176 ;;		On entry : 0/0
  3177 ;;		On exit  : 0/0
  3178 ;;		Unchanged: 0/0
  3179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3180 ;;      Params:         4       0       0       0       0
  3181 ;;      Locals:         0       0       0       0       0
  3182 ;;      Temps:          0       0       0       0       0
  3183 ;;      Totals:         4       0       0       0       0
  3184 ;;Total ram usage:        4 bytes
  3185 ;; Hardware stack levels used: 1
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_efgtoa
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193     1F9B                     _labs:	
  3194                           ;psect for function _labs
  3195                           
  3196     1F9B                     l2849:	
  3197                           ;incstack = 0
  3198                           ; Regs used in _labs: [wreg+status,2+status,0]
  3199                           
  3200     1F9B  1BF3               	btfsc	labs@a+3,7
  3201     1F9C  2F9E               	goto	u3791
  3202     1F9D  2F9F               	goto	u3790
  3203     1F9E                     u3791:
  3204     1F9E  2FA0               	goto	l2853
  3205     1F9F                     u3790:
  3206     1F9F                     l2851:
  3207     1F9F  2FAF               	goto	l828
  3208     1FA0                     l2853:
  3209     1FA0  0970               	comf	labs@a,w
  3210     1FA1  00F0               	movwf	?_labs
  3211     1FA2  0971               	comf	labs@a+1,w
  3212     1FA3  00F1               	movwf	?_labs+1
  3213     1FA4  0972               	comf	labs@a+2,w
  3214     1FA5  00F2               	movwf	?_labs+2
  3215     1FA6  0973               	comf	labs@a+3,w
  3216     1FA7  00F3               	movwf	?_labs+3
  3217     1FA8  0AF0               	incf	?_labs,f
  3218     1FA9  1903               	skipnz
  3219     1FAA  0AF1               	incf	?_labs+1,f
  3220     1FAB  1903               	skipnz
  3221     1FAC  0AF2               	incf	?_labs+2,f
  3222     1FAD  1903               	skipnz
  3223     1FAE  0AF3               	incf	?_labs+3,f
  3224     1FAF                     l828:
  3225     1FAF  0008               	return
  3226     1FB0                     __end_of_labs:
  3227                           
  3228                           	psect	text14
  3229     1367                     __ptext14:	
  3230 ;; *************** function _floorf *****************
  3231 ;; Defined at:
  3232 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  3233 ;; Parameters:    Size  Location     Type
  3234 ;;  x               4   13[BANK0 ] float 
  3235 ;; Auto vars:     Size  Location     Type
  3236 ;;  u               4   29[BANK0 ] struct .
  3237 ;;  m               4   23[BANK0 ] unsigned long 
  3238 ;;  e               2   27[BANK0 ] int 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  4   13[BANK0 ] float 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0, btemp+1
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3248 ;;      Params:         0       4       0       0       0
  3249 ;;      Locals:         0      10       0       0       0
  3250 ;;      Temps:          0       6       0       0       0
  3251 ;;      Totals:         0      20       0       0       0
  3252 ;;Total ram usage:       20 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_efgtoa
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261     1367                     _floorf:	
  3262                           ;psect for function _floorf
  3263                           
  3264     1367                     l2857:	
  3265                           ;incstack = 0
  3266                           ; Regs used in _floorf: [wreg+status,2+status,0+btemp+1]
  3267                           
  3268     1367  1683               	bsf	3,5	;RP0=1, select bank1
  3269     1368  1303               	bcf	3,6	;RP1=0, select bank1
  3270     1369  0867               	movf	(floorf@F521+3)^(0+128),w
  3271     136A  1283               	bcf	3,5	;RP0=0, select bank0
  3272     136B  1303               	bcf	3,6	;RP1=0, select bank0
  3273     136C  00C0               	movwf	floorf@u+3
  3274     136D  1683               	bsf	3,5	;RP0=1, select bank1
  3275     136E  1303               	bcf	3,6	;RP1=0, select bank1
  3276     136F  0866               	movf	(floorf@F521+2)^(0+128),w
  3277     1370  1283               	bcf	3,5	;RP0=0, select bank0
  3278     1371  1303               	bcf	3,6	;RP1=0, select bank0
  3279     1372  00BF               	movwf	floorf@u+2
  3280     1373  1683               	bsf	3,5	;RP0=1, select bank1
  3281     1374  1303               	bcf	3,6	;RP1=0, select bank1
  3282     1375  0865               	movf	(floorf@F521+1)^(0+128),w
  3283     1376  1283               	bcf	3,5	;RP0=0, select bank0
  3284     1377  1303               	bcf	3,6	;RP1=0, select bank0
  3285     1378  00BE               	movwf	floorf@u+1
  3286     1379  1683               	bsf	3,5	;RP0=1, select bank1
  3287     137A  1303               	bcf	3,6	;RP1=0, select bank1
  3288     137B  0864               	movf	floorf@F521^(0+128),w
  3289     137C  1283               	bcf	3,5	;RP0=0, select bank0
  3290     137D  1303               	bcf	3,6	;RP1=0, select bank0
  3291     137E  00BD               	movwf	floorf@u
  3292     137F  0830               	movf	floorf@x+3,w
  3293     1380  00C0               	movwf	floorf@u+3
  3294     1381  082F               	movf	floorf@x+2,w
  3295     1382  00BF               	movwf	floorf@u+2
  3296     1383  082E               	movf	floorf@x+1,w
  3297     1384  00BE               	movwf	floorf@u+1
  3298     1385  082D               	movf	floorf@x,w
  3299     1386  00BD               	movwf	floorf@u
  3300     1387                     l2859:
  3301     1387  083D               	movf	floorf@u,w
  3302     1388  00B1               	movwf	??_floorf
  3303     1389  083E               	movf	floorf@u+1,w
  3304     138A  00B2               	movwf	??_floorf+1
  3305     138B  083F               	movf	floorf@u+2,w
  3306     138C  00B3               	movwf	??_floorf+2
  3307     138D  0840               	movf	floorf@u+3,w
  3308     138E  00B4               	movwf	??_floorf+3
  3309     138F  3017               	movlw	23
  3310     1390                     u3805:
  3311     1390  1003               	clrc
  3312     1391  0CB4               	rrf	??_floorf+3,f
  3313     1392  0CB3               	rrf	??_floorf+2,f
  3314     1393  0CB2               	rrf	??_floorf+1,f
  3315     1394  0CB1               	rrf	??_floorf,f
  3316     1395                     u3800:
  3317     1395  3EFF               	addlw	-1
  3318     1396  1D03               	skipz
  3319     1397  2B90               	goto	u3805
  3320     1398  30FF               	movlw	255
  3321     1399  0531               	andwf	??_floorf,w
  3322     139A  00B5               	movwf	??_floorf+4
  3323     139B  3000               	movlw	0
  3324     139C  0532               	andwf	??_floorf+1,w
  3325     139D  00B6               	movwf	??_floorf+5
  3326     139E  0835               	movf	??_floorf+4,w
  3327     139F  3E81               	addlw	129
  3328     13A0  00BB               	movwf	floorf@e
  3329     13A1  0836               	movf	??_floorf+5,w
  3330     13A2  1803               	skipnc
  3331     13A3  3E01               	addlw	1
  3332     13A4  3EFF               	addlw	255
  3333     13A5  00BC               	movwf	floorf@e+1
  3334     13A6                     l2861:
  3335     13A6  083C               	movf	floorf@e+1,w
  3336     13A7  3A80               	xorlw	128
  3337     13A8  00FF               	movwf	btemp+1
  3338     13A9  3080               	movlw	128
  3339     13AA  027F               	subwf	btemp+1,w
  3340     13AB  1D03               	skipz
  3341     13AC  2BAF               	goto	u3815
  3342     13AD  3017               	movlw	23
  3343     13AE  023B               	subwf	floorf@e,w
  3344     13AF                     u3815:
  3345     13AF  1C03               	skipc
  3346     13B0  2BB2               	goto	u3811
  3347     13B1  2BB3               	goto	u3810
  3348     13B2                     u3811:
  3349     13B2  2BB4               	goto	l813
  3350     13B3                     u3810:
  3351     13B3                     l2863:
  3352     13B3  2C75               	goto	l814
  3353     13B4                     l813:
  3354     13B4  1283               	bcf	3,5	;RP0=0, select bank0
  3355     13B5  1303               	bcf	3,6	;RP1=0, select bank0
  3356     13B6  1BBC               	btfsc	floorf@e+1,7
  3357     13B7  2BB9               	goto	u3821
  3358     13B8  2BBA               	goto	u3820
  3359     13B9                     u3821:
  3360     13B9  2C2A               	goto	l2877
  3361     13BA                     u3820:
  3362     13BA                     l2865:
  3363     13BA  0A3B               	incf	floorf@e,w
  3364     13BB  00FF               	movwf	btemp+1
  3365     13BC  30FF               	movlw	255
  3366     13BD  00B1               	movwf	??_floorf
  3367     13BE  30FF               	movlw	255
  3368     13BF  00B2               	movwf	??_floorf+1
  3369     13C0  307F               	movlw	127
  3370     13C1  00B3               	movwf	??_floorf+2
  3371     13C2  3000               	movlw	0
  3372     13C3  00B4               	movwf	??_floorf+3
  3373     13C4  2BCA               	goto	u3830
  3374     13C5                     u3835:
  3375     13C5  0D34               	rlf	??_floorf+3,w
  3376     13C6  0CB4               	rrf	??_floorf+3,f
  3377     13C7  0CB3               	rrf	??_floorf+2,f
  3378     13C8  0CB2               	rrf	??_floorf+1,f
  3379     13C9  0CB1               	rrf	??_floorf,f
  3380     13CA                     u3830:
  3381     13CA  0BFF               	decfsz	btemp+1,f
  3382     13CB  2BC5               	goto	u3835
  3383     13CC  0834               	movf	??_floorf+3,w
  3384     13CD  00BA               	movwf	floorf@m+3
  3385     13CE  0833               	movf	??_floorf+2,w
  3386     13CF  00B9               	movwf	floorf@m+2
  3387     13D0  0832               	movf	??_floorf+1,w
  3388     13D1  00B8               	movwf	floorf@m+1
  3389     13D2  0831               	movf	??_floorf,w
  3390     13D3  00B7               	movwf	floorf@m
  3391     13D4                     l2867:
  3392     13D4  0837               	movf	floorf@m,w
  3393     13D5  053D               	andwf	floorf@u,w
  3394     13D6  00B1               	movwf	??_floorf
  3395     13D7  0838               	movf	floorf@m+1,w
  3396     13D8  053E               	andwf	floorf@u+1,w
  3397     13D9  00B2               	movwf	??_floorf+1
  3398     13DA  0839               	movf	floorf@m+2,w
  3399     13DB  053F               	andwf	floorf@u+2,w
  3400     13DC  00B3               	movwf	??_floorf+2
  3401     13DD  083A               	movf	floorf@m+3,w
  3402     13DE  0540               	andwf	floorf@u+3,w
  3403     13DF  00B4               	movwf	??_floorf+3
  3404     13E0  0834               	movf	??_floorf+3,w
  3405     13E1  0433               	iorwf	??_floorf+2,w
  3406     13E2  0432               	iorwf	??_floorf+1,w
  3407     13E3  0431               	iorwf	??_floorf,w
  3408     13E4  1D03               	skipz
  3409     13E5  2BE7               	goto	u3841
  3410     13E6  2BE8               	goto	u3840
  3411     13E7                     u3841:
  3412     13E7  2BE9               	goto	l2871
  3413     13E8                     u3840:
  3414     13E8  2BB3               	goto	l2863
  3415     13E9                     l2871:
  3416     13E9  083D               	movf	floorf@u,w
  3417     13EA  00B1               	movwf	??_floorf
  3418     13EB  083E               	movf	floorf@u+1,w
  3419     13EC  00B2               	movwf	??_floorf+1
  3420     13ED  083F               	movf	floorf@u+2,w
  3421     13EE  00B3               	movwf	??_floorf+2
  3422     13EF  0840               	movf	floorf@u+3,w
  3423     13F0  00B4               	movwf	??_floorf+3
  3424     13F1  301F               	movlw	31
  3425     13F2                     u3855:
  3426     13F2  1003               	clrc
  3427     13F3  0CB4               	rrf	??_floorf+3,f
  3428     13F4  0CB3               	rrf	??_floorf+2,f
  3429     13F5  0CB2               	rrf	??_floorf+1,f
  3430     13F6  0CB1               	rrf	??_floorf,f
  3431     13F7                     u3850:
  3432     13F7  3EFF               	addlw	-1
  3433     13F8  1D03               	skipz
  3434     13F9  2BF2               	goto	u3855
  3435     13FA  0834               	movf	??_floorf+3,w
  3436     13FB  0433               	iorwf	??_floorf+2,w
  3437     13FC  0432               	iorwf	??_floorf+1,w
  3438     13FD  0431               	iorwf	??_floorf,w
  3439     13FE  1903               	skipnz
  3440     13FF  2C01               	goto	u3861
  3441     1400  2C02               	goto	u3860
  3442     1401                     u3861:
  3443     1401  2C19               	goto	l2875
  3444     1402                     u3860:
  3445     1402                     l2873:
  3446     1402  0837               	movf	floorf@m,w
  3447     1403  07BD               	addwf	floorf@u,f
  3448     1404  0838               	movf	floorf@m+1,w
  3449     1405  1103               	clrz
  3450     1406  1803               	skipnc
  3451     1407  3E01               	addlw	1
  3452     1408  1903               	skipnz
  3453     1409  2C0B               	goto	u3871
  3454     140A  07BE               	addwf	floorf@u+1,f
  3455     140B                     u3871:
  3456     140B  0839               	movf	floorf@m+2,w
  3457     140C  1103               	clrz
  3458     140D  1803               	skipnc
  3459     140E  3E01               	addlw	1
  3460     140F  1903               	skipnz
  3461     1410  2C12               	goto	u3872
  3462     1411  07BF               	addwf	floorf@u+2,f
  3463     1412                     u3872:
  3464     1412  083A               	movf	floorf@m+3,w
  3465     1413  1103               	clrz
  3466     1414  1803               	skipnc
  3467     1415  3E01               	addlw	1
  3468     1416  1903               	skipnz
  3469     1417  2C19               	goto	u3873
  3470     1418  07C0               	addwf	floorf@u+3,f
  3471     1419                     u3873:
  3472     1419                     l2875:
  3473     1419  0937               	comf	floorf@m,w
  3474     141A  00B1               	movwf	??_floorf
  3475     141B  0938               	comf	floorf@m+1,w
  3476     141C  00B2               	movwf	??_floorf+1
  3477     141D  0939               	comf	floorf@m+2,w
  3478     141E  00B3               	movwf	??_floorf+2
  3479     141F  093A               	comf	floorf@m+3,w
  3480     1420  00B4               	movwf	??_floorf+3
  3481     1421  0831               	movf	??_floorf,w
  3482     1422  05BD               	andwf	floorf@u,f
  3483     1423  0832               	movf	??_floorf+1,w
  3484     1424  05BE               	andwf	floorf@u+1,f
  3485     1425  0833               	movf	??_floorf+2,w
  3486     1426  05BF               	andwf	floorf@u+2,f
  3487     1427  0834               	movf	??_floorf+3,w
  3488     1428  05C0               	andwf	floorf@u+3,f
  3489     1429  2C6D               	goto	l818
  3490     142A                     l2877:
  3491     142A  083D               	movf	floorf@u,w
  3492     142B  00B1               	movwf	??_floorf
  3493     142C  083E               	movf	floorf@u+1,w
  3494     142D  00B2               	movwf	??_floorf+1
  3495     142E  083F               	movf	floorf@u+2,w
  3496     142F  00B3               	movwf	??_floorf+2
  3497     1430  0840               	movf	floorf@u+3,w
  3498     1431  00B4               	movwf	??_floorf+3
  3499     1432  301F               	movlw	31
  3500     1433                     u3885:
  3501     1433  1003               	clrc
  3502     1434  0CB4               	rrf	??_floorf+3,f
  3503     1435  0CB3               	rrf	??_floorf+2,f
  3504     1436  0CB2               	rrf	??_floorf+1,f
  3505     1437  0CB1               	rrf	??_floorf,f
  3506     1438                     u3880:
  3507     1438  3EFF               	addlw	-1
  3508     1439  1D03               	skipz
  3509     143A  2C33               	goto	u3885
  3510     143B  0834               	movf	??_floorf+3,w
  3511     143C  0433               	iorwf	??_floorf+2,w
  3512     143D  0432               	iorwf	??_floorf+1,w
  3513     143E  0431               	iorwf	??_floorf,w
  3514     143F  1D03               	skipz
  3515     1440  2C42               	goto	u3891
  3516     1441  2C43               	goto	u3890
  3517     1442                     u3891:
  3518     1442  2C4C               	goto	l2881
  3519     1443                     u3890:
  3520     1443                     l2879:
  3521     1443  3000               	movlw	0
  3522     1444  00C0               	movwf	floorf@u+3
  3523     1445  3000               	movlw	0
  3524     1446  00BF               	movwf	floorf@u+2
  3525     1447  3000               	movlw	0
  3526     1448  00BE               	movwf	floorf@u+1
  3527     1449  3000               	movlw	0
  3528     144A  00BD               	movwf	floorf@u
  3529     144B  2C6D               	goto	l818
  3530     144C                     l2881:
  3531     144C  083D               	movf	floorf@u,w
  3532     144D  00B1               	movwf	??_floorf
  3533     144E  083E               	movf	floorf@u+1,w
  3534     144F  00B2               	movwf	??_floorf+1
  3535     1450  083F               	movf	floorf@u+2,w
  3536     1451  00B3               	movwf	??_floorf+2
  3537     1452  0840               	movf	floorf@u+3,w
  3538     1453  00B4               	movwf	??_floorf+3
  3539     1454  3001               	movlw	1
  3540     1455                     u3905:
  3541     1455  1003               	clrc
  3542     1456  0DB1               	rlf	??_floorf,f
  3543     1457  0DB2               	rlf	??_floorf+1,f
  3544     1458  0DB3               	rlf	??_floorf+2,f
  3545     1459  0DB4               	rlf	??_floorf+3,f
  3546     145A                     u3900:
  3547     145A  3EFF               	addlw	-1
  3548     145B  1D03               	skipz
  3549     145C  2C55               	goto	u3905
  3550     145D  0834               	movf	??_floorf+3,w
  3551     145E  0433               	iorwf	??_floorf+2,w
  3552     145F  0432               	iorwf	??_floorf+1,w
  3553     1460  0431               	iorwf	??_floorf,w
  3554     1461  1903               	skipnz
  3555     1462  2C64               	goto	u3911
  3556     1463  2C65               	goto	u3910
  3557     1464                     u3911:
  3558     1464  2C6D               	goto	l818
  3559     1465                     u3910:
  3560     1465                     l2883:
  3561     1465  30BF               	movlw	191
  3562     1466  00C0               	movwf	floorf@u+3
  3563     1467  3080               	movlw	128
  3564     1468  00BF               	movwf	floorf@u+2
  3565     1469  3000               	movlw	0
  3566     146A  00BE               	movwf	floorf@u+1
  3567     146B  3000               	movlw	0
  3568     146C  00BD               	movwf	floorf@u
  3569     146D                     l818:
  3570     146D  0840               	movf	floorf@u+3,w
  3571     146E  00B0               	movwf	?_floorf+3
  3572     146F  083F               	movf	floorf@u+2,w
  3573     1470  00AF               	movwf	?_floorf+2
  3574     1471  083E               	movf	floorf@u+1,w
  3575     1472  00AE               	movwf	?_floorf+1
  3576     1473  083D               	movf	floorf@u,w
  3577     1474  00AD               	movwf	?_floorf
  3578     1475                     l814:
  3579     1475  0008               	return
  3580     1476                     __end_of_floorf:
  3581                           
  3582                           	psect	text15
  3583     0803                     __ptext15:	
  3584 ;; *************** function ___fpclassifyf *****************
  3585 ;; Defined at:
  3586 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  3587 ;; Parameters:    Size  Location     Type
  3588 ;;  x               4    0[COMMON] float 
  3589 ;; Auto vars:     Size  Location     Type
  3590 ;;  u               4    2[BANK0 ] struct .
  3591 ;;  e               2    0[BANK0 ] int 
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  2    0[COMMON] int 
  3594 ;; Registers used:
  3595 ;;		wreg, status,2, status,0
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3601 ;;      Params:         4       0       0       0       0
  3602 ;;      Locals:         0       6       0       0       0
  3603 ;;      Temps:          6       0       0       0       0
  3604 ;;      Totals:        10       6       0       0       0
  3605 ;;Total ram usage:       16 bytes
  3606 ;; Hardware stack levels used: 1
  3607 ;; This function calls:
  3608 ;;		Nothing
  3609 ;; This function is called by:
  3610 ;;		_efgtoa
  3611 ;; This function uses a non-reentrant model
  3612 ;;
  3613                           
  3614     0803                     ___fpclassifyf:	
  3615                           ;psect for function ___fpclassifyf
  3616                           
  3617     0803                     l2821:	
  3618                           ;incstack = 0
  3619                           ; Regs used in ___fpclassifyf: [wreg+status,2+status,0]
  3620                           
  3621     0803  1283               	bcf	3,5	;RP0=0, select bank0
  3622     0804  1303               	bcf	3,6	;RP1=0, select bank0
  3623     0805  0868               	movf	___fpclassifyf@F465+3,w
  3624     0806  00A5               	movwf	___fpclassifyf@u+3
  3625     0807  0867               	movf	___fpclassifyf@F465+2,w
  3626     0808  00A4               	movwf	___fpclassifyf@u+2
  3627     0809  0866               	movf	___fpclassifyf@F465+1,w
  3628     080A  00A3               	movwf	___fpclassifyf@u+1
  3629     080B  0865               	movf	___fpclassifyf@F465,w
  3630     080C  00A2               	movwf	___fpclassifyf@u
  3631     080D  0873               	movf	___fpclassifyf@x+3,w
  3632     080E  00A5               	movwf	___fpclassifyf@u+3
  3633     080F  0872               	movf	___fpclassifyf@x+2,w
  3634     0810  00A4               	movwf	___fpclassifyf@u+2
  3635     0811  0871               	movf	___fpclassifyf@x+1,w
  3636     0812  00A3               	movwf	___fpclassifyf@u+1
  3637     0813  0870               	movf	___fpclassifyf@x,w
  3638     0814  00A2               	movwf	___fpclassifyf@u
  3639     0815                     l2823:
  3640     0815  0822               	movf	___fpclassifyf@u,w
  3641     0816  00F4               	movwf	??___fpclassifyf
  3642     0817  0823               	movf	___fpclassifyf@u+1,w
  3643     0818  00F5               	movwf	??___fpclassifyf+1
  3644     0819  0824               	movf	___fpclassifyf@u+2,w
  3645     081A  00F6               	movwf	??___fpclassifyf+2
  3646     081B  0825               	movf	___fpclassifyf@u+3,w
  3647     081C  00F7               	movwf	??___fpclassifyf+3
  3648     081D  3017               	movlw	23
  3649     081E                     u3705:
  3650     081E  1003               	clrc
  3651     081F  0CF7               	rrf	??___fpclassifyf+3,f
  3652     0820  0CF6               	rrf	??___fpclassifyf+2,f
  3653     0821  0CF5               	rrf	??___fpclassifyf+1,f
  3654     0822  0CF4               	rrf	??___fpclassifyf,f
  3655     0823                     u3700:
  3656     0823  3EFF               	addlw	-1
  3657     0824  1D03               	skipz
  3658     0825  281E               	goto	u3705
  3659     0826  30FF               	movlw	255
  3660     0827  0574               	andwf	??___fpclassifyf,w
  3661     0828  00A0               	movwf	___fpclassifyf@e
  3662     0829  3000               	movlw	0
  3663     082A  0575               	andwf	??___fpclassifyf+1,w
  3664     082B  00A1               	movwf	___fpclassifyf@e+1
  3665     082C                     l2825:
  3666     082C  0820               	movf	___fpclassifyf@e,w
  3667     082D  0421               	iorwf	___fpclassifyf@e+1,w
  3668     082E  1D03               	btfss	3,2
  3669     082F  2831               	goto	u3711
  3670     0830  2832               	goto	u3710
  3671     0831                     u3711:
  3672     0831  2855               	goto	l2835
  3673     0832                     u3710:
  3674     0832                     l2827:
  3675     0832  0822               	movf	___fpclassifyf@u,w
  3676     0833  00F4               	movwf	??___fpclassifyf
  3677     0834  0823               	movf	___fpclassifyf@u+1,w
  3678     0835  00F5               	movwf	??___fpclassifyf+1
  3679     0836  0824               	movf	___fpclassifyf@u+2,w
  3680     0837  00F6               	movwf	??___fpclassifyf+2
  3681     0838  0825               	movf	___fpclassifyf@u+3,w
  3682     0839  00F7               	movwf	??___fpclassifyf+3
  3683     083A  3001               	movlw	1
  3684     083B                     u3725:
  3685     083B  1003               	clrc
  3686     083C  0DF4               	rlf	??___fpclassifyf,f
  3687     083D  0DF5               	rlf	??___fpclassifyf+1,f
  3688     083E  0DF6               	rlf	??___fpclassifyf+2,f
  3689     083F  0DF7               	rlf	??___fpclassifyf+3,f
  3690     0840                     u3720:
  3691     0840  3EFF               	addlw	-1
  3692     0841  1D03               	skipz
  3693     0842  283B               	goto	u3725
  3694     0843  0877               	movf	??___fpclassifyf+3,w
  3695     0844  0476               	iorwf	??___fpclassifyf+2,w
  3696     0845  0475               	iorwf	??___fpclassifyf+1,w
  3697     0846  0474               	iorwf	??___fpclassifyf,w
  3698     0847  1D03               	skipz
  3699     0848  284A               	goto	u3731
  3700     0849  284B               	goto	u3730
  3701     084A                     u3731:
  3702     084A  2850               	goto	l2831
  3703     084B                     u3730:
  3704     084B                     l2829:
  3705     084B  3002               	movlw	2
  3706     084C  00F0               	movwf	?___fpclassifyf
  3707     084D  3000               	movlw	0
  3708     084E  00F1               	movwf	?___fpclassifyf+1
  3709     084F  2881               	goto	l807
  3710     0850                     l2831:
  3711     0850  3003               	movlw	3
  3712     0851  00F0               	movwf	?___fpclassifyf
  3713     0852  3000               	movlw	0
  3714     0853  00F1               	movwf	?___fpclassifyf+1
  3715     0854  2881               	goto	l807
  3716     0855                     l2835:
  3717     0855  0A20               	incf	___fpclassifyf@e,w
  3718     0856  0421               	iorwf	___fpclassifyf@e+1,w
  3719     0857  1D03               	btfss	3,2
  3720     0858  285A               	goto	u3741
  3721     0859  285B               	goto	u3740
  3722     085A                     u3741:
  3723     085A  287D               	goto	l2841
  3724     085B                     u3740:
  3725     085B                     l2837:
  3726     085B  0822               	movf	___fpclassifyf@u,w
  3727     085C  00F4               	movwf	??___fpclassifyf
  3728     085D  0823               	movf	___fpclassifyf@u+1,w
  3729     085E  00F5               	movwf	??___fpclassifyf+1
  3730     085F  0824               	movf	___fpclassifyf@u+2,w
  3731     0860  00F6               	movwf	??___fpclassifyf+2
  3732     0861  0825               	movf	___fpclassifyf@u+3,w
  3733     0862  00F7               	movwf	??___fpclassifyf+3
  3734     0863  3009               	movlw	9
  3735     0864                     u3755:
  3736     0864  1003               	clrc
  3737     0865  0DF4               	rlf	??___fpclassifyf,f
  3738     0866  0DF5               	rlf	??___fpclassifyf+1,f
  3739     0867  0DF6               	rlf	??___fpclassifyf+2,f
  3740     0868  0DF7               	rlf	??___fpclassifyf+3,f
  3741     0869                     u3750:
  3742     0869  3EFF               	addlw	-1
  3743     086A  1D03               	skipz
  3744     086B  2864               	goto	u3755
  3745     086C  0877               	movf	??___fpclassifyf+3,w
  3746     086D  0476               	iorwf	??___fpclassifyf+2,w
  3747     086E  0475               	iorwf	??___fpclassifyf+1,w
  3748     086F  0474               	iorwf	??___fpclassifyf,w
  3749     0870  1903               	skipnz
  3750     0871  2873               	goto	u3761
  3751     0872  2875               	goto	u3760
  3752     0873                     u3761:
  3753     0873  3001               	movlw	1
  3754     0874  2876               	goto	u3770
  3755     0875                     u3760:
  3756     0875  3000               	movlw	0
  3757     0876                     u3770:
  3758     0876  00F8               	movwf	??___fpclassifyf+4
  3759     0877  01F9               	clrf	??___fpclassifyf+5
  3760     0878  0878               	movf	??___fpclassifyf+4,w
  3761     0879  00F0               	movwf	?___fpclassifyf
  3762     087A  0879               	movf	??___fpclassifyf+5,w
  3763     087B  00F1               	movwf	?___fpclassifyf+1
  3764     087C  2881               	goto	l807
  3765     087D                     l2841:
  3766     087D  3004               	movlw	4
  3767     087E  00F0               	movwf	?___fpclassifyf
  3768     087F  3000               	movlw	0
  3769     0880  00F1               	movwf	?___fpclassifyf+1
  3770     0881                     l807:
  3771     0881  0008               	return
  3772     0882                     __end_of___fpclassifyf:
  3773                           
  3774                           	psect	text16
  3775     12F1                     __ptext16:	
  3776 ;; *************** function ___fltol *****************
  3777 ;; Defined at:
  3778 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  f1              4    0[COMMON] int 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  exp1            1    9[COMMON] unsigned char 
  3783 ;;  sign1           1    8[COMMON] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  4    0[COMMON] long 
  3786 ;; Registers used:
  3787 ;;		wreg, status,2, status,0, btemp+1
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3793 ;;      Params:         4       0       0       0       0
  3794 ;;      Locals:         2       0       0       0       0
  3795 ;;      Temps:          4       0       0       0       0
  3796 ;;      Totals:        10       0       0       0       0
  3797 ;;Total ram usage:       10 bytes
  3798 ;; Hardware stack levels used: 1
  3799 ;; This function calls:
  3800 ;;		Nothing
  3801 ;; This function is called by:
  3802 ;;		_efgtoa
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806     12F1                     ___fltol:	
  3807                           ;psect for function ___fltol
  3808                           
  3809     12F1                     l2477:	
  3810                           ;incstack = 0
  3811                           ; Regs used in ___fltol: [wreg+status,2+status,0+btemp+1]
  3812                           
  3813     12F1  1003               	clrc
  3814     12F2  0D72               	rlf	___fltol@f1+2,w
  3815     12F3  0D73               	rlf	___fltol@f1+3,w
  3816     12F4  00F9               	movwf	___fltol@exp1
  3817     12F5  0879               	movf	___fltol@exp1,w
  3818     12F6  1D03               	btfss	3,2
  3819     12F7  2AF9               	goto	u2911
  3820     12F8  2AFA               	goto	u2910
  3821     12F9                     u2911:
  3822     12F9  2B03               	goto	l2483
  3823     12FA                     u2910:
  3824     12FA                     l2479:
  3825     12FA  3000               	movlw	0
  3826     12FB  00F3               	movwf	?___fltol+3
  3827     12FC  3000               	movlw	0
  3828     12FD  00F2               	movwf	?___fltol+2
  3829     12FE  3000               	movlw	0
  3830     12FF  00F1               	movwf	?___fltol+1
  3831     1300  3000               	movlw	0
  3832     1301  00F0               	movwf	?___fltol
  3833     1302  2B66               	goto	l410
  3834     1303                     l2483:
  3835     1303  0870               	movf	___fltol@f1,w
  3836     1304  00F4               	movwf	??___fltol
  3837     1305  0871               	movf	___fltol@f1+1,w
  3838     1306  00F5               	movwf	??___fltol+1
  3839     1307  0872               	movf	___fltol@f1+2,w
  3840     1308  00F6               	movwf	??___fltol+2
  3841     1309  0873               	movf	___fltol@f1+3,w
  3842     130A  00F7               	movwf	??___fltol+3
  3843     130B  301F               	movlw	31
  3844     130C                     u2925:
  3845     130C  1003               	clrc
  3846     130D  0CF7               	rrf	??___fltol+3,f
  3847     130E  0CF6               	rrf	??___fltol+2,f
  3848     130F  0CF5               	rrf	??___fltol+1,f
  3849     1310  0CF4               	rrf	??___fltol,f
  3850     1311                     u2920:
  3851     1311  3EFF               	addlw	-1
  3852     1312  1D03               	skipz
  3853     1313  2B0C               	goto	u2925
  3854     1314  0874               	movf	??___fltol,w
  3855     1315  00F8               	movwf	___fltol@sign1
  3856     1316                     l2485:
  3857     1316  17F2               	bsf	___fltol@f1+2,7
  3858     1317                     l2487:
  3859     1317  30FF               	movlw	255
  3860     1318  05F0               	andwf	___fltol@f1,f
  3861     1319  30FF               	movlw	255
  3862     131A  05F1               	andwf	___fltol@f1+1,f
  3863     131B  30FF               	movlw	255
  3864     131C  05F2               	andwf	___fltol@f1+2,f
  3865     131D  3000               	movlw	0
  3866     131E  05F3               	andwf	___fltol@f1+3,f
  3867     131F                     l2489:
  3868     131F  3096               	movlw	150
  3869     1320  02F9               	subwf	___fltol@exp1,f
  3870     1321                     l2491:
  3871     1321  1FF9               	btfss	___fltol@exp1,7
  3872     1322  2B24               	goto	u2931
  3873     1323  2B25               	goto	u2930
  3874     1324                     u2931:
  3875     1324  2B3F               	goto	l2503
  3876     1325                     u2930:
  3877     1325                     l2493:
  3878     1325  0879               	movf	___fltol@exp1,w
  3879     1326  3A80               	xorlw	128
  3880     1327  3E97               	addlw	151
  3881     1328  1803               	skipnc
  3882     1329  2B2B               	goto	u2941
  3883     132A  2B2C               	goto	u2940
  3884     132B                     u2941:
  3885     132B  2B2D               	goto	l2499
  3886     132C                     u2940:
  3887     132C  2AFA               	goto	l2479
  3888     132D                     l2499:
  3889     132D  3001               	movlw	1
  3890     132E                     u2955:
  3891     132E  1003               	clrc
  3892     132F  0CF3               	rrf	___fltol@f1+3,f
  3893     1330  0CF2               	rrf	___fltol@f1+2,f
  3894     1331  0CF1               	rrf	___fltol@f1+1,f
  3895     1332  0CF0               	rrf	___fltol@f1,f
  3896     1333  3EFF               	addlw	-1
  3897     1334  1D03               	skipz
  3898     1335  2B2E               	goto	u2955
  3899     1336                     l2501:
  3900     1336  3001               	movlw	1
  3901     1337  00FF               	movwf	btemp+1
  3902     1338  087F               	movf	btemp+1,w
  3903     1339  07F9               	addwf	___fltol@exp1,f
  3904     133A  1D03               	btfss	3,2
  3905     133B  2B3D               	goto	u2961
  3906     133C  2B3E               	goto	u2960
  3907     133D                     u2961:
  3908     133D  2B2D               	goto	l2499
  3909     133E                     u2960:
  3910     133E  2B56               	goto	l2511
  3911     133F                     l2503:
  3912     133F  3020               	movlw	32
  3913     1340  0279               	subwf	___fltol@exp1,w
  3914     1341  1C03               	skipc
  3915     1342  2B44               	goto	u2971
  3916     1343  2B45               	goto	u2970
  3917     1344                     u2971:
  3918     1344  2B51               	goto	l417
  3919     1345                     u2970:
  3920     1345  2AFA               	goto	l2479
  3921     1346                     l2509:
  3922     1346  3001               	movlw	1
  3923     1347  00F4               	movwf	??___fltol
  3924     1348                     u2985:
  3925     1348  1003               	clrc
  3926     1349  0DF0               	rlf	___fltol@f1,f
  3927     134A  0DF1               	rlf	___fltol@f1+1,f
  3928     134B  0DF2               	rlf	___fltol@f1+2,f
  3929     134C  0DF3               	rlf	___fltol@f1+3,f
  3930     134D  0BF4               	decfsz	??___fltol,f
  3931     134E  2B48               	goto	u2985
  3932     134F  3001               	movlw	1
  3933     1350  02F9               	subwf	___fltol@exp1,f
  3934     1351                     l417:
  3935     1351  0879               	movf	___fltol@exp1,w
  3936     1352  1D03               	btfss	3,2
  3937     1353  2B55               	goto	u2991
  3938     1354  2B56               	goto	u2990
  3939     1355                     u2991:
  3940     1355  2B46               	goto	l2509
  3941     1356                     u2990:
  3942     1356                     l2511:
  3943     1356  0878               	movf	___fltol@sign1,w
  3944     1357  1903               	btfsc	3,2
  3945     1358  2B5A               	goto	u3001
  3946     1359  2B5B               	goto	u3000
  3947     135A                     u3001:
  3948     135A  2B66               	goto	l420
  3949     135B                     u3000:
  3950     135B                     l2513:
  3951     135B  09F0               	comf	___fltol@f1,f
  3952     135C  09F1               	comf	___fltol@f1+1,f
  3953     135D  09F2               	comf	___fltol@f1+2,f
  3954     135E  09F3               	comf	___fltol@f1+3,f
  3955     135F  0AF0               	incf	___fltol@f1,f
  3956     1360  1903               	skipnz
  3957     1361  0AF1               	incf	___fltol@f1+1,f
  3958     1362  1903               	skipnz
  3959     1363  0AF2               	incf	___fltol@f1+2,f
  3960     1364  1903               	skipnz
  3961     1365  0AF3               	incf	___fltol@f1+3,f
  3962     1366                     l420:
  3963     1366                     l410:
  3964     1366  0008               	return
  3965     1367                     __end_of___fltol:
  3966                           
  3967                           	psect	text17
  3968     104E                     __ptext17:	
  3969 ;; *************** function ___flsub *****************
  3970 ;; Defined at:
  3971 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  3972 ;; Parameters:    Size  Location     Type
  3973 ;;  a               4   21[BANK0 ] long 
  3974 ;;  b               4   25[BANK0 ] long 
  3975 ;; Auto vars:     Size  Location     Type
  3976 ;;		None
  3977 ;; Return value:  Size  Location     Type
  3978 ;;                  4   21[BANK0 ] long 
  3979 ;; Registers used:
  3980 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3981 ;; Tracked objects:
  3982 ;;		On entry : 0/0
  3983 ;;		On exit  : 0/0
  3984 ;;		Unchanged: 0/0
  3985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3986 ;;      Params:         0       8       0       0       0
  3987 ;;      Locals:         0       0       0       0       0
  3988 ;;      Temps:          0       0       0       0       0
  3989 ;;      Totals:         0       8       0       0       0
  3990 ;;Total ram usage:        8 bytes
  3991 ;; Hardware stack levels used: 1
  3992 ;; Hardware stack levels required when called: 1
  3993 ;; This function calls:
  3994 ;;		___fladd
  3995 ;; This function is called by:
  3996 ;;		_efgtoa
  3997 ;; This function uses a non-reentrant model
  3998 ;;
  3999                           
  4000     104E                     ___flsub:	
  4001                           ;psect for function ___flsub
  4002                           
  4003     104E                     l2515:	
  4004                           ;incstack = 0
  4005                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4006                           
  4007     104E  3080               	movlw	128
  4008     104F  1283               	bcf	3,5	;RP0=0, select bank0
  4009     1050  1303               	bcf	3,6	;RP1=0, select bank0
  4010     1051  06B8               	xorwf	___flsub@a+3,f
  4011     1052                     l2517:
  4012     1052  083C               	movf	___flsub@b+3,w
  4013     1053  00F3               	movwf	___fladd@b+3
  4014     1054  083B               	movf	___flsub@b+2,w
  4015     1055  00F2               	movwf	___fladd@b+2
  4016     1056  083A               	movf	___flsub@b+1,w
  4017     1057  00F1               	movwf	___fladd@b+1
  4018     1058  0839               	movf	___flsub@b,w
  4019     1059  00F0               	movwf	___fladd@b
  4020     105A  0838               	movf	___flsub@a+3,w
  4021     105B  00F7               	movwf	___fladd@a+3
  4022     105C  0837               	movf	___flsub@a+2,w
  4023     105D  00F6               	movwf	___fladd@a+2
  4024     105E  0836               	movf	___flsub@a+1,w
  4025     105F  00F5               	movwf	___fladd@a+1
  4026     1060  0835               	movf	___flsub@a,w
  4027     1061  00F4               	movwf	___fladd@a
  4028     1062  120A  158A  2257  160A  118A  	fcall	___fladd
  4029     1067  0873               	movf	?___fladd+3,w
  4030     1068  1283               	bcf	3,5	;RP0=0, select bank0
  4031     1069  1303               	bcf	3,6	;RP1=0, select bank0
  4032     106A  00B8               	movwf	?___flsub+3
  4033     106B  0872               	movf	?___fladd+2,w
  4034     106C  00B7               	movwf	?___flsub+2
  4035     106D  0871               	movf	?___fladd+1,w
  4036     106E  00B6               	movwf	?___flsub+1
  4037     106F  0870               	movf	?___fladd,w
  4038     1070  00B5               	movwf	?___flsub
  4039     1071                     l563:
  4040     1071  0008               	return
  4041     1072                     __end_of___flsub:
  4042                           
  4043                           	psect	text18
  4044     0A57                     __ptext18:	
  4045 ;; *************** function ___fladd *****************
  4046 ;; Defined at:
  4047 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  b               4    0[COMMON] long 
  4050 ;;  a               4    4[COMMON] long 
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;  grs             1   11[COMMON] unsigned char 
  4053 ;;  bexp            1   10[COMMON] unsigned char 
  4054 ;;  aexp            1    9[COMMON] unsigned char 
  4055 ;;  signs           1    8[COMMON] unsigned char 
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  4    0[COMMON] unsigned char 
  4058 ;; Registers used:
  4059 ;;		wreg, status,2, status,0, btemp+1
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4065 ;;      Params:         8       0       0       0       0
  4066 ;;      Locals:         4       0       0       0       0
  4067 ;;      Temps:          0       8       0       0       0
  4068 ;;      Totals:        12       8       0       0       0
  4069 ;;Total ram usage:       20 bytes
  4070 ;; Hardware stack levels used: 1
  4071 ;; This function calls:
  4072 ;;		Nothing
  4073 ;; This function is called by:
  4074 ;;		___flsub
  4075 ;;		_efgtoa
  4076 ;; This function uses a non-reentrant model
  4077 ;;
  4078                           
  4079     0A57                     ___fladd:	
  4080                           ;psect for function ___fladd
  4081                           
  4082     0A57                     l2201:	
  4083                           ;incstack = 0
  4084                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  4085                           
  4086     0A57  0873               	movf	___fladd@b+3,w
  4087     0A58  3980               	andlw	128
  4088     0A59  00F8               	movwf	___fladd@signs
  4089     0A5A                     l2203:
  4090     0A5A  0873               	movf	___fladd@b+3,w
  4091     0A5B  1283               	bcf	3,5	;RP0=0, select bank0
  4092     0A5C  1303               	bcf	3,6	;RP1=0, select bank0
  4093     0A5D  00A0               	movwf	??___fladd
  4094     0A5E  0720               	addwf	??___fladd,w
  4095     0A5F  00FA               	movwf	___fladd@bexp
  4096     0A60                     l2205:
  4097     0A60  1FF2               	btfss	___fladd@b+2,7
  4098     0A61  2A63               	goto	u2261
  4099     0A62  2A64               	goto	u2260
  4100     0A63                     u2261:
  4101     0A63  2A65               	goto	l2209
  4102     0A64                     u2260:
  4103     0A64                     l2207:
  4104     0A64  147A               	bsf	___fladd@bexp,0
  4105     0A65                     l2209:
  4106     0A65  087A               	movf	___fladd@bexp,w
  4107     0A66  1903               	btfsc	3,2
  4108     0A67  2A69               	goto	u2271
  4109     0A68  2A6A               	goto	u2270
  4110     0A69                     u2271:
  4111     0A69  2A7A               	goto	l2219
  4112     0A6A                     u2270:
  4113     0A6A                     l2211:
  4114     0A6A  0A7A               	incf	___fladd@bexp,w
  4115     0A6B  1D03               	btfss	3,2
  4116     0A6C  2A6E               	goto	u2281
  4117     0A6D  2A6F               	goto	u2280
  4118     0A6E                     u2281:
  4119     0A6E  2A77               	goto	l2215
  4120     0A6F                     u2280:
  4121     0A6F                     l2213:
  4122     0A6F  3000               	movlw	0
  4123     0A70  00F3               	movwf	___fladd@b+3
  4124     0A71  3000               	movlw	0
  4125     0A72  00F2               	movwf	___fladd@b+2
  4126     0A73  3000               	movlw	0
  4127     0A74  00F1               	movwf	___fladd@b+1
  4128     0A75  3000               	movlw	0
  4129     0A76  00F0               	movwf	___fladd@b
  4130     0A77                     l2215:
  4131     0A77  17F2               	bsf	___fladd@b+2,7
  4132     0A78                     l2217:
  4133     0A78  01F3               	clrf	___fladd@b+3
  4134     0A79  2A82               	goto	l2221
  4135     0A7A                     l2219:
  4136     0A7A  3000               	movlw	0
  4137     0A7B  00F3               	movwf	___fladd@b+3
  4138     0A7C  3000               	movlw	0
  4139     0A7D  00F2               	movwf	___fladd@b+2
  4140     0A7E  3000               	movlw	0
  4141     0A7F  00F1               	movwf	___fladd@b+1
  4142     0A80  3000               	movlw	0
  4143     0A81  00F0               	movwf	___fladd@b
  4144     0A82                     l2221:
  4145     0A82  0877               	movf	___fladd@a+3,w
  4146     0A83  3980               	andlw	128
  4147     0A84  00F9               	movwf	___fladd@aexp
  4148     0A85                     l2223:
  4149     0A85  0879               	movf	___fladd@aexp,w
  4150     0A86  0678               	xorwf	___fladd@signs,w
  4151     0A87  1903               	skipnz
  4152     0A88  2A8A               	goto	u2291
  4153     0A89  2A8B               	goto	u2290
  4154     0A8A                     u2291:
  4155     0A8A  2A8C               	goto	l2227
  4156     0A8B                     u2290:
  4157     0A8B                     l2225:
  4158     0A8B  1778               	bsf	___fladd@signs,6
  4159     0A8C                     l2227:
  4160     0A8C  0877               	movf	___fladd@a+3,w
  4161     0A8D  00A0               	movwf	??___fladd
  4162     0A8E  0720               	addwf	??___fladd,w
  4163     0A8F  00F9               	movwf	___fladd@aexp
  4164     0A90                     l2229:
  4165     0A90  1FF6               	btfss	___fladd@a+2,7
  4166     0A91  2A93               	goto	u2301
  4167     0A92  2A94               	goto	u2300
  4168     0A93                     u2301:
  4169     0A93  2A95               	goto	l2233
  4170     0A94                     u2300:
  4171     0A94                     l2231:
  4172     0A94  1479               	bsf	___fladd@aexp,0
  4173     0A95                     l2233:
  4174     0A95  0879               	movf	___fladd@aexp,w
  4175     0A96  1903               	btfsc	3,2
  4176     0A97  2A99               	goto	u2311
  4177     0A98  2A9A               	goto	u2310
  4178     0A99                     u2311:
  4179     0A99  2AAA               	goto	l2243
  4180     0A9A                     u2310:
  4181     0A9A                     l2235:
  4182     0A9A  0A79               	incf	___fladd@aexp,w
  4183     0A9B  1D03               	btfss	3,2
  4184     0A9C  2A9E               	goto	u2321
  4185     0A9D  2A9F               	goto	u2320
  4186     0A9E                     u2321:
  4187     0A9E  2AA7               	goto	l2239
  4188     0A9F                     u2320:
  4189     0A9F                     l2237:
  4190     0A9F  3000               	movlw	0
  4191     0AA0  00F7               	movwf	___fladd@a+3
  4192     0AA1  3000               	movlw	0
  4193     0AA2  00F6               	movwf	___fladd@a+2
  4194     0AA3  3000               	movlw	0
  4195     0AA4  00F5               	movwf	___fladd@a+1
  4196     0AA5  3000               	movlw	0
  4197     0AA6  00F4               	movwf	___fladd@a
  4198     0AA7                     l2239:
  4199     0AA7  17F6               	bsf	___fladd@a+2,7
  4200     0AA8                     l2241:
  4201     0AA8  01F7               	clrf	___fladd@a+3
  4202     0AA9  2AB2               	goto	l517
  4203     0AAA                     l2243:
  4204     0AAA  3000               	movlw	0
  4205     0AAB  00F7               	movwf	___fladd@a+3
  4206     0AAC  3000               	movlw	0
  4207     0AAD  00F6               	movwf	___fladd@a+2
  4208     0AAE  3000               	movlw	0
  4209     0AAF  00F5               	movwf	___fladd@a+1
  4210     0AB0  3000               	movlw	0
  4211     0AB1  00F4               	movwf	___fladd@a
  4212     0AB2                     l517:
  4213     0AB2  087A               	movf	___fladd@bexp,w
  4214     0AB3  0279               	subwf	___fladd@aexp,w
  4215     0AB4  1803               	skipnc
  4216     0AB5  2AB7               	goto	u2331
  4217     0AB6  2AB8               	goto	u2330
  4218     0AB7                     u2331:
  4219     0AB7  2ADE               	goto	l2279
  4220     0AB8                     u2330:
  4221     0AB8                     l2245:
  4222     0AB8  1F78               	btfss	___fladd@signs,6
  4223     0AB9  2ABB               	goto	u2341
  4224     0ABA  2ABC               	goto	u2340
  4225     0ABB                     u2341:
  4226     0ABB  2AC0               	goto	l2249
  4227     0ABC                     u2340:
  4228     0ABC                     l2247:
  4229     0ABC  3080               	movlw	128
  4230     0ABD  00FF               	movwf	btemp+1
  4231     0ABE  087F               	movf	btemp+1,w
  4232     0ABF  06F8               	xorwf	___fladd@signs,f
  4233     0AC0                     l2249:
  4234     0AC0  087A               	movf	___fladd@bexp,w
  4235     0AC1  00FB               	movwf	___fladd@grs
  4236     0AC2                     l2251:
  4237     0AC2  0879               	movf	___fladd@aexp,w
  4238     0AC3  00FA               	movwf	___fladd@bexp
  4239     0AC4                     l2253:
  4240     0AC4  087B               	movf	___fladd@grs,w
  4241     0AC5  00F9               	movwf	___fladd@aexp
  4242     0AC6                     l2255:
  4243     0AC6  0870               	movf	___fladd@b,w
  4244     0AC7  00FB               	movwf	___fladd@grs
  4245     0AC8                     l2257:
  4246     0AC8  0874               	movf	___fladd@a,w
  4247     0AC9  00F0               	movwf	___fladd@b
  4248     0ACA                     l2259:
  4249     0ACA  087B               	movf	___fladd@grs,w
  4250     0ACB  00F4               	movwf	___fladd@a
  4251     0ACC                     l2261:
  4252     0ACC  0871               	movf	___fladd@b+1,w
  4253     0ACD  00FB               	movwf	___fladd@grs
  4254     0ACE                     l2263:
  4255     0ACE  0875               	movf	___fladd@a+1,w
  4256     0ACF  00F1               	movwf	___fladd@b+1
  4257     0AD0                     l2265:
  4258     0AD0  087B               	movf	___fladd@grs,w
  4259     0AD1  00F5               	movwf	___fladd@a+1
  4260     0AD2                     l2267:
  4261     0AD2  0872               	movf	___fladd@b+2,w
  4262     0AD3  00FB               	movwf	___fladd@grs
  4263     0AD4                     l2269:
  4264     0AD4  0876               	movf	___fladd@a+2,w
  4265     0AD5  00F2               	movwf	___fladd@b+2
  4266     0AD6                     l2271:
  4267     0AD6  087B               	movf	___fladd@grs,w
  4268     0AD7  00F6               	movwf	___fladd@a+2
  4269     0AD8                     l2273:
  4270     0AD8  0873               	movf	___fladd@b+3,w
  4271     0AD9  00FB               	movwf	___fladd@grs
  4272     0ADA                     l2275:
  4273     0ADA  0877               	movf	___fladd@a+3,w
  4274     0ADB  00F3               	movwf	___fladd@b+3
  4275     0ADC                     l2277:
  4276     0ADC  087B               	movf	___fladd@grs,w
  4277     0ADD  00F7               	movwf	___fladd@a+3
  4278     0ADE                     l2279:
  4279     0ADE  01FB               	clrf	___fladd@grs
  4280     0ADF                     l2281:
  4281     0ADF  0879               	movf	___fladd@aexp,w
  4282     0AE0  00A0               	movwf	??___fladd
  4283     0AE1  01A1               	clrf	??___fladd+1
  4284     0AE2  0821               	movf	??___fladd+1,w
  4285     0AE3  00A3               	movwf	??___fladd+3
  4286     0AE4  087A               	movf	___fladd@bexp,w
  4287     0AE5  0220               	subwf	??___fladd,w
  4288     0AE6  00A2               	movwf	??___fladd+2
  4289     0AE7  1C03               	skipc
  4290     0AE8  03A3               	decf	??___fladd+3,f
  4291     0AE9  0823               	movf	??___fladd+3,w
  4292     0AEA  3A80               	xorlw	128
  4293     0AEB  00FF               	movwf	btemp+1
  4294     0AEC  3080               	movlw	128
  4295     0AED  027F               	subwf	btemp+1,w
  4296     0AEE  1D03               	skipz
  4297     0AEF  2AF2               	goto	u2355
  4298     0AF0  301A               	movlw	26
  4299     0AF1  0222               	subwf	??___fladd+2,w
  4300     0AF2                     u2355:
  4301     0AF2  1C03               	skipc
  4302     0AF3  2AF5               	goto	u2351
  4303     0AF4  2AF6               	goto	u2350
  4304     0AF5                     u2351:
  4305     0AF5  2B2F               	goto	l2297
  4306     0AF6                     u2350:
  4307     0AF6                     l2283:
  4308     0AF6  0873               	movf	___fladd@b+3,w
  4309     0AF7  0472               	iorwf	___fladd@b+2,w
  4310     0AF8  0471               	iorwf	___fladd@b+1,w
  4311     0AF9  0470               	iorwf	___fladd@b,w
  4312     0AFA  1D03               	skipz
  4313     0AFB  2AFD               	goto	u2361
  4314     0AFC  2AFF               	goto	u2360
  4315     0AFD                     u2361:
  4316     0AFD  3001               	movlw	1
  4317     0AFE  2B00               	goto	u2370
  4318     0AFF                     u2360:
  4319     0AFF  3000               	movlw	0
  4320     0B00                     u2370:
  4321     0B00  00FB               	movwf	___fladd@grs
  4322     0B01  3000               	movlw	0
  4323     0B02  00F3               	movwf	___fladd@b+3
  4324     0B03  3000               	movlw	0
  4325     0B04  00F2               	movwf	___fladd@b+2
  4326     0B05  3000               	movlw	0
  4327     0B06  00F1               	movwf	___fladd@b+1
  4328     0B07  3000               	movlw	0
  4329     0B08  00F0               	movwf	___fladd@b
  4330     0B09  0879               	movf	___fladd@aexp,w
  4331     0B0A  00FA               	movwf	___fladd@bexp
  4332     0B0B  2B35               	goto	l521
  4333     0B0C                     l523:
  4334     0B0C  1C7B               	btfss	___fladd@grs,0
  4335     0B0D  2B0F               	goto	u2381
  4336     0B0E  2B10               	goto	u2380
  4337     0B0F                     u2381:
  4338     0B0F  2B19               	goto	l2287
  4339     0B10                     u2380:
  4340     0B10                     l2285:
  4341     0B10  087B               	movf	___fladd@grs,w
  4342     0B11  1283               	bcf	3,5	;RP0=0, select bank0
  4343     0B12  1303               	bcf	3,6	;RP1=0, select bank0
  4344     0B13  00A0               	movwf	??___fladd
  4345     0B14  1003               	clrc
  4346     0B15  0C20               	rrf	??___fladd,w
  4347     0B16  3801               	iorlw	1
  4348     0B17  00FB               	movwf	___fladd@grs
  4349     0B18  2B1B               	goto	l2289
  4350     0B19                     l2287:
  4351     0B19  1003               	clrc
  4352     0B1A  0CFB               	rrf	___fladd@grs,f
  4353     0B1B                     l2289:
  4354     0B1B  1C70               	btfss	___fladd@b,0
  4355     0B1C  2B1E               	goto	u2391
  4356     0B1D  2B1F               	goto	u2390
  4357     0B1E                     u2391:
  4358     0B1E  2B20               	goto	l2293
  4359     0B1F                     u2390:
  4360     0B1F                     l2291:
  4361     0B1F  17FB               	bsf	___fladd@grs,7
  4362     0B20                     l2293:
  4363     0B20  3001               	movlw	1
  4364     0B21  1283               	bcf	3,5	;RP0=0, select bank0
  4365     0B22  1303               	bcf	3,6	;RP1=0, select bank0
  4366     0B23  00A0               	movwf	??___fladd
  4367     0B24                     u2405:
  4368     0B24  0D73               	rlf	___fladd@b+3,w
  4369     0B25  0CF3               	rrf	___fladd@b+3,f
  4370     0B26  0CF2               	rrf	___fladd@b+2,f
  4371     0B27  0CF1               	rrf	___fladd@b+1,f
  4372     0B28  0CF0               	rrf	___fladd@b,f
  4373     0B29  0BA0               	decfsz	??___fladd& (0+127),f
  4374     0B2A  2B24               	goto	u2405
  4375     0B2B                     l2295:
  4376     0B2B  3001               	movlw	1
  4377     0B2C  00FF               	movwf	btemp+1
  4378     0B2D  087F               	movf	btemp+1,w
  4379     0B2E  07FA               	addwf	___fladd@bexp,f
  4380     0B2F                     l2297:
  4381     0B2F  0879               	movf	___fladd@aexp,w
  4382     0B30  027A               	subwf	___fladd@bexp,w
  4383     0B31  1C03               	skipc
  4384     0B32  2B34               	goto	u2411
  4385     0B33  2B35               	goto	u2410
  4386     0B34                     u2411:
  4387     0B34  2B0C               	goto	l523
  4388     0B35                     u2410:
  4389     0B35                     l521:
  4390     0B35  1B78               	btfsc	___fladd@signs,6
  4391     0B36  2B38               	goto	u2421
  4392     0B37  2B39               	goto	u2420
  4393     0B38                     u2421:
  4394     0B38  2B86               	goto	l2323
  4395     0B39                     u2420:
  4396     0B39                     l2299:
  4397     0B39  087A               	movf	___fladd@bexp,w
  4398     0B3A  1D03               	btfss	3,2
  4399     0B3B  2B3D               	goto	u2431
  4400     0B3C  2B3E               	goto	u2430
  4401     0B3D                     u2431:
  4402     0B3D  2B47               	goto	l2305
  4403     0B3E                     u2430:
  4404     0B3E                     l2301:
  4405     0B3E  3000               	movlw	0
  4406     0B3F  00F3               	movwf	?___fladd+3
  4407     0B40  3000               	movlw	0
  4408     0B41  00F2               	movwf	?___fladd+2
  4409     0B42  3000               	movlw	0
  4410     0B43  00F1               	movwf	?___fladd+1
  4411     0B44  3000               	movlw	0
  4412     0B45  00F0               	movwf	?___fladd
  4413     0B46  2CBA               	goto	l530
  4414     0B47                     l2305:
  4415     0B47  0874               	movf	___fladd@a,w
  4416     0B48  07F0               	addwf	___fladd@b,f
  4417     0B49  0875               	movf	___fladd@a+1,w
  4418     0B4A  1103               	clrz
  4419     0B4B  1803               	skipnc
  4420     0B4C  3E01               	addlw	1
  4421     0B4D  1903               	skipnz
  4422     0B4E  2B50               	goto	u2441
  4423     0B4F  07F1               	addwf	___fladd@b+1,f
  4424     0B50                     u2441:
  4425     0B50  0876               	movf	___fladd@a+2,w
  4426     0B51  1103               	clrz
  4427     0B52  1803               	skipnc
  4428     0B53  3E01               	addlw	1
  4429     0B54  1903               	skipnz
  4430     0B55  2B57               	goto	u2442
  4431     0B56  07F2               	addwf	___fladd@b+2,f
  4432     0B57                     u2442:
  4433     0B57  0877               	movf	___fladd@a+3,w
  4434     0B58  1103               	clrz
  4435     0B59  1803               	skipnc
  4436     0B5A  3E01               	addlw	1
  4437     0B5B  1903               	skipnz
  4438     0B5C  2B5E               	goto	u2443
  4439     0B5D  07F3               	addwf	___fladd@b+3,f
  4440     0B5E                     u2443:
  4441     0B5E                     l2307:
  4442     0B5E  1C73               	btfss	___fladd@b+3,0
  4443     0B5F  2B61               	goto	u2451
  4444     0B60  2B62               	goto	u2450
  4445     0B61                     u2451:
  4446     0B61  2C3E               	goto	l2359
  4447     0B62                     u2450:
  4448     0B62                     l2309:
  4449     0B62  1C7B               	btfss	___fladd@grs,0
  4450     0B63  2B65               	goto	u2461
  4451     0B64  2B66               	goto	u2460
  4452     0B65                     u2461:
  4453     0B65  2B6F               	goto	l2313
  4454     0B66                     u2460:
  4455     0B66                     l2311:
  4456     0B66  087B               	movf	___fladd@grs,w
  4457     0B67  1283               	bcf	3,5	;RP0=0, select bank0
  4458     0B68  1303               	bcf	3,6	;RP1=0, select bank0
  4459     0B69  00A0               	movwf	??___fladd
  4460     0B6A  1003               	clrc
  4461     0B6B  0C20               	rrf	??___fladd,w
  4462     0B6C  3801               	iorlw	1
  4463     0B6D  00FB               	movwf	___fladd@grs
  4464     0B6E  2B71               	goto	l2315
  4465     0B6F                     l2313:
  4466     0B6F  1003               	clrc
  4467     0B70  0CFB               	rrf	___fladd@grs,f
  4468     0B71                     l2315:
  4469     0B71  1C70               	btfss	___fladd@b,0
  4470     0B72  2B74               	goto	u2471
  4471     0B73  2B75               	goto	u2470
  4472     0B74                     u2471:
  4473     0B74  2B76               	goto	l2319
  4474     0B75                     u2470:
  4475     0B75                     l2317:
  4476     0B75  17FB               	bsf	___fladd@grs,7
  4477     0B76                     l2319:
  4478     0B76  3001               	movlw	1
  4479     0B77  1283               	bcf	3,5	;RP0=0, select bank0
  4480     0B78  1303               	bcf	3,6	;RP1=0, select bank0
  4481     0B79  00A0               	movwf	??___fladd
  4482     0B7A                     u2485:
  4483     0B7A  0D73               	rlf	___fladd@b+3,w
  4484     0B7B  0CF3               	rrf	___fladd@b+3,f
  4485     0B7C  0CF2               	rrf	___fladd@b+2,f
  4486     0B7D  0CF1               	rrf	___fladd@b+1,f
  4487     0B7E  0CF0               	rrf	___fladd@b,f
  4488     0B7F  0BA0               	decfsz	??___fladd& (0+127),f
  4489     0B80  2B7A               	goto	u2485
  4490     0B81                     l2321:
  4491     0B81  3001               	movlw	1
  4492     0B82  00FF               	movwf	btemp+1
  4493     0B83  087F               	movf	btemp+1,w
  4494     0B84  07FA               	addwf	___fladd@bexp,f
  4495     0B85  2C3E               	goto	l2359
  4496     0B86                     l2323:
  4497     0B86  0873               	movf	___fladd@b+3,w
  4498     0B87  3A80               	xorlw	128
  4499     0B88  00FF               	movwf	btemp+1
  4500     0B89  0877               	movf	___fladd@a+3,w
  4501     0B8A  3A80               	xorlw	128
  4502     0B8B  027F               	subwf	btemp+1,w
  4503     0B8C  1D03               	skipz
  4504     0B8D  2B98               	goto	u2493
  4505     0B8E  0876               	movf	___fladd@a+2,w
  4506     0B8F  0272               	subwf	___fladd@b+2,w
  4507     0B90  1D03               	skipz
  4508     0B91  2B98               	goto	u2493
  4509     0B92  0875               	movf	___fladd@a+1,w
  4510     0B93  0271               	subwf	___fladd@b+1,w
  4511     0B94  1D03               	skipz
  4512     0B95  2B98               	goto	u2493
  4513     0B96  0874               	movf	___fladd@a,w
  4514     0B97  0270               	subwf	___fladd@b,w
  4515     0B98                     u2493:
  4516     0B98  1803               	skipnc
  4517     0B99  2B9B               	goto	u2491
  4518     0B9A  2B9C               	goto	u2490
  4519     0B9B                     u2491:
  4520     0B9B  2BF6               	goto	l2335
  4521     0B9C                     u2490:
  4522     0B9C                     l2325:
  4523     0B9C  30FF               	movlw	255
  4524     0B9D  1283               	bcf	3,5	;RP0=0, select bank0
  4525     0B9E  1303               	bcf	3,6	;RP1=0, select bank0
  4526     0B9F  00A0               	movwf	??___fladd
  4527     0BA0  30FF               	movlw	255
  4528     0BA1  00A1               	movwf	??___fladd+1
  4529     0BA2  30FF               	movlw	255
  4530     0BA3  00A2               	movwf	??___fladd+2
  4531     0BA4  30FF               	movlw	255
  4532     0BA5  00A3               	movwf	??___fladd+3
  4533     0BA6  0874               	movf	___fladd@a,w
  4534     0BA7  00A4               	movwf	??___fladd+4
  4535     0BA8  0875               	movf	___fladd@a+1,w
  4536     0BA9  00A5               	movwf	??___fladd+5
  4537     0BAA  0876               	movf	___fladd@a+2,w
  4538     0BAB  00A6               	movwf	??___fladd+6
  4539     0BAC  0877               	movf	___fladd@a+3,w
  4540     0BAD  00A7               	movwf	??___fladd+7
  4541     0BAE  0870               	movf	___fladd@b,w
  4542     0BAF  02A4               	subwf	??___fladd+4,f
  4543     0BB0  0871               	movf	___fladd@b+1,w
  4544     0BB1  1C03               	skipc
  4545     0BB2  0F71               	incfsz	___fladd@b+1,w
  4546     0BB3  2BB5               	goto	u2501
  4547     0BB4  2BB6               	goto	u2502
  4548     0BB5                     u2501:
  4549     0BB5  02A5               	subwf	??___fladd+5,f
  4550     0BB6                     u2502:
  4551     0BB6  0872               	movf	___fladd@b+2,w
  4552     0BB7  1C03               	skipc
  4553     0BB8  0F72               	incfsz	___fladd@b+2,w
  4554     0BB9  2BBB               	goto	u2503
  4555     0BBA  2BBC               	goto	u2504
  4556     0BBB                     u2503:
  4557     0BBB  02A6               	subwf	??___fladd+6,f
  4558     0BBC                     u2504:
  4559     0BBC  0873               	movf	___fladd@b+3,w
  4560     0BBD  1C03               	skipc
  4561     0BBE  0F73               	incfsz	___fladd@b+3,w
  4562     0BBF  2BC1               	goto	u2505
  4563     0BC0  2BC2               	goto	u2506
  4564     0BC1                     u2505:
  4565     0BC1  02A7               	subwf	??___fladd+7,f
  4566     0BC2                     u2506:
  4567     0BC2  0824               	movf	??___fladd+4,w
  4568     0BC3  07A0               	addwf	??___fladd,f
  4569     0BC4  0825               	movf	??___fladd+5,w
  4570     0BC5  1803               	skipnc
  4571     0BC6  0F25               	incfsz	??___fladd+5,w
  4572     0BC7  2BC9               	goto	u2510
  4573     0BC8  2BCA               	goto	u2511
  4574     0BC9                     u2510:
  4575     0BC9  07A1               	addwf	??___fladd+1,f
  4576     0BCA                     u2511:
  4577     0BCA  0826               	movf	??___fladd+6,w
  4578     0BCB  1803               	skipnc
  4579     0BCC  0F26               	incfsz	??___fladd+6,w
  4580     0BCD  2BCF               	goto	u2512
  4581     0BCE  2BD0               	goto	u2513
  4582     0BCF                     u2512:
  4583     0BCF  07A2               	addwf	??___fladd+2,f
  4584     0BD0                     u2513:
  4585     0BD0  0827               	movf	??___fladd+7,w
  4586     0BD1  1803               	skipnc
  4587     0BD2  0A27               	incf	??___fladd+7,w
  4588     0BD3  07A3               	addwf	??___fladd+3,f
  4589     0BD4  0823               	movf	??___fladd+3,w
  4590     0BD5  00F3               	movwf	___fladd@b+3
  4591     0BD6  0822               	movf	??___fladd+2,w
  4592     0BD7  00F2               	movwf	___fladd@b+2
  4593     0BD8  0821               	movf	??___fladd+1,w
  4594     0BD9  00F1               	movwf	___fladd@b+1
  4595     0BDA  0820               	movf	??___fladd,w
  4596     0BDB  00F0               	movwf	___fladd@b
  4597     0BDC                     l2327:
  4598     0BDC  3080               	movlw	128
  4599     0BDD  00FF               	movwf	btemp+1
  4600     0BDE  087F               	movf	btemp+1,w
  4601     0BDF  06F8               	xorwf	___fladd@signs,f
  4602     0BE0                     l2329:
  4603     0BE0  09FB               	comf	___fladd@grs,f
  4604     0BE1  0AFB               	incf	___fladd@grs,f
  4605     0BE2                     l2331:
  4606     0BE2  087B               	movf	___fladd@grs,w
  4607     0BE3  1D03               	btfss	3,2
  4608     0BE4  2BE6               	goto	u2521
  4609     0BE5  2BE7               	goto	u2520
  4610     0BE6                     u2521:
  4611     0BE6  2C04               	goto	l538
  4612     0BE7                     u2520:
  4613     0BE7                     l2333:
  4614     0BE7  3001               	movlw	1
  4615     0BE8  07F0               	addwf	___fladd@b,f
  4616     0BE9  3000               	movlw	0
  4617     0BEA  1803               	skipnc
  4618     0BEB  3001               	movlw	1
  4619     0BEC  07F1               	addwf	___fladd@b+1,f
  4620     0BED  3000               	movlw	0
  4621     0BEE  1803               	skipnc
  4622     0BEF  3001               	movlw	1
  4623     0BF0  07F2               	addwf	___fladd@b+2,f
  4624     0BF1  3000               	movlw	0
  4625     0BF2  1803               	skipnc
  4626     0BF3  3001               	movlw	1
  4627     0BF4  07F3               	addwf	___fladd@b+3,f
  4628     0BF5  2C04               	goto	l538
  4629     0BF6                     l2335:
  4630     0BF6  0874               	movf	___fladd@a,w
  4631     0BF7  02F0               	subwf	___fladd@b,f
  4632     0BF8  0875               	movf	___fladd@a+1,w
  4633     0BF9  1C03               	skipc
  4634     0BFA  0F75               	incfsz	___fladd@a+1,w
  4635     0BFB  02F1               	subwf	___fladd@b+1,f
  4636     0BFC  0876               	movf	___fladd@a+2,w
  4637     0BFD  1C03               	skipc
  4638     0BFE  0F76               	incfsz	___fladd@a+2,w
  4639     0BFF  02F2               	subwf	___fladd@b+2,f
  4640     0C00  0877               	movf	___fladd@a+3,w
  4641     0C01  1C03               	skipc
  4642     0C02  0F77               	incfsz	___fladd@a+3,w
  4643     0C03  02F3               	subwf	___fladd@b+3,f
  4644     0C04                     l538:
  4645     0C04  0873               	movf	___fladd@b+3,w
  4646     0C05  0472               	iorwf	___fladd@b+2,w
  4647     0C06  0471               	iorwf	___fladd@b+1,w
  4648     0C07  0470               	iorwf	___fladd@b,w
  4649     0C08  1D03               	skipz
  4650     0C09  2C0B               	goto	u2531
  4651     0C0A  2C0C               	goto	u2530
  4652     0C0B                     u2531:
  4653     0C0B  2C3A               	goto	l2357
  4654     0C0C                     u2530:
  4655     0C0C                     l2337:
  4656     0C0C  087B               	movf	___fladd@grs,w
  4657     0C0D  1D03               	btfss	3,2
  4658     0C0E  2C10               	goto	u2541
  4659     0C0F  2C11               	goto	u2540
  4660     0C10                     u2541:
  4661     0C10  2C3A               	goto	l2357
  4662     0C11                     u2540:
  4663     0C11                     l2339:
  4664     0C11  3000               	movlw	0
  4665     0C12  00F3               	movwf	?___fladd+3
  4666     0C13  3000               	movlw	0
  4667     0C14  00F2               	movwf	?___fladd+2
  4668     0C15  3000               	movlw	0
  4669     0C16  00F1               	movwf	?___fladd+1
  4670     0C17  3000               	movlw	0
  4671     0C18  00F0               	movwf	?___fladd
  4672     0C19  2CBA               	goto	l530
  4673     0C1A                     l2343:
  4674     0C1A  3001               	movlw	1
  4675     0C1B  1283               	bcf	3,5	;RP0=0, select bank0
  4676     0C1C  1303               	bcf	3,6	;RP1=0, select bank0
  4677     0C1D  00A0               	movwf	??___fladd
  4678     0C1E                     u2555:
  4679     0C1E  1003               	clrc
  4680     0C1F  0DF0               	rlf	___fladd@b,f
  4681     0C20  0DF1               	rlf	___fladd@b+1,f
  4682     0C21  0DF2               	rlf	___fladd@b+2,f
  4683     0C22  0DF3               	rlf	___fladd@b+3,f
  4684     0C23  0BA0               	decfsz	??___fladd,f
  4685     0C24  2C1E               	goto	u2555
  4686     0C25                     l2345:
  4687     0C25  1FFB               	btfss	___fladd@grs,7
  4688     0C26  2C28               	goto	u2561
  4689     0C27  2C29               	goto	u2560
  4690     0C28                     u2561:
  4691     0C28  2C2A               	goto	l542
  4692     0C29                     u2560:
  4693     0C29                     l2347:
  4694     0C29  1470               	bsf	___fladd@b,0
  4695     0C2A                     l542:
  4696     0C2A  1C7B               	btfss	___fladd@grs,0
  4697     0C2B  2C2D               	goto	u2571
  4698     0C2C  2C2E               	goto	u2570
  4699     0C2D                     u2571:
  4700     0C2D  2C31               	goto	l2351
  4701     0C2E                     u2570:
  4702     0C2E                     l2349:
  4703     0C2E  1403               	setc
  4704     0C2F  0DFB               	rlf	___fladd@grs,f
  4705     0C30  2C33               	goto	l2353
  4706     0C31                     l2351:
  4707     0C31  1003               	clrc
  4708     0C32  0DFB               	rlf	___fladd@grs,f
  4709     0C33                     l2353:
  4710     0C33  087A               	movf	___fladd@bexp,w
  4711     0C34  1903               	btfsc	3,2
  4712     0C35  2C37               	goto	u2581
  4713     0C36  2C38               	goto	u2580
  4714     0C37                     u2581:
  4715     0C37  2C3A               	goto	l2357
  4716     0C38                     u2580:
  4717     0C38                     l2355:
  4718     0C38  3001               	movlw	1
  4719     0C39  02FA               	subwf	___fladd@bexp,f
  4720     0C3A                     l2357:
  4721     0C3A  1FF2               	btfss	___fladd@b+2,7
  4722     0C3B  2C3D               	goto	u2591
  4723     0C3C  2C3E               	goto	u2590
  4724     0C3D                     u2591:
  4725     0C3D  2C1A               	goto	l2343
  4726     0C3E                     u2590:
  4727     0C3E                     l2359:
  4728     0C3E  01F9               	clrf	___fladd@aexp
  4729     0C3F                     l2361:
  4730     0C3F  1FFB               	btfss	___fladd@grs,7
  4731     0C40  2C42               	goto	u2601
  4732     0C41  2C43               	goto	u2600
  4733     0C42                     u2601:
  4734     0C42  2C51               	goto	l2369
  4735     0C43                     u2600:
  4736     0C43                     l2363:
  4737     0C43  087B               	movf	___fladd@grs,w
  4738     0C44  397F               	andlw	127
  4739     0C45  1903               	btfsc	3,2
  4740     0C46  2C48               	goto	u2611
  4741     0C47  2C49               	goto	u2610
  4742     0C48                     u2611:
  4743     0C48  2C4C               	goto	l548
  4744     0C49                     u2610:
  4745     0C49                     l2365:
  4746     0C49  01F9               	clrf	___fladd@aexp
  4747     0C4A  0AF9               	incf	___fladd@aexp,f
  4748     0C4B  2C51               	goto	l2369
  4749     0C4C                     l548:
  4750     0C4C  1C70               	btfss	___fladd@b,0
  4751     0C4D  2C4F               	goto	u2621
  4752     0C4E  2C50               	goto	u2620
  4753     0C4F                     u2621:
  4754     0C4F  2C51               	goto	l2369
  4755     0C50                     u2620:
  4756     0C50  2C49               	goto	l2365
  4757     0C51                     l2369:
  4758     0C51  0879               	movf	___fladd@aexp,w
  4759     0C52  1903               	btfsc	3,2
  4760     0C53  2C55               	goto	u2631
  4761     0C54  2C56               	goto	u2630
  4762     0C55                     u2631:
  4763     0C55  2C8C               	goto	l2379
  4764     0C56                     u2630:
  4765     0C56                     l2371:
  4766     0C56  3001               	movlw	1
  4767     0C57  07F0               	addwf	___fladd@b,f
  4768     0C58  3000               	movlw	0
  4769     0C59  1803               	skipnc
  4770     0C5A  3001               	movlw	1
  4771     0C5B  07F1               	addwf	___fladd@b+1,f
  4772     0C5C  3000               	movlw	0
  4773     0C5D  1803               	skipnc
  4774     0C5E  3001               	movlw	1
  4775     0C5F  07F2               	addwf	___fladd@b+2,f
  4776     0C60  3000               	movlw	0
  4777     0C61  1803               	skipnc
  4778     0C62  3001               	movlw	1
  4779     0C63  07F3               	addwf	___fladd@b+3,f
  4780     0C64                     l2373:
  4781     0C64  1C73               	btfss	___fladd@b+3,0
  4782     0C65  2C67               	goto	u2641
  4783     0C66  2C68               	goto	u2640
  4784     0C67                     u2641:
  4785     0C67  2C8C               	goto	l2379
  4786     0C68                     u2640:
  4787     0C68                     l2375:
  4788     0C68  0870               	movf	___fladd@b,w
  4789     0C69  1283               	bcf	3,5	;RP0=0, select bank0
  4790     0C6A  1303               	bcf	3,6	;RP1=0, select bank0
  4791     0C6B  00A0               	movwf	??___fladd
  4792     0C6C  0871               	movf	___fladd@b+1,w
  4793     0C6D  00A1               	movwf	??___fladd+1
  4794     0C6E  0872               	movf	___fladd@b+2,w
  4795     0C6F  00A2               	movwf	??___fladd+2
  4796     0C70  0873               	movf	___fladd@b+3,w
  4797     0C71  00A3               	movwf	??___fladd+3
  4798     0C72  3001               	movlw	1
  4799     0C73  00A4               	movwf	??___fladd+4
  4800     0C74                     u2655:
  4801     0C74  0D23               	rlf	??___fladd+3,w
  4802     0C75  0CA3               	rrf	??___fladd+3,f
  4803     0C76  0CA2               	rrf	??___fladd+2,f
  4804     0C77  0CA1               	rrf	??___fladd+1,f
  4805     0C78  0CA0               	rrf	??___fladd,f
  4806     0C79                     u2650:
  4807     0C79  0BA4               	decfsz	??___fladd+4,f
  4808     0C7A  2C74               	goto	u2655
  4809     0C7B  0823               	movf	??___fladd+3,w
  4810     0C7C  00F3               	movwf	___fladd@b+3
  4811     0C7D  0822               	movf	??___fladd+2,w
  4812     0C7E  00F2               	movwf	___fladd@b+2
  4813     0C7F  0821               	movf	??___fladd+1,w
  4814     0C80  00F1               	movwf	___fladd@b+1
  4815     0C81  0820               	movf	??___fladd,w
  4816     0C82  00F0               	movwf	___fladd@b
  4817     0C83  0A7A               	incf	___fladd@bexp,w
  4818     0C84  1903               	btfsc	3,2
  4819     0C85  2C87               	goto	u2661
  4820     0C86  2C88               	goto	u2660
  4821     0C87                     u2661:
  4822     0C87  2C8C               	goto	l2379
  4823     0C88                     u2660:
  4824     0C88                     l2377:
  4825     0C88  3001               	movlw	1
  4826     0C89  00FF               	movwf	btemp+1
  4827     0C8A  087F               	movf	btemp+1,w
  4828     0C8B  07FA               	addwf	___fladd@bexp,f
  4829     0C8C                     l2379:
  4830     0C8C  0A7A               	incf	___fladd@bexp,w
  4831     0C8D  1903               	btfsc	3,2
  4832     0C8E  2C90               	goto	u2671
  4833     0C8F  2C91               	goto	u2670
  4834     0C90                     u2671:
  4835     0C90  2C96               	goto	l2383
  4836     0C91                     u2670:
  4837     0C91                     l2381:
  4838     0C91  087A               	movf	___fladd@bexp,w
  4839     0C92  1D03               	btfss	3,2
  4840     0C93  2C95               	goto	u2681
  4841     0C94  2C96               	goto	u2680
  4842     0C95                     u2681:
  4843     0C95  2CA4               	goto	l2389
  4844     0C96                     u2680:
  4845     0C96                     l2383:
  4846     0C96  3000               	movlw	0
  4847     0C97  00F3               	movwf	___fladd@b+3
  4848     0C98  3000               	movlw	0
  4849     0C99  00F2               	movwf	___fladd@b+2
  4850     0C9A  3000               	movlw	0
  4851     0C9B  00F1               	movwf	___fladd@b+1
  4852     0C9C  3000               	movlw	0
  4853     0C9D  00F0               	movwf	___fladd@b
  4854     0C9E                     l2385:
  4855     0C9E  087A               	movf	___fladd@bexp,w
  4856     0C9F  1D03               	btfss	3,2
  4857     0CA0  2CA2               	goto	u2691
  4858     0CA1  2CA3               	goto	u2690
  4859     0CA2                     u2691:
  4860     0CA2  2CA4               	goto	l2389
  4861     0CA3                     u2690:
  4862     0CA3                     l2387:
  4863     0CA3  01F8               	clrf	___fladd@signs
  4864     0CA4                     l2389:
  4865     0CA4  1C7A               	btfss	___fladd@bexp,0
  4866     0CA5  2CA7               	goto	u2701
  4867     0CA6  2CA8               	goto	u2700
  4868     0CA7                     u2701:
  4869     0CA7  2CAA               	goto	l2393
  4870     0CA8                     u2700:
  4871     0CA8                     l2391:
  4872     0CA8  17F2               	bsf	___fladd@b+2,7
  4873     0CA9  2CAE               	goto	l2395
  4874     0CAA                     l2393:
  4875     0CAA  307F               	movlw	127
  4876     0CAB  00FF               	movwf	btemp+1
  4877     0CAC  087F               	movf	btemp+1,w
  4878     0CAD  05F2               	andwf	___fladd@b+2,f
  4879     0CAE                     l2395:
  4880     0CAE  087A               	movf	___fladd@bexp,w
  4881     0CAF  1283               	bcf	3,5	;RP0=0, select bank0
  4882     0CB0  1303               	bcf	3,6	;RP1=0, select bank0
  4883     0CB1  00A0               	movwf	??___fladd
  4884     0CB2  1003               	clrc
  4885     0CB3  0C20               	rrf	??___fladd,w
  4886     0CB4  00F3               	movwf	___fladd@b+3
  4887     0CB5                     l2397:
  4888     0CB5  1FF8               	btfss	___fladd@signs,7
  4889     0CB6  2CB8               	goto	u2711
  4890     0CB7  2CB9               	goto	u2710
  4891     0CB8                     u2711:
  4892     0CB8  2CBA               	goto	l560
  4893     0CB9                     u2710:
  4894     0CB9                     l2399:
  4895     0CB9  17F3               	bsf	___fladd@b+3,7
  4896     0CBA                     l560:
  4897     0CBA                     l530:
  4898     0CBA  0008               	return
  4899     0CBB                     __end_of___fladd:
  4900                           
  4901                           	psect	text19
  4902     1F67                     __ptext19:	
  4903 ;; *************** function ___flneg *****************
  4904 ;; Defined at:
  4905 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
  4906 ;; Parameters:    Size  Location     Type
  4907 ;;  f1              4    0[COMMON] unsigned char 
  4908 ;; Auto vars:     Size  Location     Type
  4909 ;;		None
  4910 ;; Return value:  Size  Location     Type
  4911 ;;                  4    0[COMMON] unsigned char 
  4912 ;; Registers used:
  4913 ;;		wreg
  4914 ;; Tracked objects:
  4915 ;;		On entry : 0/0
  4916 ;;		On exit  : 0/0
  4917 ;;		Unchanged: 0/0
  4918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4919 ;;      Params:         4       0       0       0       0
  4920 ;;      Locals:         0       0       0       0       0
  4921 ;;      Temps:          0       0       0       0       0
  4922 ;;      Totals:         4       0       0       0       0
  4923 ;;Total ram usage:        4 bytes
  4924 ;; Hardware stack levels used: 1
  4925 ;; This function calls:
  4926 ;;		Nothing
  4927 ;; This function is called by:
  4928 ;;		_efgtoa
  4929 ;; This function uses a non-reentrant model
  4930 ;;
  4931                           
  4932     1F67                     ___flneg:	
  4933                           ;psect for function ___flneg
  4934                           
  4935     1F67                     l2469:	
  4936                           ;incstack = 0
  4937                           ; Regs used in ___flneg: [wreg]
  4938                           
  4939     1F67  0873               	movf	___flneg@f1+3,w
  4940     1F68  0472               	iorwf	___flneg@f1+2,w
  4941     1F69  0471               	iorwf	___flneg@f1+1,w
  4942     1F6A  0470               	iorwf	___flneg@f1,w
  4943     1F6B  1903               	skipnz
  4944     1F6C  2F6E               	goto	u2901
  4945     1F6D  2F6F               	goto	u2900
  4946     1F6E                     u2901:
  4947     1F6E  2F71               	goto	l2473
  4948     1F6F                     u2900:
  4949     1F6F                     l2471:
  4950     1F6F  3080               	movlw	128
  4951     1F70  06F3               	xorwf	___flneg@f1+3,f
  4952     1F71                     l2473:
  4953     1F71                     l406:
  4954     1F71  0008               	return
  4955     1F72                     __end_of___flneg:
  4956                           
  4957                           	psect	text20
  4958     0CBB                     __ptext20:	
  4959 ;; *************** function ___flmul *****************
  4960 ;; Defined at:
  4961 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  b               4    0[BANK0 ] unsigned char 
  4964 ;;  a               4    4[BANK0 ] unsigned char 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  prod            4   15[BANK0 ] struct .
  4967 ;;  grs             4    9[BANK0 ] unsigned long 
  4968 ;;  temp            2   19[BANK0 ] struct .
  4969 ;;  bexp            1   14[BANK0 ] unsigned char 
  4970 ;;  aexp            1   13[BANK0 ] unsigned char 
  4971 ;;  sign            1    8[BANK0 ] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  4    0[BANK0 ] unsigned char 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4981 ;;      Params:         0       8       0       0       0
  4982 ;;      Locals:         0      13       0       0       0
  4983 ;;      Temps:          5       0       0       0       0
  4984 ;;      Totals:         5      21       0       0       0
  4985 ;;Total ram usage:       26 bytes
  4986 ;; Hardware stack levels used: 1
  4987 ;; Hardware stack levels required when called: 1
  4988 ;; This function calls:
  4989 ;;		__Umul8_16
  4990 ;; This function is called by:
  4991 ;;		_efgtoa
  4992 ;; This function uses a non-reentrant model
  4993 ;;
  4994                           
  4995     0CBB                     ___flmul:	
  4996                           ;psect for function ___flmul
  4997                           
  4998     0CBB                     l2667:	
  4999                           ;incstack = 0
  5000                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5001                           
  5002     0CBB  1283               	bcf	3,5	;RP0=0, select bank0
  5003     0CBC  1303               	bcf	3,6	;RP1=0, select bank0
  5004     0CBD  0823               	movf	___flmul@b+3,w
  5005     0CBE  3980               	andlw	128
  5006     0CBF  00A8               	movwf	___flmul@sign
  5007     0CC0                     l2669:
  5008     0CC0  0823               	movf	___flmul@b+3,w
  5009     0CC1  00F9               	movwf	??___flmul
  5010     0CC2  0779               	addwf	??___flmul,w
  5011     0CC3  00AE               	movwf	___flmul@bexp
  5012     0CC4                     l2671:
  5013     0CC4  1FA2               	btfss	___flmul@b+2,7
  5014     0CC5  2CC7               	goto	u3311
  5015     0CC6  2CC8               	goto	u3310
  5016     0CC7                     u3311:
  5017     0CC7  2CC9               	goto	l2675
  5018     0CC8                     u3310:
  5019     0CC8                     l2673:
  5020     0CC8  142E               	bsf	___flmul@bexp,0
  5021     0CC9                     l2675:
  5022     0CC9  082E               	movf	___flmul@bexp,w
  5023     0CCA  1903               	btfsc	3,2
  5024     0CCB  2CCD               	goto	u3321
  5025     0CCC  2CCE               	goto	u3320
  5026     0CCD                     u3321:
  5027     0CCD  2CDD               	goto	l2683
  5028     0CCE                     u3320:
  5029     0CCE                     l2677:
  5030     0CCE  0A2E               	incf	___flmul@bexp,w
  5031     0CCF  1D03               	btfss	3,2
  5032     0CD0  2CD2               	goto	u3331
  5033     0CD1  2CD3               	goto	u3330
  5034     0CD2                     u3331:
  5035     0CD2  2CDB               	goto	l2681
  5036     0CD3                     u3330:
  5037     0CD3                     l2679:
  5038     0CD3  3000               	movlw	0
  5039     0CD4  00A3               	movwf	___flmul@b+3
  5040     0CD5  3000               	movlw	0
  5041     0CD6  00A2               	movwf	___flmul@b+2
  5042     0CD7  3000               	movlw	0
  5043     0CD8  00A1               	movwf	___flmul@b+1
  5044     0CD9  3000               	movlw	0
  5045     0CDA  00A0               	movwf	___flmul@b
  5046     0CDB                     l2681:
  5047     0CDB  17A2               	bsf	___flmul@b+2,7
  5048     0CDC  2CE5               	goto	l2685
  5049     0CDD                     l2683:
  5050     0CDD  3000               	movlw	0
  5051     0CDE  00A3               	movwf	___flmul@b+3
  5052     0CDF  3000               	movlw	0
  5053     0CE0  00A2               	movwf	___flmul@b+2
  5054     0CE1  3000               	movlw	0
  5055     0CE2  00A1               	movwf	___flmul@b+1
  5056     0CE3  3000               	movlw	0
  5057     0CE4  00A0               	movwf	___flmul@b
  5058     0CE5                     l2685:
  5059     0CE5  0827               	movf	___flmul@a+3,w
  5060     0CE6  3980               	andlw	128
  5061     0CE7  00FF               	movwf	btemp+1
  5062     0CE8  087F               	movf	btemp+1,w
  5063     0CE9  06A8               	xorwf	___flmul@sign,f
  5064     0CEA                     l2687:
  5065     0CEA  0827               	movf	___flmul@a+3,w
  5066     0CEB  00F9               	movwf	??___flmul
  5067     0CEC  0779               	addwf	??___flmul,w
  5068     0CED  00AD               	movwf	___flmul@aexp
  5069     0CEE                     l2689:
  5070     0CEE  1FA6               	btfss	___flmul@a+2,7
  5071     0CEF  2CF1               	goto	u3341
  5072     0CF0  2CF2               	goto	u3340
  5073     0CF1                     u3341:
  5074     0CF1  2CF3               	goto	l2693
  5075     0CF2                     u3340:
  5076     0CF2                     l2691:
  5077     0CF2  142D               	bsf	___flmul@aexp,0
  5078     0CF3                     l2693:
  5079     0CF3  082D               	movf	___flmul@aexp,w
  5080     0CF4  1903               	btfsc	3,2
  5081     0CF5  2CF7               	goto	u3351
  5082     0CF6  2CF8               	goto	u3350
  5083     0CF7                     u3351:
  5084     0CF7  2D07               	goto	l2701
  5085     0CF8                     u3350:
  5086     0CF8                     l2695:
  5087     0CF8  0A2D               	incf	___flmul@aexp,w
  5088     0CF9  1D03               	btfss	3,2
  5089     0CFA  2CFC               	goto	u3361
  5090     0CFB  2CFD               	goto	u3360
  5091     0CFC                     u3361:
  5092     0CFC  2D05               	goto	l2699
  5093     0CFD                     u3360:
  5094     0CFD                     l2697:
  5095     0CFD  3000               	movlw	0
  5096     0CFE  00A7               	movwf	___flmul@a+3
  5097     0CFF  3000               	movlw	0
  5098     0D00  00A6               	movwf	___flmul@a+2
  5099     0D01  3000               	movlw	0
  5100     0D02  00A5               	movwf	___flmul@a+1
  5101     0D03  3000               	movlw	0
  5102     0D04  00A4               	movwf	___flmul@a
  5103     0D05                     l2699:
  5104     0D05  17A6               	bsf	___flmul@a+2,7
  5105     0D06  2D0F               	goto	l2703
  5106     0D07                     l2701:
  5107     0D07  3000               	movlw	0
  5108     0D08  00A7               	movwf	___flmul@a+3
  5109     0D09  3000               	movlw	0
  5110     0D0A  00A6               	movwf	___flmul@a+2
  5111     0D0B  3000               	movlw	0
  5112     0D0C  00A5               	movwf	___flmul@a+1
  5113     0D0D  3000               	movlw	0
  5114     0D0E  00A4               	movwf	___flmul@a
  5115     0D0F                     l2703:
  5116     0D0F  082D               	movf	___flmul@aexp,w
  5117     0D10  1903               	btfsc	3,2
  5118     0D11  2D13               	goto	u3371
  5119     0D12  2D14               	goto	u3370
  5120     0D13                     u3371:
  5121     0D13  2D19               	goto	l2707
  5122     0D14                     u3370:
  5123     0D14                     l2705:
  5124     0D14  082E               	movf	___flmul@bexp,w
  5125     0D15  1D03               	btfss	3,2
  5126     0D16  2D18               	goto	u3381
  5127     0D17  2D19               	goto	u3380
  5128     0D18                     u3381:
  5129     0D18  2D22               	goto	l2711
  5130     0D19                     u3380:
  5131     0D19                     l2707:
  5132     0D19  3000               	movlw	0
  5133     0D1A  00A3               	movwf	?___flmul+3
  5134     0D1B  3000               	movlw	0
  5135     0D1C  00A2               	movwf	?___flmul+2
  5136     0D1D  3000               	movlw	0
  5137     0D1E  00A1               	movwf	?___flmul+1
  5138     0D1F  3000               	movlw	0
  5139     0D20  00A0               	movwf	?___flmul
  5140     0D21  2FFF               	goto	l613
  5141     0D22                     l2711:
  5142     0D22  0820               	movf	___flmul@b,w
  5143     0D23  00F0               	movwf	__Umul8_16@multiplicand
  5144     0D24  0826               	movf	___flmul@a+2,w
  5145     0D25  160A  118A  20E3  120A  158A  	fcall	__Umul8_16
  5146     0D2A  0871               	movf	?__Umul8_16+1,w
  5147     0D2B  1283               	bcf	3,5	;RP0=0, select bank0
  5148     0D2C  1303               	bcf	3,6	;RP1=0, select bank0
  5149     0D2D  00B4               	movwf	___flmul@temp+1
  5150     0D2E  0870               	movf	?__Umul8_16,w
  5151     0D2F  00B3               	movwf	___flmul@temp
  5152     0D30                     l2713:
  5153     0D30  0833               	movf	___flmul@temp,w
  5154     0D31  00F9               	movwf	??___flmul
  5155     0D32  01FA               	clrf	??___flmul+1
  5156     0D33  01FB               	clrf	??___flmul+2
  5157     0D34  01FC               	clrf	??___flmul+3
  5158     0D35  087C               	movf	??___flmul+3,w
  5159     0D36  00AC               	movwf	___flmul@grs+3
  5160     0D37  087B               	movf	??___flmul+2,w
  5161     0D38  00AB               	movwf	___flmul@grs+2
  5162     0D39  087A               	movf	??___flmul+1,w
  5163     0D3A  00AA               	movwf	___flmul@grs+1
  5164     0D3B  0879               	movf	??___flmul,w
  5165     0D3C  00A9               	movwf	___flmul@grs
  5166     0D3D                     l2715:
  5167     0D3D  0834               	movf	___flmul@temp+1,w
  5168     0D3E  00F9               	movwf	??___flmul
  5169     0D3F  01FA               	clrf	??___flmul+1
  5170     0D40  01FB               	clrf	??___flmul+2
  5171     0D41  01FC               	clrf	??___flmul+3
  5172     0D42  087C               	movf	??___flmul+3,w
  5173     0D43  00B2               	movwf	___flmul@prod+3
  5174     0D44  087B               	movf	??___flmul+2,w
  5175     0D45  00B1               	movwf	___flmul@prod+2
  5176     0D46  087A               	movf	??___flmul+1,w
  5177     0D47  00B0               	movwf	___flmul@prod+1
  5178     0D48  0879               	movf	??___flmul,w
  5179     0D49  00AF               	movwf	___flmul@prod
  5180     0D4A  0821               	movf	___flmul@b+1,w
  5181     0D4B  00F0               	movwf	__Umul8_16@multiplicand
  5182     0D4C  0825               	movf	___flmul@a+1,w
  5183     0D4D  160A  118A  20E3  120A  158A  	fcall	__Umul8_16
  5184     0D52  0871               	movf	?__Umul8_16+1,w
  5185     0D53  1283               	bcf	3,5	;RP0=0, select bank0
  5186     0D54  1303               	bcf	3,6	;RP1=0, select bank0
  5187     0D55  00B4               	movwf	___flmul@temp+1
  5188     0D56  0870               	movf	?__Umul8_16,w
  5189     0D57  00B3               	movwf	___flmul@temp
  5190     0D58                     l2717:
  5191     0D58  0833               	movf	___flmul@temp,w
  5192     0D59  00F9               	movwf	??___flmul
  5193     0D5A  01FA               	clrf	??___flmul+1
  5194     0D5B  01FB               	clrf	??___flmul+2
  5195     0D5C  01FC               	clrf	??___flmul+3
  5196     0D5D  0879               	movf	??___flmul,w
  5197     0D5E  07A9               	addwf	___flmul@grs,f
  5198     0D5F  087A               	movf	??___flmul+1,w
  5199     0D60  1103               	clrz
  5200     0D61  1803               	skipnc
  5201     0D62  3E01               	addlw	1
  5202     0D63  1903               	skipnz
  5203     0D64  2D66               	goto	u3391
  5204     0D65  07AA               	addwf	___flmul@grs+1,f
  5205     0D66                     u3391:
  5206     0D66  087B               	movf	??___flmul+2,w
  5207     0D67  1103               	clrz
  5208     0D68  1803               	skipnc
  5209     0D69  3E01               	addlw	1
  5210     0D6A  1903               	skipnz
  5211     0D6B  2D6D               	goto	u3392
  5212     0D6C  07AB               	addwf	___flmul@grs+2,f
  5213     0D6D                     u3392:
  5214     0D6D  087C               	movf	??___flmul+3,w
  5215     0D6E  1103               	clrz
  5216     0D6F  1803               	skipnc
  5217     0D70  3E01               	addlw	1
  5218     0D71  1903               	skipnz
  5219     0D72  2D74               	goto	u3393
  5220     0D73  07AC               	addwf	___flmul@grs+3,f
  5221     0D74                     u3393:
  5222     0D74                     l2719:
  5223     0D74  0834               	movf	___flmul@temp+1,w
  5224     0D75  00F9               	movwf	??___flmul
  5225     0D76  01FA               	clrf	??___flmul+1
  5226     0D77  01FB               	clrf	??___flmul+2
  5227     0D78  01FC               	clrf	??___flmul+3
  5228     0D79  0879               	movf	??___flmul,w
  5229     0D7A  07AF               	addwf	___flmul@prod,f
  5230     0D7B  087A               	movf	??___flmul+1,w
  5231     0D7C  1103               	clrz
  5232     0D7D  1803               	skipnc
  5233     0D7E  3E01               	addlw	1
  5234     0D7F  1903               	skipnz
  5235     0D80  2D82               	goto	u3401
  5236     0D81  07B0               	addwf	___flmul@prod+1,f
  5237     0D82                     u3401:
  5238     0D82  087B               	movf	??___flmul+2,w
  5239     0D83  1103               	clrz
  5240     0D84  1803               	skipnc
  5241     0D85  3E01               	addlw	1
  5242     0D86  1903               	skipnz
  5243     0D87  2D89               	goto	u3402
  5244     0D88  07B1               	addwf	___flmul@prod+2,f
  5245     0D89                     u3402:
  5246     0D89  087C               	movf	??___flmul+3,w
  5247     0D8A  1103               	clrz
  5248     0D8B  1803               	skipnc
  5249     0D8C  3E01               	addlw	1
  5250     0D8D  1903               	skipnz
  5251     0D8E  2D90               	goto	u3403
  5252     0D8F  07B2               	addwf	___flmul@prod+3,f
  5253     0D90                     u3403:
  5254     0D90  0822               	movf	___flmul@b+2,w
  5255     0D91  00F0               	movwf	__Umul8_16@multiplicand
  5256     0D92  0824               	movf	___flmul@a,w
  5257     0D93  160A  118A  20E3  120A  158A  	fcall	__Umul8_16
  5258     0D98  0871               	movf	?__Umul8_16+1,w
  5259     0D99  1283               	bcf	3,5	;RP0=0, select bank0
  5260     0D9A  1303               	bcf	3,6	;RP1=0, select bank0
  5261     0D9B  00B4               	movwf	___flmul@temp+1
  5262     0D9C  0870               	movf	?__Umul8_16,w
  5263     0D9D  00B3               	movwf	___flmul@temp
  5264     0D9E                     l2721:
  5265     0D9E  0833               	movf	___flmul@temp,w
  5266     0D9F  00F9               	movwf	??___flmul
  5267     0DA0  01FA               	clrf	??___flmul+1
  5268     0DA1  01FB               	clrf	??___flmul+2
  5269     0DA2  01FC               	clrf	??___flmul+3
  5270     0DA3  0879               	movf	??___flmul,w
  5271     0DA4  07A9               	addwf	___flmul@grs,f
  5272     0DA5  087A               	movf	??___flmul+1,w
  5273     0DA6  1103               	clrz
  5274     0DA7  1803               	skipnc
  5275     0DA8  3E01               	addlw	1
  5276     0DA9  1903               	skipnz
  5277     0DAA  2DAC               	goto	u3411
  5278     0DAB  07AA               	addwf	___flmul@grs+1,f
  5279     0DAC                     u3411:
  5280     0DAC  087B               	movf	??___flmul+2,w
  5281     0DAD  1103               	clrz
  5282     0DAE  1803               	skipnc
  5283     0DAF  3E01               	addlw	1
  5284     0DB0  1903               	skipnz
  5285     0DB1  2DB3               	goto	u3412
  5286     0DB2  07AB               	addwf	___flmul@grs+2,f
  5287     0DB3                     u3412:
  5288     0DB3  087C               	movf	??___flmul+3,w
  5289     0DB4  1103               	clrz
  5290     0DB5  1803               	skipnc
  5291     0DB6  3E01               	addlw	1
  5292     0DB7  1903               	skipnz
  5293     0DB8  2DBA               	goto	u3413
  5294     0DB9  07AC               	addwf	___flmul@grs+3,f
  5295     0DBA                     u3413:
  5296     0DBA                     l2723:
  5297     0DBA  0834               	movf	___flmul@temp+1,w
  5298     0DBB  00F9               	movwf	??___flmul
  5299     0DBC  01FA               	clrf	??___flmul+1
  5300     0DBD  01FB               	clrf	??___flmul+2
  5301     0DBE  01FC               	clrf	??___flmul+3
  5302     0DBF  0879               	movf	??___flmul,w
  5303     0DC0  07AF               	addwf	___flmul@prod,f
  5304     0DC1  087A               	movf	??___flmul+1,w
  5305     0DC2  1103               	clrz
  5306     0DC3  1803               	skipnc
  5307     0DC4  3E01               	addlw	1
  5308     0DC5  1903               	skipnz
  5309     0DC6  2DC8               	goto	u3421
  5310     0DC7  07B0               	addwf	___flmul@prod+1,f
  5311     0DC8                     u3421:
  5312     0DC8  087B               	movf	??___flmul+2,w
  5313     0DC9  1103               	clrz
  5314     0DCA  1803               	skipnc
  5315     0DCB  3E01               	addlw	1
  5316     0DCC  1903               	skipnz
  5317     0DCD  2DCF               	goto	u3422
  5318     0DCE  07B1               	addwf	___flmul@prod+2,f
  5319     0DCF                     u3422:
  5320     0DCF  087C               	movf	??___flmul+3,w
  5321     0DD0  1103               	clrz
  5322     0DD1  1803               	skipnc
  5323     0DD2  3E01               	addlw	1
  5324     0DD3  1903               	skipnz
  5325     0DD4  2DD6               	goto	u3423
  5326     0DD5  07B2               	addwf	___flmul@prod+3,f
  5327     0DD6                     u3423:
  5328     0DD6                     l2725:
  5329     0DD6  3008               	movlw	8
  5330     0DD7  00F9               	movwf	??___flmul
  5331     0DD8                     u3435:
  5332     0DD8  1003               	clrc
  5333     0DD9  0DA9               	rlf	___flmul@grs,f
  5334     0DDA  0DAA               	rlf	___flmul@grs+1,f
  5335     0DDB  0DAB               	rlf	___flmul@grs+2,f
  5336     0DDC  0DAC               	rlf	___flmul@grs+3,f
  5337     0DDD  0BF9               	decfsz	??___flmul,f
  5338     0DDE  2DD8               	goto	u3435
  5339     0DDF                     l2727:
  5340     0DDF  0821               	movf	___flmul@b+1,w
  5341     0DE0  00F0               	movwf	__Umul8_16@multiplicand
  5342     0DE1  0824               	movf	___flmul@a,w
  5343     0DE2  160A  118A  20E3  120A  158A  	fcall	__Umul8_16
  5344     0DE7  0871               	movf	?__Umul8_16+1,w
  5345     0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  5346     0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  5347     0DEA  00B4               	movwf	___flmul@temp+1
  5348     0DEB  0870               	movf	?__Umul8_16,w
  5349     0DEC  00B3               	movwf	___flmul@temp
  5350     0DED                     l2729:
  5351     0DED  0833               	movf	___flmul@temp,w
  5352     0DEE  00F9               	movwf	??___flmul
  5353     0DEF  0834               	movf	___flmul@temp+1,w
  5354     0DF0  00FA               	movwf	??___flmul+1
  5355     0DF1  01FB               	clrf	??___flmul+2
  5356     0DF2  01FC               	clrf	??___flmul+3
  5357     0DF3  0879               	movf	??___flmul,w
  5358     0DF4  07A9               	addwf	___flmul@grs,f
  5359     0DF5  087A               	movf	??___flmul+1,w
  5360     0DF6  1103               	clrz
  5361     0DF7  1803               	skipnc
  5362     0DF8  3E01               	addlw	1
  5363     0DF9  1903               	skipnz
  5364     0DFA  2DFC               	goto	u3441
  5365     0DFB  07AA               	addwf	___flmul@grs+1,f
  5366     0DFC                     u3441:
  5367     0DFC  087B               	movf	??___flmul+2,w
  5368     0DFD  1103               	clrz
  5369     0DFE  1803               	skipnc
  5370     0DFF  3E01               	addlw	1
  5371     0E00  1903               	skipnz
  5372     0E01  2E03               	goto	u3442
  5373     0E02  07AB               	addwf	___flmul@grs+2,f
  5374     0E03                     u3442:
  5375     0E03  087C               	movf	??___flmul+3,w
  5376     0E04  1103               	clrz
  5377     0E05  1803               	skipnc
  5378     0E06  3E01               	addlw	1
  5379     0E07  1903               	skipnz
  5380     0E08  2E0A               	goto	u3443
  5381     0E09  07AC               	addwf	___flmul@grs+3,f
  5382     0E0A                     u3443:
  5383     0E0A                     l2731:
  5384     0E0A  0820               	movf	___flmul@b,w
  5385     0E0B  00F0               	movwf	__Umul8_16@multiplicand
  5386     0E0C  0825               	movf	___flmul@a+1,w
  5387     0E0D  160A  118A  20E3  120A  158A  	fcall	__Umul8_16
  5388     0E12  0871               	movf	?__Umul8_16+1,w
  5389     0E13  1283               	bcf	3,5	;RP0=0, select bank0
  5390     0E14  1303               	bcf	3,6	;RP1=0, select bank0
  5391     0E15  00B4               	movwf	___flmul@temp+1
  5392     0E16  0870               	movf	?__Umul8_16,w
  5393     0E17  00B3               	movwf	___flmul@temp
  5394     0E18                     l2733:
  5395     0E18  0833               	movf	___flmul@temp,w
  5396     0E19  00F9               	movwf	??___flmul
  5397     0E1A  0834               	movf	___flmul@temp+1,w
  5398     0E1B  00FA               	movwf	??___flmul+1
  5399     0E1C  01FB               	clrf	??___flmul+2
  5400     0E1D  01FC               	clrf	??___flmul+3
  5401     0E1E  0879               	movf	??___flmul,w
  5402     0E1F  07A9               	addwf	___flmul@grs,f
  5403     0E20  087A               	movf	??___flmul+1,w
  5404     0E21  1103               	clrz
  5405     0E22  1803               	skipnc
  5406     0E23  3E01               	addlw	1
  5407     0E24  1903               	skipnz
  5408     0E25  2E27               	goto	u3451
  5409     0E26  07AA               	addwf	___flmul@grs+1,f
  5410     0E27                     u3451:
  5411     0E27  087B               	movf	??___flmul+2,w
  5412     0E28  1103               	clrz
  5413     0E29  1803               	skipnc
  5414     0E2A  3E01               	addlw	1
  5415     0E2B  1903               	skipnz
  5416     0E2C  2E2E               	goto	u3452
  5417     0E2D  07AB               	addwf	___flmul@grs+2,f
  5418     0E2E                     u3452:
  5419     0E2E  087C               	movf	??___flmul+3,w
  5420     0E2F  1103               	clrz
  5421     0E30  1803               	skipnc
  5422     0E31  3E01               	addlw	1
  5423     0E32  1903               	skipnz
  5424     0E33  2E35               	goto	u3453
  5425     0E34  07AC               	addwf	___flmul@grs+3,f
  5426     0E35                     u3453:
  5427     0E35                     l2735:
  5428     0E35  3008               	movlw	8
  5429     0E36  00F9               	movwf	??___flmul
  5430     0E37                     u3465:
  5431     0E37  1003               	clrc
  5432     0E38  0DA9               	rlf	___flmul@grs,f
  5433     0E39  0DAA               	rlf	___flmul@grs+1,f
  5434     0E3A  0DAB               	rlf	___flmul@grs+2,f
  5435     0E3B  0DAC               	rlf	___flmul@grs+3,f
  5436     0E3C  0BF9               	decfsz	??___flmul,f
  5437     0E3D  2E37               	goto	u3465
  5438     0E3E  0820               	movf	___flmul@b,w
  5439     0E3F  00F0               	movwf	__Umul8_16@multiplicand
  5440     0E40  0824               	movf	___flmul@a,w
  5441     0E41  160A  118A  20E3  120A  158A  	fcall	__Umul8_16
  5442     0E46  0871               	movf	?__Umul8_16+1,w
  5443     0E47  1283               	bcf	3,5	;RP0=0, select bank0
  5444     0E48  1303               	bcf	3,6	;RP1=0, select bank0
  5445     0E49  00B4               	movwf	___flmul@temp+1
  5446     0E4A  0870               	movf	?__Umul8_16,w
  5447     0E4B  00B3               	movwf	___flmul@temp
  5448     0E4C                     l2737:
  5449     0E4C  0833               	movf	___flmul@temp,w
  5450     0E4D  00F9               	movwf	??___flmul
  5451     0E4E  0834               	movf	___flmul@temp+1,w
  5452     0E4F  00FA               	movwf	??___flmul+1
  5453     0E50  01FB               	clrf	??___flmul+2
  5454     0E51  01FC               	clrf	??___flmul+3
  5455     0E52  0879               	movf	??___flmul,w
  5456     0E53  07A9               	addwf	___flmul@grs,f
  5457     0E54  087A               	movf	??___flmul+1,w
  5458     0E55  1103               	clrz
  5459     0E56  1803               	skipnc
  5460     0E57  3E01               	addlw	1
  5461     0E58  1903               	skipnz
  5462     0E59  2E5B               	goto	u3471
  5463     0E5A  07AA               	addwf	___flmul@grs+1,f
  5464     0E5B                     u3471:
  5465     0E5B  087B               	movf	??___flmul+2,w
  5466     0E5C  1103               	clrz
  5467     0E5D  1803               	skipnc
  5468     0E5E  3E01               	addlw	1
  5469     0E5F  1903               	skipnz
  5470     0E60  2E62               	goto	u3472
  5471     0E61  07AB               	addwf	___flmul@grs+2,f
  5472     0E62                     u3472:
  5473     0E62  087C               	movf	??___flmul+3,w
  5474     0E63  1103               	clrz
  5475     0E64  1803               	skipnc
  5476     0E65  3E01               	addlw	1
  5477     0E66  1903               	skipnz
  5478     0E67  2E69               	goto	u3473
  5479     0E68  07AC               	addwf	___flmul@grs+3,f
  5480     0E69                     u3473:
  5481     0E69                     l2739:
  5482     0E69  0821               	movf	___flmul@b+1,w
  5483     0E6A  00F0               	movwf	__Umul8_16@multiplicand
  5484     0E6B  0826               	movf	___flmul@a+2,w
  5485     0E6C  160A  118A  20E3  120A  158A  	fcall	__Umul8_16
  5486     0E71  0871               	movf	?__Umul8_16+1,w
  5487     0E72  1283               	bcf	3,5	;RP0=0, select bank0
  5488     0E73  1303               	bcf	3,6	;RP1=0, select bank0
  5489     0E74  00B4               	movwf	___flmul@temp+1
  5490     0E75  0870               	movf	?__Umul8_16,w
  5491     0E76  00B3               	movwf	___flmul@temp
  5492     0E77  0833               	movf	___flmul@temp,w
  5493     0E78  00F9               	movwf	??___flmul
  5494     0E79  0834               	movf	___flmul@temp+1,w
  5495     0E7A  00FA               	movwf	??___flmul+1
  5496     0E7B  01FB               	clrf	??___flmul+2
  5497     0E7C  01FC               	clrf	??___flmul+3
  5498     0E7D  0879               	movf	??___flmul,w
  5499     0E7E  07AF               	addwf	___flmul@prod,f
  5500     0E7F  087A               	movf	??___flmul+1,w
  5501     0E80  1103               	clrz
  5502     0E81  1803               	skipnc
  5503     0E82  3E01               	addlw	1
  5504     0E83  1903               	skipnz
  5505     0E84  2E86               	goto	u3481
  5506     0E85  07B0               	addwf	___flmul@prod+1,f
  5507     0E86                     u3481:
  5508     0E86  087B               	movf	??___flmul+2,w
  5509     0E87  1103               	clrz
  5510     0E88  1803               	skipnc
  5511     0E89  3E01               	addlw	1
  5512     0E8A  1903               	skipnz
  5513     0E8B  2E8D               	goto	u3482
  5514     0E8C  07B1               	addwf	___flmul@prod+2,f
  5515     0E8D                     u3482:
  5516     0E8D  087C               	movf	??___flmul+3,w
  5517     0E8E  1103               	clrz
  5518     0E8F  1803               	skipnc
  5519     0E90  3E01               	addlw	1
  5520     0E91  1903               	skipnz
  5521     0E92  2E94               	goto	u3483
  5522     0E93  07B2               	addwf	___flmul@prod+3,f
  5523     0E94                     u3483:
  5524     0E94                     l2741:
  5525     0E94  0822               	movf	___flmul@b+2,w
  5526     0E95  00F0               	movwf	__Umul8_16@multiplicand
  5527     0E96  0825               	movf	___flmul@a+1,w
  5528     0E97  160A  118A  20E3  120A  158A  	fcall	__Umul8_16
  5529     0E9C  0871               	movf	?__Umul8_16+1,w
  5530     0E9D  1283               	bcf	3,5	;RP0=0, select bank0
  5531     0E9E  1303               	bcf	3,6	;RP1=0, select bank0
  5532     0E9F  00B4               	movwf	___flmul@temp+1
  5533     0EA0  0870               	movf	?__Umul8_16,w
  5534     0EA1  00B3               	movwf	___flmul@temp
  5535     0EA2                     l2743:
  5536     0EA2  0833               	movf	___flmul@temp,w
  5537     0EA3  00F9               	movwf	??___flmul
  5538     0EA4  0834               	movf	___flmul@temp+1,w
  5539     0EA5  00FA               	movwf	??___flmul+1
  5540     0EA6  01FB               	clrf	??___flmul+2
  5541     0EA7  01FC               	clrf	??___flmul+3
  5542     0EA8  0879               	movf	??___flmul,w
  5543     0EA9  07AF               	addwf	___flmul@prod,f
  5544     0EAA  087A               	movf	??___flmul+1,w
  5545     0EAB  1103               	clrz
  5546     0EAC  1803               	skipnc
  5547     0EAD  3E01               	addlw	1
  5548     0EAE  1903               	skipnz
  5549     0EAF  2EB1               	goto	u3491
  5550     0EB0  07B0               	addwf	___flmul@prod+1,f
  5551     0EB1                     u3491:
  5552     0EB1  087B               	movf	??___flmul+2,w
  5553     0EB2  1103               	clrz
  5554     0EB3  1803               	skipnc
  5555     0EB4  3E01               	addlw	1
  5556     0EB5  1903               	skipnz
  5557     0EB6  2EB8               	goto	u3492
  5558     0EB7  07B1               	addwf	___flmul@prod+2,f
  5559     0EB8                     u3492:
  5560     0EB8  087C               	movf	??___flmul+3,w
  5561     0EB9  1103               	clrz
  5562     0EBA  1803               	skipnc
  5563     0EBB  3E01               	addlw	1
  5564     0EBC  1903               	skipnz
  5565     0EBD  2EBF               	goto	u3493
  5566     0EBE  07B2               	addwf	___flmul@prod+3,f
  5567     0EBF                     u3493:
  5568     0EBF  0822               	movf	___flmul@b+2,w
  5569     0EC0  00F0               	movwf	__Umul8_16@multiplicand
  5570     0EC1  0826               	movf	___flmul@a+2,w
  5571     0EC2  160A  118A  20E3  120A  158A  	fcall	__Umul8_16
  5572     0EC7  0871               	movf	?__Umul8_16+1,w
  5573     0EC8  1283               	bcf	3,5	;RP0=0, select bank0
  5574     0EC9  1303               	bcf	3,6	;RP1=0, select bank0
  5575     0ECA  00B4               	movwf	___flmul@temp+1
  5576     0ECB  0870               	movf	?__Umul8_16,w
  5577     0ECC  00B3               	movwf	___flmul@temp
  5578     0ECD                     l2745:
  5579     0ECD  0833               	movf	___flmul@temp,w
  5580     0ECE  00F9               	movwf	??___flmul
  5581     0ECF  0834               	movf	___flmul@temp+1,w
  5582     0ED0  00FA               	movwf	??___flmul+1
  5583     0ED1  01FB               	clrf	??___flmul+2
  5584     0ED2  01FC               	clrf	??___flmul+3
  5585     0ED3  3008               	movlw	8
  5586     0ED4                     u3505:
  5587     0ED4  1003               	clrc
  5588     0ED5  0DF9               	rlf	??___flmul,f
  5589     0ED6  0DFA               	rlf	??___flmul+1,f
  5590     0ED7  0DFB               	rlf	??___flmul+2,f
  5591     0ED8  0DFC               	rlf	??___flmul+3,f
  5592     0ED9                     u3500:
  5593     0ED9  3EFF               	addlw	-1
  5594     0EDA  1D03               	skipz
  5595     0EDB  2ED4               	goto	u3505
  5596     0EDC  0879               	movf	??___flmul,w
  5597     0EDD  07AF               	addwf	___flmul@prod,f
  5598     0EDE  087A               	movf	??___flmul+1,w
  5599     0EDF  1103               	clrz
  5600     0EE0  1803               	skipnc
  5601     0EE1  3E01               	addlw	1
  5602     0EE2  1903               	skipnz
  5603     0EE3  2EE5               	goto	u3511
  5604     0EE4  07B0               	addwf	___flmul@prod+1,f
  5605     0EE5                     u3511:
  5606     0EE5  087B               	movf	??___flmul+2,w
  5607     0EE6  1103               	clrz
  5608     0EE7  1803               	skipnc
  5609     0EE8  3E01               	addlw	1
  5610     0EE9  1903               	skipnz
  5611     0EEA  2EEC               	goto	u3512
  5612     0EEB  07B1               	addwf	___flmul@prod+2,f
  5613     0EEC                     u3512:
  5614     0EEC  087C               	movf	??___flmul+3,w
  5615     0EED  1103               	clrz
  5616     0EEE  1803               	skipnc
  5617     0EEF  3E01               	addlw	1
  5618     0EF0  1903               	skipnz
  5619     0EF1  2EF3               	goto	u3513
  5620     0EF2  07B2               	addwf	___flmul@prod+3,f
  5621     0EF3                     u3513:
  5622     0EF3                     l2747:
  5623     0EF3  0829               	movf	___flmul@grs,w
  5624     0EF4  00F9               	movwf	??___flmul
  5625     0EF5  082A               	movf	___flmul@grs+1,w
  5626     0EF6  00FA               	movwf	??___flmul+1
  5627     0EF7  082B               	movf	___flmul@grs+2,w
  5628     0EF8  00FB               	movwf	??___flmul+2
  5629     0EF9  082C               	movf	___flmul@grs+3,w
  5630     0EFA  00FC               	movwf	??___flmul+3
  5631     0EFB  3018               	movlw	24
  5632     0EFC                     u3525:
  5633     0EFC  1003               	clrc
  5634     0EFD  0CFC               	rrf	??___flmul+3,f
  5635     0EFE  0CFB               	rrf	??___flmul+2,f
  5636     0EFF  0CFA               	rrf	??___flmul+1,f
  5637     0F00  0CF9               	rrf	??___flmul,f
  5638     0F01                     u3520:
  5639     0F01  3EFF               	addlw	-1
  5640     0F02  1D03               	skipz
  5641     0F03  2EFC               	goto	u3525
  5642     0F04  0879               	movf	??___flmul,w
  5643     0F05  07AF               	addwf	___flmul@prod,f
  5644     0F06  087A               	movf	??___flmul+1,w
  5645     0F07  1103               	clrz
  5646     0F08  1803               	skipnc
  5647     0F09  3E01               	addlw	1
  5648     0F0A  1903               	skipnz
  5649     0F0B  2F0D               	goto	u3531
  5650     0F0C  07B0               	addwf	___flmul@prod+1,f
  5651     0F0D                     u3531:
  5652     0F0D  087B               	movf	??___flmul+2,w
  5653     0F0E  1103               	clrz
  5654     0F0F  1803               	skipnc
  5655     0F10  3E01               	addlw	1
  5656     0F11  1903               	skipnz
  5657     0F12  2F14               	goto	u3532
  5658     0F13  07B1               	addwf	___flmul@prod+2,f
  5659     0F14                     u3532:
  5660     0F14  087C               	movf	??___flmul+3,w
  5661     0F15  1103               	clrz
  5662     0F16  1803               	skipnc
  5663     0F17  3E01               	addlw	1
  5664     0F18  1903               	skipnz
  5665     0F19  2F1B               	goto	u3533
  5666     0F1A  07B2               	addwf	___flmul@prod+3,f
  5667     0F1B                     u3533:
  5668     0F1B                     l2749:
  5669     0F1B  3008               	movlw	8
  5670     0F1C  00F9               	movwf	??___flmul
  5671     0F1D                     u3545:
  5672     0F1D  1003               	clrc
  5673     0F1E  0DA9               	rlf	___flmul@grs,f
  5674     0F1F  0DAA               	rlf	___flmul@grs+1,f
  5675     0F20  0DAB               	rlf	___flmul@grs+2,f
  5676     0F21  0DAC               	rlf	___flmul@grs+3,f
  5677     0F22  0BF9               	decfsz	??___flmul,f
  5678     0F23  2F1D               	goto	u3545
  5679     0F24                     l2751:
  5680     0F24  082E               	movf	___flmul@bexp,w
  5681     0F25  072D               	addwf	___flmul@aexp,w
  5682     0F26  00F9               	movwf	??___flmul
  5683     0F27  01FA               	clrf	??___flmul+1
  5684     0F28  0DFA               	rlf	??___flmul+1,f
  5685     0F29  0879               	movf	??___flmul,w
  5686     0F2A  3E82               	addlw	130
  5687     0F2B  00B3               	movwf	___flmul@temp
  5688     0F2C  087A               	movf	??___flmul+1,w
  5689     0F2D  1803               	skipnc
  5690     0F2E  3E01               	addlw	1
  5691     0F2F  3EFF               	addlw	255
  5692     0F30  00B4               	movwf	___flmul@temp+1
  5693     0F31  2F4F               	goto	l2763
  5694     0F32                     l2753:
  5695     0F32  3001               	movlw	1
  5696     0F33  00F9               	movwf	??___flmul
  5697     0F34                     u3555:
  5698     0F34  1003               	clrc
  5699     0F35  0DAF               	rlf	___flmul@prod,f
  5700     0F36  0DB0               	rlf	___flmul@prod+1,f
  5701     0F37  0DB1               	rlf	___flmul@prod+2,f
  5702     0F38  0DB2               	rlf	___flmul@prod+3,f
  5703     0F39  0BF9               	decfsz	??___flmul,f
  5704     0F3A  2F34               	goto	u3555
  5705     0F3B                     l2755:
  5706     0F3B  1FAC               	btfss	___flmul@grs+3,7
  5707     0F3C  2F3E               	goto	u3561
  5708     0F3D  2F3F               	goto	u3560
  5709     0F3E                     u3561:
  5710     0F3E  2F40               	goto	l2759
  5711     0F3F                     u3560:
  5712     0F3F                     l2757:
  5713     0F3F  142F               	bsf	___flmul@prod,0
  5714     0F40                     l2759:
  5715     0F40  3001               	movlw	1
  5716     0F41  00F9               	movwf	??___flmul
  5717     0F42                     u3575:
  5718     0F42  1003               	clrc
  5719     0F43  0DA9               	rlf	___flmul@grs,f
  5720     0F44  0DAA               	rlf	___flmul@grs+1,f
  5721     0F45  0DAB               	rlf	___flmul@grs+2,f
  5722     0F46  0DAC               	rlf	___flmul@grs+3,f
  5723     0F47  0BF9               	decfsz	??___flmul,f
  5724     0F48  2F42               	goto	u3575
  5725     0F49                     l2761:
  5726     0F49  30FF               	movlw	255
  5727     0F4A  07B3               	addwf	___flmul@temp,f
  5728     0F4B  1803               	skipnc
  5729     0F4C  0AB4               	incf	___flmul@temp+1,f
  5730     0F4D  30FF               	movlw	255
  5731     0F4E  07B4               	addwf	___flmul@temp+1,f
  5732     0F4F                     l2763:
  5733     0F4F  1FB1               	btfss	___flmul@prod+2,7
  5734     0F50  2F52               	goto	u3581
  5735     0F51  2F53               	goto	u3580
  5736     0F52                     u3581:
  5737     0F52  2F32               	goto	l2753
  5738     0F53                     u3580:
  5739     0F53                     l2765:
  5740     0F53  01AD               	clrf	___flmul@aexp
  5741     0F54                     l2767:
  5742     0F54  1FAC               	btfss	___flmul@grs+3,7
  5743     0F55  2F57               	goto	u3591
  5744     0F56  2F58               	goto	u3590
  5745     0F57                     u3591:
  5746     0F57  2F74               	goto	l2775
  5747     0F58                     u3590:
  5748     0F58                     l2769:
  5749     0F58  30FF               	movlw	255
  5750     0F59  0529               	andwf	___flmul@grs,w
  5751     0F5A  00F9               	movwf	??___flmul
  5752     0F5B  30FF               	movlw	255
  5753     0F5C  052A               	andwf	___flmul@grs+1,w
  5754     0F5D  00FA               	movwf	??___flmul+1
  5755     0F5E  30FF               	movlw	255
  5756     0F5F  052B               	andwf	___flmul@grs+2,w
  5757     0F60  00FB               	movwf	??___flmul+2
  5758     0F61  307F               	movlw	127
  5759     0F62  052C               	andwf	___flmul@grs+3,w
  5760     0F63  00FC               	movwf	??___flmul+3
  5761     0F64  087C               	movf	??___flmul+3,w
  5762     0F65  047B               	iorwf	??___flmul+2,w
  5763     0F66  047A               	iorwf	??___flmul+1,w
  5764     0F67  0479               	iorwf	??___flmul,w
  5765     0F68  1903               	skipnz
  5766     0F69  2F6B               	goto	u3601
  5767     0F6A  2F6C               	goto	u3600
  5768     0F6B                     u3601:
  5769     0F6B  2F6F               	goto	l619
  5770     0F6C                     u3600:
  5771     0F6C                     l2771:
  5772     0F6C  01AD               	clrf	___flmul@aexp
  5773     0F6D  0AAD               	incf	___flmul@aexp,f
  5774     0F6E  2F74               	goto	l2775
  5775     0F6F                     l619:
  5776     0F6F  1C2F               	btfss	___flmul@prod,0
  5777     0F70  2F72               	goto	u3611
  5778     0F71  2F73               	goto	u3610
  5779     0F72                     u3611:
  5780     0F72  2F74               	goto	l2775
  5781     0F73                     u3610:
  5782     0F73  2F6C               	goto	l2771
  5783     0F74                     l2775:
  5784     0F74  082D               	movf	___flmul@aexp,w
  5785     0F75  1903               	btfsc	3,2
  5786     0F76  2F78               	goto	u3621
  5787     0F77  2F79               	goto	u3620
  5788     0F78                     u3621:
  5789     0F78  2FAA               	goto	l2785
  5790     0F79                     u3620:
  5791     0F79                     l2777:
  5792     0F79  3001               	movlw	1
  5793     0F7A  07AF               	addwf	___flmul@prod,f
  5794     0F7B  3000               	movlw	0
  5795     0F7C  1803               	skipnc
  5796     0F7D  3001               	movlw	1
  5797     0F7E  07B0               	addwf	___flmul@prod+1,f
  5798     0F7F  3000               	movlw	0
  5799     0F80  1803               	skipnc
  5800     0F81  3001               	movlw	1
  5801     0F82  07B1               	addwf	___flmul@prod+2,f
  5802     0F83  3000               	movlw	0
  5803     0F84  1803               	skipnc
  5804     0F85  3001               	movlw	1
  5805     0F86  07B2               	addwf	___flmul@prod+3,f
  5806     0F87                     l2779:
  5807     0F87  1C32               	btfss	___flmul@prod+3,0
  5808     0F88  2F8A               	goto	u3631
  5809     0F89  2F8B               	goto	u3630
  5810     0F8A                     u3631:
  5811     0F8A  2FAA               	goto	l2785
  5812     0F8B                     u3630:
  5813     0F8B                     l2781:
  5814     0F8B  082F               	movf	___flmul@prod,w
  5815     0F8C  00F9               	movwf	??___flmul
  5816     0F8D  0830               	movf	___flmul@prod+1,w
  5817     0F8E  00FA               	movwf	??___flmul+1
  5818     0F8F  0831               	movf	___flmul@prod+2,w
  5819     0F90  00FB               	movwf	??___flmul+2
  5820     0F91  0832               	movf	___flmul@prod+3,w
  5821     0F92  00FC               	movwf	??___flmul+3
  5822     0F93  3001               	movlw	1
  5823     0F94  00FD               	movwf	??___flmul+4
  5824     0F95                     u3645:
  5825     0F95  0D7C               	rlf	??___flmul+3,w
  5826     0F96  0CFC               	rrf	??___flmul+3,f
  5827     0F97  0CFB               	rrf	??___flmul+2,f
  5828     0F98  0CFA               	rrf	??___flmul+1,f
  5829     0F99  0CF9               	rrf	??___flmul,f
  5830     0F9A                     u3640:
  5831     0F9A  0BFD               	decfsz	??___flmul+4,f
  5832     0F9B  2F95               	goto	u3645
  5833     0F9C  087C               	movf	??___flmul+3,w
  5834     0F9D  00B2               	movwf	___flmul@prod+3
  5835     0F9E  087B               	movf	??___flmul+2,w
  5836     0F9F  00B1               	movwf	___flmul@prod+2
  5837     0FA0  087A               	movf	??___flmul+1,w
  5838     0FA1  00B0               	movwf	___flmul@prod+1
  5839     0FA2  0879               	movf	??___flmul,w
  5840     0FA3  00AF               	movwf	___flmul@prod
  5841     0FA4                     l2783:
  5842     0FA4  3001               	movlw	1
  5843     0FA5  07B3               	addwf	___flmul@temp,f
  5844     0FA6  1803               	skipnc
  5845     0FA7  0AB4               	incf	___flmul@temp+1,f
  5846     0FA8  3000               	movlw	0
  5847     0FA9  07B4               	addwf	___flmul@temp+1,f
  5848     0FAA                     l2785:
  5849     0FAA  0834               	movf	___flmul@temp+1,w
  5850     0FAB  3A80               	xorlw	128
  5851     0FAC  00FF               	movwf	btemp+1
  5852     0FAD  3080               	movlw	128
  5853     0FAE  027F               	subwf	btemp+1,w
  5854     0FAF  1D03               	skipz
  5855     0FB0  2FB3               	goto	u3655
  5856     0FB1  30FF               	movlw	255
  5857     0FB2  0233               	subwf	___flmul@temp,w
  5858     0FB3                     u3655:
  5859     0FB3  1C03               	skipc
  5860     0FB4  2FB6               	goto	u3651
  5861     0FB5  2FB7               	goto	u3650
  5862     0FB6                     u3651:
  5863     0FB6  2FC2               	goto	l2789
  5864     0FB7                     u3650:
  5865     0FB7                     l2787:
  5866     0FB7  307F               	movlw	127
  5867     0FB8  1283               	bcf	3,5	;RP0=0, select bank0
  5868     0FB9  1303               	bcf	3,6	;RP1=0, select bank0
  5869     0FBA  00B2               	movwf	___flmul@prod+3
  5870     0FBB  3080               	movlw	128
  5871     0FBC  00B1               	movwf	___flmul@prod+2
  5872     0FBD  3000               	movlw	0
  5873     0FBE  00B0               	movwf	___flmul@prod+1
  5874     0FBF  3000               	movlw	0
  5875     0FC0  00AF               	movwf	___flmul@prod
  5876     0FC1  2FF3               	goto	l2803
  5877     0FC2                     l2789:
  5878     0FC2  1283               	bcf	3,5	;RP0=0, select bank0
  5879     0FC3  1303               	bcf	3,6	;RP1=0, select bank0
  5880     0FC4  0834               	movf	___flmul@temp+1,w
  5881     0FC5  3A80               	xorlw	128
  5882     0FC6  00FF               	movwf	btemp+1
  5883     0FC7  3080               	movlw	128
  5884     0FC8  027F               	subwf	btemp+1,w
  5885     0FC9  1D03               	skipz
  5886     0FCA  2FCD               	goto	u3665
  5887     0FCB  3001               	movlw	1
  5888     0FCC  0233               	subwf	___flmul@temp,w
  5889     0FCD                     u3665:
  5890     0FCD  1803               	skipnc
  5891     0FCE  2FD0               	goto	u3661
  5892     0FCF  2FD1               	goto	u3660
  5893     0FD0                     u3661:
  5894     0FD0  2FDD               	goto	l2795
  5895     0FD1                     u3660:
  5896     0FD1                     l2791:
  5897     0FD1  3000               	movlw	0
  5898     0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  5899     0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  5900     0FD4  00B2               	movwf	___flmul@prod+3
  5901     0FD5  3000               	movlw	0
  5902     0FD6  00B1               	movwf	___flmul@prod+2
  5903     0FD7  3000               	movlw	0
  5904     0FD8  00B0               	movwf	___flmul@prod+1
  5905     0FD9  3000               	movlw	0
  5906     0FDA  00AF               	movwf	___flmul@prod
  5907     0FDB                     l2793:
  5908     0FDB  01A8               	clrf	___flmul@sign
  5909     0FDC  2FF3               	goto	l2803
  5910     0FDD                     l2795:
  5911     0FDD  1283               	bcf	3,5	;RP0=0, select bank0
  5912     0FDE  1303               	bcf	3,6	;RP1=0, select bank0
  5913     0FDF  0833               	movf	___flmul@temp,w
  5914     0FE0  00AE               	movwf	___flmul@bexp
  5915     0FE1  30FF               	movlw	255
  5916     0FE2  05AF               	andwf	___flmul@prod,f
  5917     0FE3  30FF               	movlw	255
  5918     0FE4  05B0               	andwf	___flmul@prod+1,f
  5919     0FE5  307F               	movlw	127
  5920     0FE6  05B1               	andwf	___flmul@prod+2,f
  5921     0FE7  3000               	movlw	0
  5922     0FE8  05B2               	andwf	___flmul@prod+3,f
  5923     0FE9                     l2797:
  5924     0FE9  1C2E               	btfss	___flmul@bexp,0
  5925     0FEA  2FEC               	goto	u3671
  5926     0FEB  2FED               	goto	u3670
  5927     0FEC                     u3671:
  5928     0FEC  2FEE               	goto	l2801
  5929     0FED                     u3670:
  5930     0FED                     l2799:
  5931     0FED  17B1               	bsf	___flmul@prod+2,7
  5932     0FEE                     l2801:
  5933     0FEE  082E               	movf	___flmul@bexp,w
  5934     0FEF  00F9               	movwf	??___flmul
  5935     0FF0  1003               	clrc
  5936     0FF1  0C79               	rrf	??___flmul,w
  5937     0FF2  00B2               	movwf	___flmul@prod+3
  5938     0FF3                     l2803:
  5939     0FF3  0828               	movf	___flmul@sign,w
  5940     0FF4  00FF               	movwf	btemp+1
  5941     0FF5  087F               	movf	btemp+1,w
  5942     0FF6  04B2               	iorwf	___flmul@prod+3,f
  5943     0FF7                     l2805:
  5944     0FF7  0832               	movf	___flmul@prod+3,w
  5945     0FF8  00A3               	movwf	?___flmul+3
  5946     0FF9  0831               	movf	___flmul@prod+2,w
  5947     0FFA  00A2               	movwf	?___flmul+2
  5948     0FFB  0830               	movf	___flmul@prod+1,w
  5949     0FFC  00A1               	movwf	?___flmul+1
  5950     0FFD  082F               	movf	___flmul@prod,w
  5951     0FFE  00A0               	movwf	?___flmul
  5952     0FFF                     l613:
  5953     0FFF  0008               	return
  5954     1000                     __end_of___flmul:
  5955                           
  5956                           	psect	text21
  5957     10E3                     __ptext21:	
  5958 ;; *************** function __Umul8_16 *****************
  5959 ;; Defined at:
  5960 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul8_16.c"
  5961 ;; Parameters:    Size  Location     Type
  5962 ;;  multiplier      1    wreg     unsigned char 
  5963 ;;  multiplicand    1    0[COMMON] unsigned char 
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  multiplier      1    8[COMMON] unsigned char 
  5966 ;;  word_mpld       2    6[COMMON] unsigned short 
  5967 ;;  product         2    4[COMMON] unsigned short 
  5968 ;; Return value:  Size  Location     Type
  5969 ;;                  2    0[COMMON] unsigned int 
  5970 ;; Registers used:
  5971 ;;		wreg, status,2, status,0
  5972 ;; Tracked objects:
  5973 ;;		On entry : 0/0
  5974 ;;		On exit  : 0/0
  5975 ;;		Unchanged: 0/0
  5976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5977 ;;      Params:         2       0       0       0       0
  5978 ;;      Locals:         5       0       0       0       0
  5979 ;;      Temps:          2       0       0       0       0
  5980 ;;      Totals:         9       0       0       0       0
  5981 ;;Total ram usage:        9 bytes
  5982 ;; Hardware stack levels used: 1
  5983 ;; This function calls:
  5984 ;;		Nothing
  5985 ;; This function is called by:
  5986 ;;		___flmul
  5987 ;; This function uses a non-reentrant model
  5988 ;;
  5989                           
  5990     10E3                     __Umul8_16:	
  5991                           ;psect for function __Umul8_16
  5992                           
  5993                           
  5994                           ;incstack = 0
  5995                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5996                           ;__Umul8_16@multiplier stored from wreg
  5997     10E3  00F8               	movwf	__Umul8_16@multiplier
  5998     10E4                     l2401:
  5999     10E4  01F4               	clrf	__Umul8_16@product
  6000     10E5  01F5               	clrf	__Umul8_16@product+1
  6001     10E6                     l2403:
  6002     10E6  0870               	movf	__Umul8_16@multiplicand,w
  6003     10E7  00F2               	movwf	??__Umul8_16
  6004     10E8  01F3               	clrf	??__Umul8_16+1
  6005     10E9  0872               	movf	??__Umul8_16,w
  6006     10EA  00F6               	movwf	__Umul8_16@word_mpld
  6007     10EB  0873               	movf	??__Umul8_16+1,w
  6008     10EC  00F7               	movwf	__Umul8_16@word_mpld+1
  6009     10ED                     l2405:
  6010     10ED  1C78               	btfss	__Umul8_16@multiplier,0
  6011     10EE  28F0               	goto	u2721
  6012     10EF  28F1               	goto	u2720
  6013     10F0                     u2721:
  6014     10F0  28F7               	goto	l632
  6015     10F1                     u2720:
  6016     10F1                     l2407:
  6017     10F1  0876               	movf	__Umul8_16@word_mpld,w
  6018     10F2  07F4               	addwf	__Umul8_16@product,f
  6019     10F3  1803               	skipnc
  6020     10F4  0AF5               	incf	__Umul8_16@product+1,f
  6021     10F5  0877               	movf	__Umul8_16@word_mpld+1,w
  6022     10F6  07F5               	addwf	__Umul8_16@product+1,f
  6023     10F7                     l632:
  6024     10F7  3001               	movlw	1
  6025     10F8                     u2735:
  6026     10F8  1003               	clrc
  6027     10F9  0DF6               	rlf	__Umul8_16@word_mpld,f
  6028     10FA  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6029     10FB  3EFF               	addlw	-1
  6030     10FC  1D03               	skipz
  6031     10FD  28F8               	goto	u2735
  6032     10FE  1003               	clrc
  6033     10FF  0CF8               	rrf	__Umul8_16@multiplier,f
  6034     1100                     l2409:
  6035     1100  0878               	movf	__Umul8_16@multiplier,w
  6036     1101  1D03               	btfss	3,2
  6037     1102  2904               	goto	u2741
  6038     1103  2905               	goto	u2740
  6039     1104                     u2741:
  6040     1104  28ED               	goto	l2405
  6041     1105                     u2740:
  6042     1105                     l2411:
  6043     1105  0875               	movf	__Umul8_16@product+1,w
  6044     1106  00F1               	movwf	?__Umul8_16+1
  6045     1107  0874               	movf	__Umul8_16@product,w
  6046     1108  00F0               	movwf	?__Umul8_16
  6047     1109                     l634:
  6048     1109  0008               	return
  6049     110A                     __end_of__Umul8_16:
  6050                           
  6051                           	psect	text22
  6052     003F                     __ptext22:	
  6053 ;; *************** function ___flge *****************
  6054 ;; Defined at:
  6055 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  ff1             4   21[BANK0 ] unsigned int 
  6058 ;;  ff2             4   25[BANK0 ] unsigned int 
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;		None
  6061 ;; Return value:  Size  Location     Type
  6062 ;;		None               void
  6063 ;; Registers used:
  6064 ;;		wreg, status,2, status,0
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6070 ;;      Params:         0       8       0       0       0
  6071 ;;      Locals:         0       0       0       0       0
  6072 ;;      Temps:          0       4       0       0       0
  6073 ;;      Totals:         0      12       0       0       0
  6074 ;;Total ram usage:       12 bytes
  6075 ;; Hardware stack levels used: 1
  6076 ;; This function calls:
  6077 ;;		Nothing
  6078 ;; This function is called by:
  6079 ;;		_efgtoa
  6080 ;; This function uses a non-reentrant model
  6081 ;;
  6082                           
  6083     003F                     ___flge:	
  6084                           ;psect for function ___flge
  6085                           
  6086     003F                     l2449:	
  6087                           ;incstack = 0
  6088                           ; Regs used in ___flge: [wreg+status,2+status,0]
  6089                           
  6090     003F  3000               	movlw	0
  6091     0040  1283               	bcf	3,5	;RP0=0, select bank0
  6092     0041  1303               	bcf	3,6	;RP1=0, select bank0
  6093     0042  0535               	andwf	___flge@ff1,w
  6094     0043  00BD               	movwf	??___flge
  6095     0044  3000               	movlw	0
  6096     0045  0536               	andwf	___flge@ff1+1,w
  6097     0046  00BE               	movwf	??___flge+1
  6098     0047  3080               	movlw	128
  6099     0048  0537               	andwf	___flge@ff1+2,w
  6100     0049  00BF               	movwf	??___flge+2
  6101     004A  307F               	movlw	127
  6102     004B  0538               	andwf	___flge@ff1+3,w
  6103     004C  00C0               	movwf	??___flge+3
  6104     004D  0840               	movf	??___flge+3,w
  6105     004E  043F               	iorwf	??___flge+2,w
  6106     004F  043E               	iorwf	??___flge+1,w
  6107     0050  043D               	iorwf	??___flge,w
  6108     0051  1D03               	skipz
  6109     0052  2854               	goto	u2831
  6110     0053  2855               	goto	u2830
  6111     0054                     u2831:
  6112     0054  285D               	goto	l394
  6113     0055                     u2830:
  6114     0055                     l2451:
  6115     0055  3000               	movlw	0
  6116     0056  00B8               	movwf	___flge@ff1+3
  6117     0057  3000               	movlw	0
  6118     0058  00B7               	movwf	___flge@ff1+2
  6119     0059  3000               	movlw	0
  6120     005A  00B6               	movwf	___flge@ff1+1
  6121     005B  3000               	movlw	0
  6122     005C  00B5               	movwf	___flge@ff1
  6123     005D                     l394:
  6124     005D  3000               	movlw	0
  6125     005E  0539               	andwf	___flge@ff2,w
  6126     005F  00BD               	movwf	??___flge
  6127     0060  3000               	movlw	0
  6128     0061  053A               	andwf	___flge@ff2+1,w
  6129     0062  00BE               	movwf	??___flge+1
  6130     0063  3080               	movlw	128
  6131     0064  053B               	andwf	___flge@ff2+2,w
  6132     0065  00BF               	movwf	??___flge+2
  6133     0066  307F               	movlw	127
  6134     0067  053C               	andwf	___flge@ff2+3,w
  6135     0068  00C0               	movwf	??___flge+3
  6136     0069  0840               	movf	??___flge+3,w
  6137     006A  043F               	iorwf	??___flge+2,w
  6138     006B  043E               	iorwf	??___flge+1,w
  6139     006C  043D               	iorwf	??___flge,w
  6140     006D  1D03               	skipz
  6141     006E  2870               	goto	u2841
  6142     006F  2871               	goto	u2840
  6143     0070                     u2841:
  6144     0070  2879               	goto	l2455
  6145     0071                     u2840:
  6146     0071                     l2453:
  6147     0071  3000               	movlw	0
  6148     0072  00BC               	movwf	___flge@ff2+3
  6149     0073  3000               	movlw	0
  6150     0074  00BB               	movwf	___flge@ff2+2
  6151     0075  3000               	movlw	0
  6152     0076  00BA               	movwf	___flge@ff2+1
  6153     0077  3000               	movlw	0
  6154     0078  00B9               	movwf	___flge@ff2
  6155     0079                     l2455:
  6156     0079  1FB8               	btfss	___flge@ff1+3,7
  6157     007A  287C               	goto	u2851
  6158     007B  287D               	goto	u2850
  6159     007C                     u2851:
  6160     007C  28A1               	goto	l2459
  6161     007D                     u2850:
  6162     007D                     l2457:
  6163     007D  3000               	movlw	0
  6164     007E  00BD               	movwf	??___flge
  6165     007F  3000               	movlw	0
  6166     0080  00BE               	movwf	??___flge+1
  6167     0081  3000               	movlw	0
  6168     0082  00BF               	movwf	??___flge+2
  6169     0083  3080               	movlw	128
  6170     0084  00C0               	movwf	??___flge+3
  6171     0085  0835               	movf	___flge@ff1,w
  6172     0086  02BD               	subwf	??___flge,f
  6173     0087  0836               	movf	___flge@ff1+1,w
  6174     0088  1C03               	skipc
  6175     0089  0F36               	incfsz	___flge@ff1+1,w
  6176     008A  288C               	goto	u2861
  6177     008B  288D               	goto	u2862
  6178     008C                     u2861:
  6179     008C  02BE               	subwf	??___flge+1,f
  6180     008D                     u2862:
  6181     008D  0837               	movf	___flge@ff1+2,w
  6182     008E  1C03               	skipc
  6183     008F  0F37               	incfsz	___flge@ff1+2,w
  6184     0090  2892               	goto	u2863
  6185     0091  2893               	goto	u2864
  6186     0092                     u2863:
  6187     0092  02BF               	subwf	??___flge+2,f
  6188     0093                     u2864:
  6189     0093  0838               	movf	___flge@ff1+3,w
  6190     0094  1C03               	skipc
  6191     0095  0F38               	incfsz	___flge@ff1+3,w
  6192     0096  2898               	goto	u2865
  6193     0097  2899               	goto	u2866
  6194     0098                     u2865:
  6195     0098  02C0               	subwf	??___flge+3,f
  6196     0099                     u2866:
  6197     0099  0840               	movf	??___flge+3,w
  6198     009A  00B8               	movwf	___flge@ff1+3
  6199     009B  083F               	movf	??___flge+2,w
  6200     009C  00B7               	movwf	___flge@ff1+2
  6201     009D  083E               	movf	??___flge+1,w
  6202     009E  00B6               	movwf	___flge@ff1+1
  6203     009F  083D               	movf	??___flge,w
  6204     00A0  00B5               	movwf	___flge@ff1
  6205     00A1                     l2459:
  6206     00A1  1FBC               	btfss	___flge@ff2+3,7
  6207     00A2  28A4               	goto	u2871
  6208     00A3  28A5               	goto	u2870
  6209     00A4                     u2871:
  6210     00A4  28C9               	goto	l397
  6211     00A5                     u2870:
  6212     00A5                     l2461:
  6213     00A5  3000               	movlw	0
  6214     00A6  00BD               	movwf	??___flge
  6215     00A7  3000               	movlw	0
  6216     00A8  00BE               	movwf	??___flge+1
  6217     00A9  3000               	movlw	0
  6218     00AA  00BF               	movwf	??___flge+2
  6219     00AB  3080               	movlw	128
  6220     00AC  00C0               	movwf	??___flge+3
  6221     00AD  0839               	movf	___flge@ff2,w
  6222     00AE  02BD               	subwf	??___flge,f
  6223     00AF  083A               	movf	___flge@ff2+1,w
  6224     00B0  1C03               	skipc
  6225     00B1  0F3A               	incfsz	___flge@ff2+1,w
  6226     00B2  28B4               	goto	u2881
  6227     00B3  28B5               	goto	u2882
  6228     00B4                     u2881:
  6229     00B4  02BE               	subwf	??___flge+1,f
  6230     00B5                     u2882:
  6231     00B5  083B               	movf	___flge@ff2+2,w
  6232     00B6  1C03               	skipc
  6233     00B7  0F3B               	incfsz	___flge@ff2+2,w
  6234     00B8  28BA               	goto	u2883
  6235     00B9  28BB               	goto	u2884
  6236     00BA                     u2883:
  6237     00BA  02BF               	subwf	??___flge+2,f
  6238     00BB                     u2884:
  6239     00BB  083C               	movf	___flge@ff2+3,w
  6240     00BC  1C03               	skipc
  6241     00BD  0F3C               	incfsz	___flge@ff2+3,w
  6242     00BE  28C0               	goto	u2885
  6243     00BF  28C1               	goto	u2886
  6244     00C0                     u2885:
  6245     00C0  02C0               	subwf	??___flge+3,f
  6246     00C1                     u2886:
  6247     00C1  0840               	movf	??___flge+3,w
  6248     00C2  00BC               	movwf	___flge@ff2+3
  6249     00C3  083F               	movf	??___flge+2,w
  6250     00C4  00BB               	movwf	___flge@ff2+2
  6251     00C5  083E               	movf	??___flge+1,w
  6252     00C6  00BA               	movwf	___flge@ff2+1
  6253     00C7  083D               	movf	??___flge,w
  6254     00C8  00B9               	movwf	___flge@ff2
  6255     00C9                     l397:
  6256     00C9  3080               	movlw	128
  6257     00CA  06B8               	xorwf	___flge@ff1+3,f
  6258     00CB  3080               	movlw	128
  6259     00CC  06BC               	xorwf	___flge@ff2+3,f
  6260     00CD  083C               	movf	___flge@ff2+3,w
  6261     00CE  0238               	subwf	___flge@ff1+3,w
  6262     00CF  1D03               	skipz
  6263     00D0  28DB               	goto	u2895
  6264     00D1  083B               	movf	___flge@ff2+2,w
  6265     00D2  0237               	subwf	___flge@ff1+2,w
  6266     00D3  1D03               	skipz
  6267     00D4  28DB               	goto	u2895
  6268     00D5  083A               	movf	___flge@ff2+1,w
  6269     00D6  0236               	subwf	___flge@ff1+1,w
  6270     00D7  1D03               	skipz
  6271     00D8  28DB               	goto	u2895
  6272     00D9  0839               	movf	___flge@ff2,w
  6273     00DA  0235               	subwf	___flge@ff1,w
  6274     00DB                     u2895:
  6275     00DB  1803               	skipnc
  6276     00DC  28DE               	goto	u2891
  6277     00DD  28DF               	goto	u2890
  6278     00DE                     u2891:
  6279     00DE  28E1               	goto	l2465
  6280     00DF                     u2890:
  6281     00DF                     l2463:
  6282     00DF  1003               	clrc
  6283     00E0  28E2               	goto	l402
  6284     00E1                     l2465:
  6285     00E1  1403               	setc
  6286     00E2                     l402:
  6287     00E2  0008               	return
  6288     00E3                     __end_of___flge:
  6289                           
  6290                           	psect	text23
  6291     11F5                     __ptext23:	
  6292 ;; *************** function ___fleq *****************
  6293 ;; Defined at:
  6294 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  ff1             4    0[COMMON] unsigned int 
  6297 ;;  ff2             4    4[COMMON] unsigned int 
  6298 ;; Auto vars:     Size  Location     Type
  6299 ;;		None
  6300 ;; Return value:  Size  Location     Type
  6301 ;;		None               void
  6302 ;; Registers used:
  6303 ;;		wreg, status,2, status,0
  6304 ;; Tracked objects:
  6305 ;;		On entry : 0/0
  6306 ;;		On exit  : 0/0
  6307 ;;		Unchanged: 0/0
  6308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6309 ;;      Params:         8       0       0       0       0
  6310 ;;      Locals:         0       0       0       0       0
  6311 ;;      Temps:          4       0       0       0       0
  6312 ;;      Totals:        12       0       0       0       0
  6313 ;;Total ram usage:       12 bytes
  6314 ;; Hardware stack levels used: 1
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_efgtoa
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322     11F5                     ___fleq:	
  6323                           ;psect for function ___fleq
  6324                           
  6325     11F5                     l2437:	
  6326                           ;incstack = 0
  6327                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  6328                           
  6329     11F5  3000               	movlw	0
  6330     11F6  0570               	andwf	___fleq@ff1,w
  6331     11F7  00F8               	movwf	??___fleq
  6332     11F8  3000               	movlw	0
  6333     11F9  0571               	andwf	___fleq@ff1+1,w
  6334     11FA  00F9               	movwf	??___fleq+1
  6335     11FB  3080               	movlw	128
  6336     11FC  0572               	andwf	___fleq@ff1+2,w
  6337     11FD  00FA               	movwf	??___fleq+2
  6338     11FE  307F               	movlw	127
  6339     11FF  0573               	andwf	___fleq@ff1+3,w
  6340     1200  00FB               	movwf	??___fleq+3
  6341     1201  087B               	movf	??___fleq+3,w
  6342     1202  047A               	iorwf	??___fleq+2,w
  6343     1203  0479               	iorwf	??___fleq+1,w
  6344     1204  0478               	iorwf	??___fleq,w
  6345     1205  1D03               	skipz
  6346     1206  2A08               	goto	u2801
  6347     1207  2A09               	goto	u2800
  6348     1208                     u2801:
  6349     1208  2A11               	goto	l385
  6350     1209                     u2800:
  6351     1209                     l2439:
  6352     1209  3000               	movlw	0
  6353     120A  00F3               	movwf	___fleq@ff1+3
  6354     120B  3000               	movlw	0
  6355     120C  00F2               	movwf	___fleq@ff1+2
  6356     120D  3000               	movlw	0
  6357     120E  00F1               	movwf	___fleq@ff1+1
  6358     120F  3000               	movlw	0
  6359     1210  00F0               	movwf	___fleq@ff1
  6360     1211                     l385:
  6361     1211  3000               	movlw	0
  6362     1212  0574               	andwf	___fleq@ff2,w
  6363     1213  00F8               	movwf	??___fleq
  6364     1214  3000               	movlw	0
  6365     1215  0575               	andwf	___fleq@ff2+1,w
  6366     1216  00F9               	movwf	??___fleq+1
  6367     1217  3080               	movlw	128
  6368     1218  0576               	andwf	___fleq@ff2+2,w
  6369     1219  00FA               	movwf	??___fleq+2
  6370     121A  307F               	movlw	127
  6371     121B  0577               	andwf	___fleq@ff2+3,w
  6372     121C  00FB               	movwf	??___fleq+3
  6373     121D  087B               	movf	??___fleq+3,w
  6374     121E  047A               	iorwf	??___fleq+2,w
  6375     121F  0479               	iorwf	??___fleq+1,w
  6376     1220  0478               	iorwf	??___fleq,w
  6377     1221  1D03               	skipz
  6378     1222  2A24               	goto	u2811
  6379     1223  2A25               	goto	u2810
  6380     1224                     u2811:
  6381     1224  2A2D               	goto	l386
  6382     1225                     u2810:
  6383     1225                     l2441:
  6384     1225  3000               	movlw	0
  6385     1226  00F7               	movwf	___fleq@ff2+3
  6386     1227  3000               	movlw	0
  6387     1228  00F6               	movwf	___fleq@ff2+2
  6388     1229  3000               	movlw	0
  6389     122A  00F5               	movwf	___fleq@ff2+1
  6390     122B  3000               	movlw	0
  6391     122C  00F4               	movwf	___fleq@ff2
  6392     122D                     l386:
  6393     122D  0877               	movf	___fleq@ff2+3,w
  6394     122E  0673               	xorwf	___fleq@ff1+3,w
  6395     122F  1D03               	skipz
  6396     1230  2A3B               	goto	u2825
  6397     1231  0876               	movf	___fleq@ff2+2,w
  6398     1232  0672               	xorwf	___fleq@ff1+2,w
  6399     1233  1D03               	skipz
  6400     1234  2A3B               	goto	u2825
  6401     1235  0875               	movf	___fleq@ff2+1,w
  6402     1236  0671               	xorwf	___fleq@ff1+1,w
  6403     1237  1D03               	skipz
  6404     1238  2A3B               	goto	u2825
  6405     1239  0874               	movf	___fleq@ff2,w
  6406     123A  0670               	xorwf	___fleq@ff1,w
  6407     123B                     u2825:
  6408     123B  1903               	skipnz
  6409     123C  2A3E               	goto	u2821
  6410     123D  2A3F               	goto	u2820
  6411     123E                     u2821:
  6412     123E  2A41               	goto	l2445
  6413     123F                     u2820:
  6414     123F                     l2443:
  6415     123F  1003               	clrc
  6416     1240  2A42               	goto	l391
  6417     1241                     l2445:
  6418     1241  1403               	setc
  6419     1242                     l391:
  6420     1242  0008               	return
  6421     1243                     __end_of___fleq:
  6422                           
  6423                           	psect	text24
  6424     0882                     __ptext24:	
  6425 ;; *************** function ___fldiv *****************
  6426 ;; Defined at:
  6427 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;  a               4    0[COMMON] unsigned int 
  6430 ;;  b               4    4[COMMON] unsigned int 
  6431 ;; Auto vars:     Size  Location     Type
  6432 ;;  grs             4    7[BANK0 ] unsigned long 
  6433 ;;  rem             4    0[BANK0 ] unsigned long 
  6434 ;;  new_exp         2    5[BANK0 ] short 
  6435 ;;  aexp            1   12[BANK0 ] unsigned char 
  6436 ;;  bexp            1   11[BANK0 ] unsigned char 
  6437 ;;  sign            1    4[BANK0 ] unsigned char 
  6438 ;; Return value:  Size  Location     Type
  6439 ;;                  4    0[COMMON] unsigned char 
  6440 ;; Registers used:
  6441 ;;		wreg, status,2, status,0, btemp+1
  6442 ;; Tracked objects:
  6443 ;;		On entry : 0/0
  6444 ;;		On exit  : 0/0
  6445 ;;		Unchanged: 0/0
  6446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6447 ;;      Params:         8       0       0       0       0
  6448 ;;      Locals:         0      13       0       0       0
  6449 ;;      Temps:          5       0       0       0       0
  6450 ;;      Totals:        13      13       0       0       0
  6451 ;;Total ram usage:       26 bytes
  6452 ;; Hardware stack levels used: 1
  6453 ;; This function calls:
  6454 ;;		Nothing
  6455 ;; This function is called by:
  6456 ;;		_efgtoa
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460     0882                     ___fldiv:	
  6461                           ;psect for function ___fldiv
  6462                           
  6463     0882                     l2521:	
  6464                           ;incstack = 0
  6465                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6466                           
  6467     0882  0877               	movf	___fldiv@b+3,w
  6468     0883  3980               	andlw	128
  6469     0884  1283               	bcf	3,5	;RP0=0, select bank0
  6470     0885  1303               	bcf	3,6	;RP1=0, select bank0
  6471     0886  00A4               	movwf	___fldiv@sign
  6472     0887                     l2523:
  6473     0887  0877               	movf	___fldiv@b+3,w
  6474     0888  00F8               	movwf	??___fldiv
  6475     0889  0778               	addwf	??___fldiv,w
  6476     088A  00AB               	movwf	___fldiv@bexp
  6477     088B                     l2525:
  6478     088B  1FF6               	btfss	___fldiv@b+2,7
  6479     088C  288E               	goto	u3011
  6480     088D  288F               	goto	u3010
  6481     088E                     u3011:
  6482     088E  2890               	goto	l2529
  6483     088F                     u3010:
  6484     088F                     l2527:
  6485     088F  142B               	bsf	___fldiv@bexp,0
  6486     0890                     l2529:
  6487     0890  082B               	movf	___fldiv@bexp,w
  6488     0891  1903               	btfsc	3,2
  6489     0892  2894               	goto	u3021
  6490     0893  2895               	goto	u3020
  6491     0894                     u3021:
  6492     0894  28A5               	goto	l2539
  6493     0895                     u3020:
  6494     0895                     l2531:
  6495     0895  0A2B               	incf	___fldiv@bexp,w
  6496     0896  1D03               	btfss	3,2
  6497     0897  2899               	goto	u3031
  6498     0898  289A               	goto	u3030
  6499     0899                     u3031:
  6500     0899  28A2               	goto	l2535
  6501     089A                     u3030:
  6502     089A                     l2533:
  6503     089A  3000               	movlw	0
  6504     089B  00F7               	movwf	___fldiv@b+3
  6505     089C  3000               	movlw	0
  6506     089D  00F6               	movwf	___fldiv@b+2
  6507     089E  3000               	movlw	0
  6508     089F  00F5               	movwf	___fldiv@b+1
  6509     08A0  3000               	movlw	0
  6510     08A1  00F4               	movwf	___fldiv@b
  6511     08A2                     l2535:
  6512     08A2  17F6               	bsf	___fldiv@b+2,7
  6513     08A3                     l2537:
  6514     08A3  01F7               	clrf	___fldiv@b+3
  6515     08A4  28AD               	goto	l2541
  6516     08A5                     l2539:
  6517     08A5  3000               	movlw	0
  6518     08A6  00F7               	movwf	___fldiv@b+3
  6519     08A7  3000               	movlw	0
  6520     08A8  00F6               	movwf	___fldiv@b+2
  6521     08A9  3000               	movlw	0
  6522     08AA  00F5               	movwf	___fldiv@b+1
  6523     08AB  3000               	movlw	0
  6524     08AC  00F4               	movwf	___fldiv@b
  6525     08AD                     l2541:
  6526     08AD  0873               	movf	___fldiv@a+3,w
  6527     08AE  3980               	andlw	128
  6528     08AF  00FF               	movwf	btemp+1
  6529     08B0  087F               	movf	btemp+1,w
  6530     08B1  06A4               	xorwf	___fldiv@sign,f
  6531     08B2                     l2543:
  6532     08B2  0873               	movf	___fldiv@a+3,w
  6533     08B3  00F8               	movwf	??___fldiv
  6534     08B4  0778               	addwf	??___fldiv,w
  6535     08B5  00AC               	movwf	___fldiv@aexp
  6536     08B6                     l2545:
  6537     08B6  1FF2               	btfss	___fldiv@a+2,7
  6538     08B7  28B9               	goto	u3041
  6539     08B8  28BA               	goto	u3040
  6540     08B9                     u3041:
  6541     08B9  28BB               	goto	l2549
  6542     08BA                     u3040:
  6543     08BA                     l2547:
  6544     08BA  142C               	bsf	___fldiv@aexp,0
  6545     08BB                     l2549:
  6546     08BB  082C               	movf	___fldiv@aexp,w
  6547     08BC  1903               	btfsc	3,2
  6548     08BD  28BF               	goto	u3051
  6549     08BE  28C0               	goto	u3050
  6550     08BF                     u3051:
  6551     08BF  28D0               	goto	l2559
  6552     08C0                     u3050:
  6553     08C0                     l2551:
  6554     08C0  0A2C               	incf	___fldiv@aexp,w
  6555     08C1  1D03               	btfss	3,2
  6556     08C2  28C4               	goto	u3061
  6557     08C3  28C5               	goto	u3060
  6558     08C4                     u3061:
  6559     08C4  28CD               	goto	l2555
  6560     08C5                     u3060:
  6561     08C5                     l2553:
  6562     08C5  3000               	movlw	0
  6563     08C6  00F3               	movwf	___fldiv@a+3
  6564     08C7  3000               	movlw	0
  6565     08C8  00F2               	movwf	___fldiv@a+2
  6566     08C9  3000               	movlw	0
  6567     08CA  00F1               	movwf	___fldiv@a+1
  6568     08CB  3000               	movlw	0
  6569     08CC  00F0               	movwf	___fldiv@a
  6570     08CD                     l2555:
  6571     08CD  17F2               	bsf	___fldiv@a+2,7
  6572     08CE                     l2557:
  6573     08CE  01F3               	clrf	___fldiv@a+3
  6574     08CF  28D8               	goto	l573
  6575     08D0                     l2559:
  6576     08D0  3000               	movlw	0
  6577     08D1  00F3               	movwf	___fldiv@a+3
  6578     08D2  3000               	movlw	0
  6579     08D3  00F2               	movwf	___fldiv@a+2
  6580     08D4  3000               	movlw	0
  6581     08D5  00F1               	movwf	___fldiv@a+1
  6582     08D6  3000               	movlw	0
  6583     08D7  00F0               	movwf	___fldiv@a
  6584     08D8                     l573:
  6585     08D8  0873               	movf	___fldiv@a+3,w
  6586     08D9  0472               	iorwf	___fldiv@a+2,w
  6587     08DA  0471               	iorwf	___fldiv@a+1,w
  6588     08DB  0470               	iorwf	___fldiv@a,w
  6589     08DC  1D03               	skipz
  6590     08DD  28DF               	goto	u3071
  6591     08DE  28E0               	goto	u3070
  6592     08DF                     u3071:
  6593     08DF  28F9               	goto	l2569
  6594     08E0                     u3070:
  6595     08E0                     l2561:
  6596     08E0  3000               	movlw	0
  6597     08E1  00F7               	movwf	___fldiv@b+3
  6598     08E2  3000               	movlw	0
  6599     08E3  00F6               	movwf	___fldiv@b+2
  6600     08E4  3000               	movlw	0
  6601     08E5  00F5               	movwf	___fldiv@b+1
  6602     08E6  3000               	movlw	0
  6603     08E7  00F4               	movwf	___fldiv@b
  6604     08E8  3080               	movlw	128
  6605     08E9  04F6               	iorwf	___fldiv@b+2,f
  6606     08EA  307F               	movlw	127
  6607     08EB  04F7               	iorwf	___fldiv@b+3,f
  6608     08EC                     l2563:
  6609     08EC  0824               	movf	___fldiv@sign,w
  6610     08ED  00FF               	movwf	btemp+1
  6611     08EE  087F               	movf	btemp+1,w
  6612     08EF  04F7               	iorwf	___fldiv@b+3,f
  6613     08F0                     l2565:
  6614     08F0  0877               	movf	___fldiv@b+3,w
  6615     08F1  00F3               	movwf	?___fldiv+3
  6616     08F2  0876               	movf	___fldiv@b+2,w
  6617     08F3  00F2               	movwf	?___fldiv+2
  6618     08F4  0875               	movf	___fldiv@b+1,w
  6619     08F5  00F1               	movwf	?___fldiv+1
  6620     08F6  0874               	movf	___fldiv@b,w
  6621     08F7  00F0               	movwf	?___fldiv
  6622     08F8  2A56               	goto	l575
  6623     08F9                     l2569:
  6624     08F9  082B               	movf	___fldiv@bexp,w
  6625     08FA  1D03               	btfss	3,2
  6626     08FB  28FD               	goto	u3081
  6627     08FC  28FE               	goto	u3080
  6628     08FD                     u3081:
  6629     08FD  2907               	goto	l2575
  6630     08FE                     u3080:
  6631     08FE                     l2571:
  6632     08FE  3000               	movlw	0
  6633     08FF  00F3               	movwf	?___fldiv+3
  6634     0900  3000               	movlw	0
  6635     0901  00F2               	movwf	?___fldiv+2
  6636     0902  3000               	movlw	0
  6637     0903  00F1               	movwf	?___fldiv+1
  6638     0904  3000               	movlw	0
  6639     0905  00F0               	movwf	?___fldiv
  6640     0906  2A56               	goto	l575
  6641     0907                     l2575:
  6642     0907  082B               	movf	___fldiv@bexp,w
  6643     0908  00F8               	movwf	??___fldiv
  6644     0909  01F9               	clrf	??___fldiv+1
  6645     090A  0879               	movf	??___fldiv+1,w
  6646     090B  00FB               	movwf	??___fldiv+3
  6647     090C  082C               	movf	___fldiv@aexp,w
  6648     090D  0278               	subwf	??___fldiv,w
  6649     090E  00FA               	movwf	??___fldiv+2
  6650     090F  1C03               	skipc
  6651     0910  03FB               	decf	??___fldiv+3,f
  6652     0911  087A               	movf	??___fldiv+2,w
  6653     0912  3E7F               	addlw	127
  6654     0913  00A5               	movwf	___fldiv@new_exp
  6655     0914  087B               	movf	??___fldiv+3,w
  6656     0915  1803               	skipnc
  6657     0916  3E01               	addlw	1
  6658     0917  3E00               	addlw	0
  6659     0918  00A6               	movwf	___fldiv@new_exp+1
  6660     0919                     l2577:
  6661     0919  0877               	movf	___fldiv@b+3,w
  6662     091A  00A3               	movwf	___fldiv@rem+3
  6663     091B  0876               	movf	___fldiv@b+2,w
  6664     091C  00A2               	movwf	___fldiv@rem+2
  6665     091D  0875               	movf	___fldiv@b+1,w
  6666     091E  00A1               	movwf	___fldiv@rem+1
  6667     091F  0874               	movf	___fldiv@b,w
  6668     0920  00A0               	movwf	___fldiv@rem
  6669     0921                     l2579:
  6670     0921  3000               	movlw	0
  6671     0922  00F7               	movwf	___fldiv@b+3
  6672     0923  3000               	movlw	0
  6673     0924  00F6               	movwf	___fldiv@b+2
  6674     0925  3000               	movlw	0
  6675     0926  00F5               	movwf	___fldiv@b+1
  6676     0927  3000               	movlw	0
  6677     0928  00F4               	movwf	___fldiv@b
  6678     0929                     l2581:
  6679     0929  3000               	movlw	0
  6680     092A  00AA               	movwf	___fldiv@grs+3
  6681     092B  3000               	movlw	0
  6682     092C  00A9               	movwf	___fldiv@grs+2
  6683     092D  3000               	movlw	0
  6684     092E  00A8               	movwf	___fldiv@grs+1
  6685     092F  3000               	movlw	0
  6686     0930  00A7               	movwf	___fldiv@grs
  6687     0931                     l2583:
  6688     0931  01AC               	clrf	___fldiv@aexp
  6689     0932  2983               	goto	l2603
  6690     0933                     l2585:
  6691     0933  082C               	movf	___fldiv@aexp,w
  6692     0934  1903               	btfsc	3,2
  6693     0935  2937               	goto	u3091
  6694     0936  2938               	goto	u3090
  6695     0937                     u3091:
  6696     0937  2958               	goto	l2595
  6697     0938                     u3090:
  6698     0938                     l2587:
  6699     0938  3001               	movlw	1
  6700     0939  00F8               	movwf	??___fldiv
  6701     093A                     u3105:
  6702     093A  1003               	clrc
  6703     093B  0DA0               	rlf	___fldiv@rem,f
  6704     093C  0DA1               	rlf	___fldiv@rem+1,f
  6705     093D  0DA2               	rlf	___fldiv@rem+2,f
  6706     093E  0DA3               	rlf	___fldiv@rem+3,f
  6707     093F  0BF8               	decfsz	??___fldiv,f
  6708     0940  293A               	goto	u3105
  6709     0941  3001               	movlw	1
  6710     0942  00F8               	movwf	??___fldiv
  6711     0943                     u3115:
  6712     0943  1003               	clrc
  6713     0944  0DF4               	rlf	___fldiv@b,f
  6714     0945  0DF5               	rlf	___fldiv@b+1,f
  6715     0946  0DF6               	rlf	___fldiv@b+2,f
  6716     0947  0DF7               	rlf	___fldiv@b+3,f
  6717     0948  0BF8               	decfsz	??___fldiv,f
  6718     0949  2943               	goto	u3115
  6719     094A                     l2589:
  6720     094A  1FAA               	btfss	___fldiv@grs+3,7
  6721     094B  294D               	goto	u3121
  6722     094C  294E               	goto	u3120
  6723     094D                     u3121:
  6724     094D  294F               	goto	l2593
  6725     094E                     u3120:
  6726     094E                     l2591:
  6727     094E  1474               	bsf	___fldiv@b,0
  6728     094F                     l2593:
  6729     094F  3001               	movlw	1
  6730     0950  00F8               	movwf	??___fldiv
  6731     0951                     u3135:
  6732     0951  1003               	clrc
  6733     0952  0DA7               	rlf	___fldiv@grs,f
  6734     0953  0DA8               	rlf	___fldiv@grs+1,f
  6735     0954  0DA9               	rlf	___fldiv@grs+2,f
  6736     0955  0DAA               	rlf	___fldiv@grs+3,f
  6737     0956  0BF8               	decfsz	??___fldiv,f
  6738     0957  2951               	goto	u3135
  6739     0958                     l2595:
  6740     0958  0873               	movf	___fldiv@a+3,w
  6741     0959  0223               	subwf	___fldiv@rem+3,w
  6742     095A  1D03               	skipz
  6743     095B  2966               	goto	u3145
  6744     095C  0872               	movf	___fldiv@a+2,w
  6745     095D  0222               	subwf	___fldiv@rem+2,w
  6746     095E  1D03               	skipz
  6747     095F  2966               	goto	u3145
  6748     0960  0871               	movf	___fldiv@a+1,w
  6749     0961  0221               	subwf	___fldiv@rem+1,w
  6750     0962  1D03               	skipz
  6751     0963  2966               	goto	u3145
  6752     0964  0870               	movf	___fldiv@a,w
  6753     0965  0220               	subwf	___fldiv@rem,w
  6754     0966                     u3145:
  6755     0966  1C03               	skipc
  6756     0967  2969               	goto	u3141
  6757     0968  296A               	goto	u3140
  6758     0969                     u3141:
  6759     0969  297F               	goto	l2601
  6760     096A                     u3140:
  6761     096A                     l2597:
  6762     096A  172A               	bsf	___fldiv@grs+3,6
  6763     096B                     l2599:
  6764     096B  0870               	movf	___fldiv@a,w
  6765     096C  02A0               	subwf	___fldiv@rem,f
  6766     096D  0871               	movf	___fldiv@a+1,w
  6767     096E  1C03               	skipc
  6768     096F  0F71               	incfsz	___fldiv@a+1,w
  6769     0970  2972               	goto	u3155
  6770     0971  2973               	goto	u3156
  6771     0972                     u3155:
  6772     0972  02A1               	subwf	___fldiv@rem+1,f
  6773     0973                     u3156:
  6774     0973  0872               	movf	___fldiv@a+2,w
  6775     0974  1C03               	skipc
  6776     0975  0F72               	incfsz	___fldiv@a+2,w
  6777     0976  2978               	goto	u3157
  6778     0977  2979               	goto	u3158
  6779     0978                     u3157:
  6780     0978  02A2               	subwf	___fldiv@rem+2,f
  6781     0979                     u3158:
  6782     0979  0873               	movf	___fldiv@a+3,w
  6783     097A  1C03               	skipc
  6784     097B  0F73               	incfsz	___fldiv@a+3,w
  6785     097C  297E               	goto	u3159
  6786     097D  297F               	goto	u3150
  6787     097E                     u3159:
  6788     097E  02A3               	subwf	___fldiv@rem+3,f
  6789     097F                     u3150:
  6790     097F                     l2601:
  6791     097F  3001               	movlw	1
  6792     0980  00FF               	movwf	btemp+1
  6793     0981  087F               	movf	btemp+1,w
  6794     0982  07AC               	addwf	___fldiv@aexp,f
  6795     0983                     l2603:
  6796     0983  301A               	movlw	26
  6797     0984  022C               	subwf	___fldiv@aexp,w
  6798     0985  1C03               	skipc
  6799     0986  2988               	goto	u3161
  6800     0987  2989               	goto	u3160
  6801     0988                     u3161:
  6802     0988  2933               	goto	l2585
  6803     0989                     u3160:
  6804     0989                     l2605:
  6805     0989  0823               	movf	___fldiv@rem+3,w
  6806     098A  0422               	iorwf	___fldiv@rem+2,w
  6807     098B  0421               	iorwf	___fldiv@rem+1,w
  6808     098C  0420               	iorwf	___fldiv@rem,w
  6809     098D  1903               	skipnz
  6810     098E  2990               	goto	u3171
  6811     098F  2991               	goto	u3170
  6812     0990                     u3171:
  6813     0990  29B0               	goto	l2619
  6814     0991                     u3170:
  6815     0991                     l2607:
  6816     0991  1427               	bsf	___fldiv@grs,0
  6817     0992  29B0               	goto	l2619
  6818     0993                     l2609:
  6819     0993  3001               	movlw	1
  6820     0994  00F8               	movwf	??___fldiv
  6821     0995                     u3185:
  6822     0995  1003               	clrc
  6823     0996  0DF4               	rlf	___fldiv@b,f
  6824     0997  0DF5               	rlf	___fldiv@b+1,f
  6825     0998  0DF6               	rlf	___fldiv@b+2,f
  6826     0999  0DF7               	rlf	___fldiv@b+3,f
  6827     099A  0BF8               	decfsz	??___fldiv,f
  6828     099B  2995               	goto	u3185
  6829     099C                     l2611:
  6830     099C  1FAA               	btfss	___fldiv@grs+3,7
  6831     099D  299F               	goto	u3191
  6832     099E  29A0               	goto	u3190
  6833     099F                     u3191:
  6834     099F  29A1               	goto	l2615
  6835     09A0                     u3190:
  6836     09A0                     l2613:
  6837     09A0  1474               	bsf	___fldiv@b,0
  6838     09A1                     l2615:
  6839     09A1  3001               	movlw	1
  6840     09A2  00F8               	movwf	??___fldiv
  6841     09A3                     u3205:
  6842     09A3  1003               	clrc
  6843     09A4  0DA7               	rlf	___fldiv@grs,f
  6844     09A5  0DA8               	rlf	___fldiv@grs+1,f
  6845     09A6  0DA9               	rlf	___fldiv@grs+2,f
  6846     09A7  0DAA               	rlf	___fldiv@grs+3,f
  6847     09A8  0BF8               	decfsz	??___fldiv,f
  6848     09A9  29A3               	goto	u3205
  6849     09AA                     l2617:
  6850     09AA  30FF               	movlw	255
  6851     09AB  07A5               	addwf	___fldiv@new_exp,f
  6852     09AC  1803               	skipnc
  6853     09AD  0AA6               	incf	___fldiv@new_exp+1,f
  6854     09AE  30FF               	movlw	255
  6855     09AF  07A6               	addwf	___fldiv@new_exp+1,f
  6856     09B0                     l2619:
  6857     09B0  1FF6               	btfss	___fldiv@b+2,7
  6858     09B1  29B3               	goto	u3211
  6859     09B2  29B4               	goto	u3210
  6860     09B3                     u3211:
  6861     09B3  2993               	goto	l2609
  6862     09B4                     u3210:
  6863     09B4                     l2621:
  6864     09B4  01AC               	clrf	___fldiv@aexp
  6865     09B5                     l2623:
  6866     09B5  1FAA               	btfss	___fldiv@grs+3,7
  6867     09B6  29B8               	goto	u3221
  6868     09B7  29B9               	goto	u3220
  6869     09B8                     u3221:
  6870     09B8  29D5               	goto	l2631
  6871     09B9                     u3220:
  6872     09B9                     l2625:
  6873     09B9  30FF               	movlw	255
  6874     09BA  0527               	andwf	___fldiv@grs,w
  6875     09BB  00F8               	movwf	??___fldiv
  6876     09BC  30FF               	movlw	255
  6877     09BD  0528               	andwf	___fldiv@grs+1,w
  6878     09BE  00F9               	movwf	??___fldiv+1
  6879     09BF  30FF               	movlw	255
  6880     09C0  0529               	andwf	___fldiv@grs+2,w
  6881     09C1  00FA               	movwf	??___fldiv+2
  6882     09C2  307F               	movlw	127
  6883     09C3  052A               	andwf	___fldiv@grs+3,w
  6884     09C4  00FB               	movwf	??___fldiv+3
  6885     09C5  087B               	movf	??___fldiv+3,w
  6886     09C6  047A               	iorwf	??___fldiv+2,w
  6887     09C7  0479               	iorwf	??___fldiv+1,w
  6888     09C8  0478               	iorwf	??___fldiv,w
  6889     09C9  1903               	skipnz
  6890     09CA  29CC               	goto	u3231
  6891     09CB  29CD               	goto	u3230
  6892     09CC                     u3231:
  6893     09CC  29D0               	goto	l589
  6894     09CD                     u3230:
  6895     09CD                     l2627:
  6896     09CD  01AC               	clrf	___fldiv@aexp
  6897     09CE  0AAC               	incf	___fldiv@aexp,f
  6898     09CF  29D5               	goto	l2631
  6899     09D0                     l589:
  6900     09D0  1C74               	btfss	___fldiv@b,0
  6901     09D1  29D3               	goto	u3241
  6902     09D2  29D4               	goto	u3240
  6903     09D3                     u3241:
  6904     09D3  29D5               	goto	l2631
  6905     09D4                     u3240:
  6906     09D4  29CD               	goto	l2627
  6907     09D5                     l2631:
  6908     09D5  082C               	movf	___fldiv@aexp,w
  6909     09D6  1903               	btfsc	3,2
  6910     09D7  29D9               	goto	u3251
  6911     09D8  29DA               	goto	u3250
  6912     09D9                     u3251:
  6913     09D9  2A0B               	goto	l2641
  6914     09DA                     u3250:
  6915     09DA                     l2633:
  6916     09DA  3001               	movlw	1
  6917     09DB  07F4               	addwf	___fldiv@b,f
  6918     09DC  3000               	movlw	0
  6919     09DD  1803               	skipnc
  6920     09DE  3001               	movlw	1
  6921     09DF  07F5               	addwf	___fldiv@b+1,f
  6922     09E0  3000               	movlw	0
  6923     09E1  1803               	skipnc
  6924     09E2  3001               	movlw	1
  6925     09E3  07F6               	addwf	___fldiv@b+2,f
  6926     09E4  3000               	movlw	0
  6927     09E5  1803               	skipnc
  6928     09E6  3001               	movlw	1
  6929     09E7  07F7               	addwf	___fldiv@b+3,f
  6930     09E8                     l2635:
  6931     09E8  1C77               	btfss	___fldiv@b+3,0
  6932     09E9  29EB               	goto	u3261
  6933     09EA  29EC               	goto	u3260
  6934     09EB                     u3261:
  6935     09EB  2A0B               	goto	l2641
  6936     09EC                     u3260:
  6937     09EC                     l2637:
  6938     09EC  0874               	movf	___fldiv@b,w
  6939     09ED  00F8               	movwf	??___fldiv
  6940     09EE  0875               	movf	___fldiv@b+1,w
  6941     09EF  00F9               	movwf	??___fldiv+1
  6942     09F0  0876               	movf	___fldiv@b+2,w
  6943     09F1  00FA               	movwf	??___fldiv+2
  6944     09F2  0877               	movf	___fldiv@b+3,w
  6945     09F3  00FB               	movwf	??___fldiv+3
  6946     09F4  3001               	movlw	1
  6947     09F5  00FC               	movwf	??___fldiv+4
  6948     09F6                     u3275:
  6949     09F6  0D7B               	rlf	??___fldiv+3,w
  6950     09F7  0CFB               	rrf	??___fldiv+3,f
  6951     09F8  0CFA               	rrf	??___fldiv+2,f
  6952     09F9  0CF9               	rrf	??___fldiv+1,f
  6953     09FA  0CF8               	rrf	??___fldiv,f
  6954     09FB                     u3270:
  6955     09FB  0BFC               	decfsz	??___fldiv+4,f
  6956     09FC  29F6               	goto	u3275
  6957     09FD  087B               	movf	??___fldiv+3,w
  6958     09FE  00F7               	movwf	___fldiv@b+3
  6959     09FF  087A               	movf	??___fldiv+2,w
  6960     0A00  00F6               	movwf	___fldiv@b+2
  6961     0A01  0879               	movf	??___fldiv+1,w
  6962     0A02  00F5               	movwf	___fldiv@b+1
  6963     0A03  0878               	movf	??___fldiv,w
  6964     0A04  00F4               	movwf	___fldiv@b
  6965     0A05                     l2639:
  6966     0A05  3001               	movlw	1
  6967     0A06  07A5               	addwf	___fldiv@new_exp,f
  6968     0A07  1803               	skipnc
  6969     0A08  0AA6               	incf	___fldiv@new_exp+1,f
  6970     0A09  3000               	movlw	0
  6971     0A0A  07A6               	addwf	___fldiv@new_exp+1,f
  6972     0A0B                     l2641:
  6973     0A0B  0826               	movf	___fldiv@new_exp+1,w
  6974     0A0C  3A80               	xorlw	128
  6975     0A0D  00FF               	movwf	btemp+1
  6976     0A0E  3080               	movlw	128
  6977     0A0F  027F               	subwf	btemp+1,w
  6978     0A10  1D03               	skipz
  6979     0A11  2A14               	goto	u3285
  6980     0A12  30FF               	movlw	255
  6981     0A13  0225               	subwf	___fldiv@new_exp,w
  6982     0A14                     u3285:
  6983     0A14  1C03               	skipc
  6984     0A15  2A17               	goto	u3281
  6985     0A16  2A18               	goto	u3280
  6986     0A17                     u3281:
  6987     0A17  2A26               	goto	l2645
  6988     0A18                     u3280:
  6989     0A18                     l2643:
  6990     0A18  30FF               	movlw	255
  6991     0A19  1283               	bcf	3,5	;RP0=0, select bank0
  6992     0A1A  1303               	bcf	3,6	;RP1=0, select bank0
  6993     0A1B  00A5               	movwf	___fldiv@new_exp
  6994     0A1C  3000               	movlw	0
  6995     0A1D  00A6               	movwf	___fldiv@new_exp+1
  6996     0A1E  3000               	movlw	0
  6997     0A1F  00F7               	movwf	___fldiv@b+3
  6998     0A20  3000               	movlw	0
  6999     0A21  00F6               	movwf	___fldiv@b+2
  7000     0A22  3000               	movlw	0
  7001     0A23  00F5               	movwf	___fldiv@b+1
  7002     0A24  3000               	movlw	0
  7003     0A25  00F4               	movwf	___fldiv@b
  7004     0A26                     l2645:
  7005     0A26  1283               	bcf	3,5	;RP0=0, select bank0
  7006     0A27  1303               	bcf	3,6	;RP1=0, select bank0
  7007     0A28  0826               	movf	___fldiv@new_exp+1,w
  7008     0A29  3A80               	xorlw	128
  7009     0A2A  00FF               	movwf	btemp+1
  7010     0A2B  3080               	movlw	128
  7011     0A2C  027F               	subwf	btemp+1,w
  7012     0A2D  1D03               	skipz
  7013     0A2E  2A31               	goto	u3295
  7014     0A2F  3001               	movlw	1
  7015     0A30  0225               	subwf	___fldiv@new_exp,w
  7016     0A31                     u3295:
  7017     0A31  1803               	skipnc
  7018     0A32  2A34               	goto	u3291
  7019     0A33  2A35               	goto	u3290
  7020     0A34                     u3291:
  7021     0A34  2A42               	goto	l595
  7022     0A35                     u3290:
  7023     0A35                     l2647:
  7024     0A35  1283               	bcf	3,5	;RP0=0, select bank0
  7025     0A36  1303               	bcf	3,6	;RP1=0, select bank0
  7026     0A37  01A5               	clrf	___fldiv@new_exp
  7027     0A38  01A6               	clrf	___fldiv@new_exp+1
  7028     0A39                     l2649:
  7029     0A39  3000               	movlw	0
  7030     0A3A  00F7               	movwf	___fldiv@b+3
  7031     0A3B  3000               	movlw	0
  7032     0A3C  00F6               	movwf	___fldiv@b+2
  7033     0A3D  3000               	movlw	0
  7034     0A3E  00F5               	movwf	___fldiv@b+1
  7035     0A3F  3000               	movlw	0
  7036     0A40  00F4               	movwf	___fldiv@b
  7037     0A41                     l2651:
  7038     0A41  01A4               	clrf	___fldiv@sign
  7039     0A42                     l595:
  7040     0A42  1283               	bcf	3,5	;RP0=0, select bank0
  7041     0A43  1303               	bcf	3,6	;RP1=0, select bank0
  7042     0A44  0825               	movf	___fldiv@new_exp,w
  7043     0A45  00AB               	movwf	___fldiv@bexp
  7044     0A46                     l2653:
  7045     0A46  1C2B               	btfss	___fldiv@bexp,0
  7046     0A47  2A49               	goto	u3301
  7047     0A48  2A4A               	goto	u3300
  7048     0A49                     u3301:
  7049     0A49  2A4C               	goto	l2657
  7050     0A4A                     u3300:
  7051     0A4A                     l2655:
  7052     0A4A  17F6               	bsf	___fldiv@b+2,7
  7053     0A4B  2A50               	goto	l2659
  7054     0A4C                     l2657:
  7055     0A4C  307F               	movlw	127
  7056     0A4D  00FF               	movwf	btemp+1
  7057     0A4E  087F               	movf	btemp+1,w
  7058     0A4F  05F6               	andwf	___fldiv@b+2,f
  7059     0A50                     l2659:
  7060     0A50  082B               	movf	___fldiv@bexp,w
  7061     0A51  00F8               	movwf	??___fldiv
  7062     0A52  1003               	clrc
  7063     0A53  0C78               	rrf	??___fldiv,w
  7064     0A54  00F7               	movwf	___fldiv@b+3
  7065     0A55  28EC               	goto	l2563
  7066     0A56                     l575:
  7067     0A56  0008               	return
  7068     0A57                     __end_of___fldiv:
  7069                           
  7070                           	psect	text25
  7071     11BD                     __ptext25:	
  7072 ;; *************** function _rtc_read_byte *****************
  7073 ;; Defined at:
  7074 ;;		line 123 in file "main.c"
  7075 ;; Parameters:    Size  Location     Type
  7076 ;;  addr            1    wreg     unsigned char 
  7077 ;; Auto vars:     Size  Location     Type
  7078 ;;  addr            1    1[COMMON] unsigned char 
  7079 ;;  rec             1    2[COMMON] unsigned char 
  7080 ;; Return value:  Size  Location     Type
  7081 ;;                  1    wreg      unsigned char 
  7082 ;; Registers used:
  7083 ;;		wreg, status,2, status,0, pclath, cstack
  7084 ;; Tracked objects:
  7085 ;;		On entry : 0/0
  7086 ;;		On exit  : 0/0
  7087 ;;		Unchanged: 0/0
  7088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7089 ;;      Params:         0       0       0       0       0
  7090 ;;      Locals:         2       0       0       0       0
  7091 ;;      Temps:          0       0       0       0       0
  7092 ;;      Totals:         2       0       0       0       0
  7093 ;;Total ram usage:        2 bytes
  7094 ;; Hardware stack levels used: 1
  7095 ;; Hardware stack levels required when called: 2
  7096 ;; This function calls:
  7097 ;;		_rtc_nak
  7098 ;;		_rtc_read
  7099 ;;		_rtc_res
  7100 ;;		_rtc_send
  7101 ;;		_rtc_stop
  7102 ;;		_waitmssp
  7103 ;; This function is called by:
  7104 ;;		_main
  7105 ;; This function uses a non-reentrant model
  7106 ;;
  7107                           
  7108     11BD                     _rtc_read_byte:	
  7109                           ;psect for function _rtc_read_byte
  7110                           
  7111                           
  7112                           ;incstack = 0
  7113                           ; Regs used in _rtc_read_byte: [wreg+status,2+status,0+pclath+cstack]
  7114                           ;rtc_read_byte@addr stored from wreg
  7115     11BD  00F1               	movwf	rtc_read_byte@addr
  7116     11BE                     l97:	
  7117                           ;main.c: 123: void rtc_stop();main.c: 124: {;main.c: 125:     PEN=1;;main.c: 126:     wa
      +                          itmssp();
  7118                           
  7119     11BE                     l3295:
  7120     11BE  160A  158A  274B  160A  118A  	fcall	_rtc_res
  7121     11C3                     l3297:
  7122                           
  7123                           ;main.c: 127: }
  7124     11C3  30D0               	movlw	208
  7125     11C4  1283               	bcf	3,5	;RP0=0, select bank0
  7126     11C5  1303               	bcf	3,6	;RP1=0, select bank0
  7127     11C6  0093               	movwf	19	;volatile
  7128     11C7                     l3299:
  7129                           
  7130                           ;main.c: 128: void rtc_res()
  7131     11C7  160A  158A  273B  160A  118A  	fcall	_waitmssp
  7132     11CC                     l98:	
  7133                           ;main.c: 129: {
  7134                           
  7135     11CC  1683               	bsf	3,5	;RP0=1, select bank1
  7136     11CD  1303               	bcf	3,6	;RP1=0, select bank1
  7137     11CE  1B11               	btfsc	17,6	;volatile
  7138     11CF  29D1               	goto	u4411
  7139     11D0  29D2               	goto	u4410
  7140     11D1                     u4411:
  7141     11D1  29BE               	goto	l97
  7142     11D2                     u4410:
  7143     11D2                     l3301:
  7144                           
  7145                           ;main.c: 131:     waitmssp();
  7146     11D2  0871               	movf	rtc_read_byte@addr,w
  7147     11D3  160A  158A  278A  160A  118A  	fcall	_rtc_send
  7148     11D8                     l3303:
  7149                           
  7150                           ;main.c: 132: }
  7151     11D8  160A  158A  274B  160A  118A  	fcall	_rtc_res
  7152     11DD                     l3305:
  7153                           
  7154                           ;main.c: 133: void rtc_ack()
  7155     11DD  30D1               	movlw	209
  7156     11DE  160A  158A  278A  160A  118A  	fcall	_rtc_send
  7157     11E3                     l3307:
  7158                           
  7159                           ;main.c: 134: {
  7160     11E3  160A  158A  277E  160A  118A  	fcall	_rtc_read
  7161     11E8  00F2               	movwf	rtc_read_byte@rec
  7162     11E9                     l3309:
  7163                           
  7164                           ;main.c: 135:     ACKDT=0;
  7165     11E9  160A  158A  275D  160A  118A  	fcall	_rtc_nak
  7166     11EE                     l3311:
  7167                           
  7168                           ;main.c: 136:     ACKEN=1;
  7169     11EE  160A  158A  2754  160A  118A  	fcall	_rtc_stop
  7170                           
  7171                           ;main.c: 137:     waitmssp();
  7172     11F3  0872               	movf	rtc_read_byte@rec,w
  7173     11F4                     l101:
  7174     11F4  0008               	return
  7175     11F5                     __end_of_rtc_read_byte:
  7176                           
  7177                           	psect	text26
  7178     1F54                     __ptext26:	
  7179 ;; *************** function _rtc_stop *****************
  7180 ;; Defined at:
  7181 ;;		line 145 in file "main.c"
  7182 ;; Parameters:    Size  Location     Type
  7183 ;;		None
  7184 ;; Auto vars:     Size  Location     Type
  7185 ;;		None
  7186 ;; Return value:  Size  Location     Type
  7187 ;;                  1    wreg      void 
  7188 ;; Registers used:
  7189 ;;		status,2, status,0, pclath, cstack
  7190 ;; Tracked objects:
  7191 ;;		On entry : 0/0
  7192 ;;		On exit  : 0/0
  7193 ;;		Unchanged: 0/0
  7194 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7195 ;;      Params:         0       0       0       0       0
  7196 ;;      Locals:         0       0       0       0       0
  7197 ;;      Temps:          0       0       0       0       0
  7198 ;;      Totals:         0       0       0       0       0
  7199 ;;Total ram usage:        0 bytes
  7200 ;; Hardware stack levels used: 1
  7201 ;; Hardware stack levels required when called: 1
  7202 ;; This function calls:
  7203 ;;		_waitmssp
  7204 ;; This function is called by:
  7205 ;;		_rtc_read_byte
  7206 ;;		_rtc_send_byte
  7207 ;; This function uses a non-reentrant model
  7208 ;;
  7209                           
  7210     1F54                     _rtc_stop:	
  7211                           ;psect for function _rtc_stop
  7212                           
  7213     1F54                     l3251:	
  7214                           ;incstack = 0
  7215                           ; Regs used in _rtc_stop: [status,2+status,0+pclath+cstack]
  7216                           
  7217                           
  7218                           ;main.c: 147:     return ((bcd>>4)+48);
  7219     1F54  1683               	bsf	3,5	;RP0=1, select bank1
  7220     1F55  1303               	bcf	3,6	;RP1=0, select bank1
  7221     1F56  1511               	bsf	17,2	;volatile
  7222     1F57                     l3253:
  7223                           
  7224                           ;main.c: 148: }
  7225     1F57  160A  158A  273B  160A  158A  	fcall	_waitmssp
  7226     1F5C                     l107:
  7227     1F5C  0008               	return
  7228     1F5D                     __end_of_rtc_stop:
  7229                           
  7230                           	psect	text27
  7231     1F8A                     __ptext27:	
  7232 ;; *************** function _rtc_send *****************
  7233 ;; Defined at:
  7234 ;;		line 101 in file "main.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  a               1    wreg     unsigned char 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  a               1    0[COMMON] unsigned char 
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  1    wreg      void 
  7241 ;; Registers used:
  7242 ;;		wreg, status,2, status,0, pclath, cstack
  7243 ;; Tracked objects:
  7244 ;;		On entry : 0/0
  7245 ;;		On exit  : 0/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7248 ;;      Params:         0       0       0       0       0
  7249 ;;      Locals:         1       0       0       0       0
  7250 ;;      Temps:          0       0       0       0       0
  7251 ;;      Totals:         1       0       0       0       0
  7252 ;;Total ram usage:        1 bytes
  7253 ;; Hardware stack levels used: 1
  7254 ;; Hardware stack levels required when called: 1
  7255 ;; This function calls:
  7256 ;;		_waitmssp
  7257 ;; This function is called by:
  7258 ;;		_rtc_read_byte
  7259 ;;		_rtc_send_byte
  7260 ;; This function uses a non-reentrant model
  7261 ;;
  7262                           
  7263     1F8A                     _rtc_send:	
  7264                           ;psect for function _rtc_send
  7265                           
  7266                           
  7267                           ;incstack = 0
  7268                           ; Regs used in _rtc_send: [wreg+status,2+status,0+pclath+cstack]
  7269                           ;rtc_send@a stored from wreg
  7270     1F8A  00F0               	movwf	rtc_send@a
  7271     1F8B                     l3247:
  7272                           
  7273                           ;main.c: 101: unsigned char rtc_read_byte(unsigned char addr);main.c: 102: {;main.c: 103
      +                          :     unsigned char rec;
  7274     1F8B  0870               	movf	rtc_send@a,w
  7275     1F8C  1283               	bcf	3,5	;RP0=0, select bank0
  7276     1F8D  1303               	bcf	3,6	;RP1=0, select bank0
  7277     1F8E  0093               	movwf	19	;volatile
  7278     1F8F                     l3249:
  7279                           
  7280                           ;main.c: 104: L: rtc_res();
  7281     1F8F  160A  158A  273B  160A  158A  	fcall	_waitmssp
  7282     1F94                     l85:	
  7283                           ;main.c: 105:     SSPBUF=0xD0;
  7284                           
  7285     1F94  1683               	bsf	3,5	;RP0=1, select bank1
  7286     1F95  1303               	bcf	3,6	;RP1=0, select bank1
  7287     1F96  1B11               	btfsc	17,6	;volatile
  7288     1F97  2F99               	goto	u4361
  7289     1F98  2F9A               	goto	u4360
  7290     1F99                     u4361:
  7291     1F99  2F94               	goto	l85
  7292     1F9A                     u4360:
  7293     1F9A                     l88:
  7294     1F9A  0008               	return
  7295     1F9B                     __end_of_rtc_send:
  7296                           
  7297                           	psect	text28
  7298     1F4B                     __ptext28:	
  7299 ;; *************** function _rtc_res *****************
  7300 ;; Defined at:
  7301 ;;		line 150 in file "main.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;		None
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;		None
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		status,2, status,0, pclath, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7315 ;;      Params:         0       0       0       0       0
  7316 ;;      Locals:         0       0       0       0       0
  7317 ;;      Temps:          0       0       0       0       0
  7318 ;;      Totals:         0       0       0       0       0
  7319 ;;Total ram usage:        0 bytes
  7320 ;; Hardware stack levels used: 1
  7321 ;; Hardware stack levels required when called: 1
  7322 ;; This function calls:
  7323 ;;		_waitmssp
  7324 ;; This function is called by:
  7325 ;;		_rtc_read_byte
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329     1F4B                     _rtc_res:	
  7330                           ;psect for function _rtc_res
  7331                           
  7332     1F4B                     l3263:	
  7333                           ;incstack = 0
  7334                           ; Regs used in _rtc_res: [status,2+status,0+pclath+cstack]
  7335                           
  7336                           
  7337                           ;main.c: 152: }
  7338     1F4B  1683               	bsf	3,5	;RP0=1, select bank1
  7339     1F4C  1303               	bcf	3,6	;RP1=0, select bank1
  7340     1F4D  1491               	bsf	17,1	;volatile
  7341     1F4E                     l3265:
  7342                           
  7343                           ;main.c: 153: 
  7344     1F4E  160A  158A  273B  160A  158A  	fcall	_waitmssp
  7345     1F53                     l110:
  7346     1F53  0008               	return
  7347     1F54                     __end_of_rtc_res:
  7348                           
  7349                           	psect	text29
  7350     1F7E                     __ptext29:	
  7351 ;; *************** function _rtc_read *****************
  7352 ;; Defined at:
  7353 ;;		line 116 in file "main.c"
  7354 ;; Parameters:    Size  Location     Type
  7355 ;;		None
  7356 ;; Auto vars:     Size  Location     Type
  7357 ;;		None
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  1    wreg      unsigned char 
  7360 ;; Registers used:
  7361 ;;		wreg, status,2, status,0, pclath, cstack
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7367 ;;      Params:         0       0       0       0       0
  7368 ;;      Locals:         0       0       0       0       0
  7369 ;;      Temps:          0       0       0       0       0
  7370 ;;      Totals:         0       0       0       0       0
  7371 ;;Total ram usage:        0 bytes
  7372 ;; Hardware stack levels used: 1
  7373 ;; Hardware stack levels required when called: 1
  7374 ;; This function calls:
  7375 ;;		_waitmssp
  7376 ;; This function is called by:
  7377 ;;		_rtc_read_byte
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381     1F7E                     _rtc_read:	
  7382                           ;psect for function _rtc_read
  7383                           
  7384     1F7E                     l3255:	
  7385                           ;incstack = 0
  7386                           ; Regs used in _rtc_read: [wreg+status,2+status,0+pclath+cstack]
  7387                           
  7388                           
  7389                           ;main.c: 118: void rtc_start(void)
  7390     1F7E  1683               	bsf	3,5	;RP0=1, select bank1
  7391     1F7F  1303               	bcf	3,6	;RP1=0, select bank1
  7392     1F80  1591               	bsf	17,3	;volatile
  7393     1F81                     l3257:
  7394                           
  7395                           ;main.c: 119: {
  7396     1F81  160A  158A  273B  160A  158A  	fcall	_waitmssp
  7397     1F86                     l3259:
  7398                           
  7399                           ;main.c: 120:     SEN=1;
  7400     1F86  1283               	bcf	3,5	;RP0=0, select bank0
  7401     1F87  1303               	bcf	3,6	;RP1=0, select bank0
  7402     1F88  0813               	movf	19,w	;volatile
  7403     1F89                     l94:
  7404     1F89  0008               	return
  7405     1F8A                     __end_of_rtc_read:
  7406                           
  7407                           	psect	text30
  7408     1F5D                     __ptext30:	
  7409 ;; *************** function _rtc_nak *****************
  7410 ;; Defined at:
  7411 ;;		line 161 in file "main.c"
  7412 ;; Parameters:    Size  Location     Type
  7413 ;;		None
  7414 ;; Auto vars:     Size  Location     Type
  7415 ;;		None
  7416 ;; Return value:  Size  Location     Type
  7417 ;;                  1    wreg      void 
  7418 ;; Registers used:
  7419 ;;		status,2, status,0, pclath, cstack
  7420 ;; Tracked objects:
  7421 ;;		On entry : 0/0
  7422 ;;		On exit  : 0/0
  7423 ;;		Unchanged: 0/0
  7424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7425 ;;      Params:         0       0       0       0       0
  7426 ;;      Locals:         0       0       0       0       0
  7427 ;;      Temps:          0       0       0       0       0
  7428 ;;      Totals:         0       0       0       0       0
  7429 ;;Total ram usage:        0 bytes
  7430 ;; Hardware stack levels used: 1
  7431 ;; Hardware stack levels required when called: 1
  7432 ;; This function calls:
  7433 ;;		_waitmssp
  7434 ;; This function is called by:
  7435 ;;		_rtc_read_byte
  7436 ;; This function uses a non-reentrant model
  7437 ;;
  7438                           
  7439     1F5D                     _rtc_nak:	
  7440                           ;psect for function _rtc_nak
  7441                           
  7442     1F5D                     l3267:	
  7443                           ;incstack = 0
  7444                           ; Regs used in _rtc_nak: [status,2+status,0+pclath+cstack]
  7445                           
  7446                           
  7447                           ;main.c: 163:       hour = rtc_read_byte(0x02);
  7448     1F5D  1683               	bsf	3,5	;RP0=1, select bank1
  7449     1F5E  1303               	bcf	3,6	;RP1=0, select bank1
  7450     1F5F  1691               	bsf	17,5	;volatile
  7451                           
  7452                           ;main.c: 164:       day = rtc_read_byte(0x03);
  7453     1F60  1611               	bsf	17,4	;volatile
  7454     1F61                     l3269:
  7455                           
  7456                           ;main.c: 165:       date = rtc_read_byte(0x04);
  7457     1F61  160A  158A  273B  160A  158A  	fcall	_waitmssp
  7458     1F66                     l116:
  7459     1F66  0008               	return
  7460     1F67                     __end_of_rtc_nak:
  7461                           
  7462                           	psect	text31
  7463     1F3B                     __ptext31:	
  7464 ;; *************** function _waitmssp *****************
  7465 ;; Defined at:
  7466 ;;		line 96 in file "main.c"
  7467 ;; Parameters:    Size  Location     Type
  7468 ;;		None
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;		None
  7471 ;; Return value:  Size  Location     Type
  7472 ;;                  1    wreg      void 
  7473 ;; Registers used:
  7474 ;;		None
  7475 ;; Tracked objects:
  7476 ;;		On entry : 0/0
  7477 ;;		On exit  : 0/0
  7478 ;;		Unchanged: 0/0
  7479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7480 ;;      Params:         0       0       0       0       0
  7481 ;;      Locals:         0       0       0       0       0
  7482 ;;      Temps:          0       0       0       0       0
  7483 ;;      Totals:         0       0       0       0       0
  7484 ;;Total ram usage:        0 bytes
  7485 ;; Hardware stack levels used: 1
  7486 ;; This function calls:
  7487 ;;		Nothing
  7488 ;; This function is called by:
  7489 ;;		_rtc_send
  7490 ;;		_rtc_read
  7491 ;;		_rtc_read_byte
  7492 ;;		_rtc_stop
  7493 ;;		_rtc_res
  7494 ;;		_rtc_nak
  7495 ;;		_rtc_start
  7496 ;;		_rtc_ack
  7497 ;; This function uses a non-reentrant model
  7498 ;;
  7499                           
  7500     1F3B                     _waitmssp:	
  7501                           ;psect for function _waitmssp
  7502                           
  7503     1F3B                     l3121:	
  7504                           ;incstack = 0
  7505                           ; Regs used in _waitmssp: []
  7506                           
  7507     1F3B                     l79:	
  7508                           ;main.c: 98:     return SSPBUF;
  7509                           
  7510     1F3B  1283               	bcf	3,5	;RP0=0, select bank0
  7511     1F3C  1303               	bcf	3,6	;RP1=0, select bank0
  7512     1F3D  1D8C               	btfss	12,3	;volatile
  7513     1F3E  2F40               	goto	u4301
  7514     1F3F  2F41               	goto	u4300
  7515     1F40                     u4301:
  7516     1F40  2F3B               	goto	l79
  7517     1F41                     u4300:
  7518     1F41                     l81:
  7519                           
  7520                           ;main.c: 99: }
  7521     1F41  118C               	bcf	12,3	;volatile
  7522     1F42                     l82:
  7523     1F42  0008               	return
  7524     1F43                     __end_of_waitmssp:
  7525                           
  7526                           	psect	text32
  7527     1FB0                     __ptext32:	
  7528 ;; *************** function _rtc_int *****************
  7529 ;; Defined at:
  7530 ;;		line 90 in file "main.c"
  7531 ;; Parameters:    Size  Location     Type
  7532 ;;		None
  7533 ;; Auto vars:     Size  Location     Type
  7534 ;;		None
  7535 ;; Return value:  Size  Location     Type
  7536 ;;                  1    wreg      void 
  7537 ;; Registers used:
  7538 ;;		wreg
  7539 ;; Tracked objects:
  7540 ;;		On entry : 0/0
  7541 ;;		On exit  : 0/0
  7542 ;;		Unchanged: 0/0
  7543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7544 ;;      Params:         0       0       0       0       0
  7545 ;;      Locals:         0       0       0       0       0
  7546 ;;      Temps:          0       0       0       0       0
  7547 ;;      Totals:         0       0       0       0       0
  7548 ;;Total ram usage:        0 bytes
  7549 ;; Hardware stack levels used: 1
  7550 ;; This function calls:
  7551 ;;		Nothing
  7552 ;; This function is called by:
  7553 ;;		_main
  7554 ;; This function uses a non-reentrant model
  7555 ;;
  7556                           
  7557     1FB0                     _rtc_int:	
  7558                           ;psect for function _rtc_int
  7559                           
  7560     1FB0                     l3291:	
  7561                           ;incstack = 0
  7562                           ; Regs used in _rtc_int: [wreg]
  7563                           
  7564                           
  7565                           ;main.c: 92:     rtc_stop();
  7566     1FB0  1683               	bsf	3,5	;RP0=1, select bank1
  7567     1FB1  1303               	bcf	3,6	;RP1=0, select bank1
  7568     1FB2  1607               	bsf	7,4	;volatile
  7569     1FB3  1A07               	btfsc	7,4	;volatile
  7570     1FB4  2FB6               	goto	u4391
  7571     1FB5  2FBA               	goto	u4390
  7572     1FB6                     u4391:
  7573     1FB6  1683               	bsf	3,5	;RP0=1, select bank1
  7574     1FB7  1303               	bcf	3,6	;RP1=0, select bank1
  7575     1FB8  1587               	bsf	7,3	;volatile
  7576     1FB9  2FBD               	goto	u4404
  7577     1FBA                     u4390:
  7578     1FBA  1683               	bsf	3,5	;RP0=1, select bank1
  7579     1FBB  1303               	bcf	3,6	;RP1=0, select bank1
  7580     1FBC  1187               	bcf	7,3	;volatile
  7581     1FBD                     u4404:
  7582     1FBD                     l3293:
  7583                           
  7584                           ;main.c: 93: }
  7585     1FBD  3028               	movlw	40
  7586     1FBE  1283               	bcf	3,5	;RP0=0, select bank0
  7587     1FBF  1303               	bcf	3,6	;RP1=0, select bank0
  7588     1FC0  0094               	movwf	20	;volatile
  7589                           
  7590                           ;main.c: 94: unsigned char rtc_read()
  7591     1FC1  30FF               	movlw	255
  7592     1FC2  1683               	bsf	3,5	;RP0=1, select bank1
  7593     1FC3  1303               	bcf	3,6	;RP1=0, select bank1
  7594     1FC4  0093               	movwf	19	;volatile
  7595     1FC5                     l76:
  7596     1FC5  0008               	return
  7597     1FC6                     __end_of_rtc_int:
  7598                           
  7599                           	psect	text33
  7600     1F72                     __ptext33:	
  7601 ;; *************** function _convup *****************
  7602 ;; Defined at:
  7603 ;;		line 167 in file "main.c"
  7604 ;; Parameters:    Size  Location     Type
  7605 ;;  bcd             1    wreg     unsigned char 
  7606 ;; Auto vars:     Size  Location     Type
  7607 ;;  bcd             1    1[COMMON] unsigned char 
  7608 ;; Return value:  Size  Location     Type
  7609 ;;                  1    wreg      unsigned char 
  7610 ;; Registers used:
  7611 ;;		wreg, status,2, status,0
  7612 ;; Tracked objects:
  7613 ;;		On entry : 0/0
  7614 ;;		On exit  : 0/0
  7615 ;;		Unchanged: 0/0
  7616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7617 ;;      Params:         0       0       0       0       0
  7618 ;;      Locals:         1       0       0       0       0
  7619 ;;      Temps:          1       0       0       0       0
  7620 ;;      Totals:         2       0       0       0       0
  7621 ;;Total ram usage:        2 bytes
  7622 ;; Hardware stack levels used: 1
  7623 ;; This function calls:
  7624 ;;		Nothing
  7625 ;; This function is called by:
  7626 ;;		_main
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630     1F72                     _convup:	
  7631                           ;psect for function _convup
  7632                           
  7633                           
  7634                           ;incstack = 0
  7635                           ; Regs used in _convup: [wreg+status,2+status,0]
  7636                           ;convup@bcd stored from wreg
  7637     1F72  00F1               	movwf	convup@bcd
  7638     1F73                     l3315:
  7639                           
  7640                           ;main.c: 167:       year = rtc_read_byte(0x06);;main.c: 168: ;main.c: 169:       LCD_Cmd
      +                          (0x80);
  7641     1F73  0871               	movf	convup@bcd,w
  7642     1F74  00F0               	movwf	??_convup
  7643     1F75  3004               	movlw	4
  7644     1F76                     u4425:
  7645     1F76  1003               	clrc
  7646     1F77  0CF0               	rrf	??_convup,f
  7647     1F78  3EFF               	addlw	-1
  7648     1F79  1D03               	skipz
  7649     1F7A  2F76               	goto	u4425
  7650     1F7B  0870               	movf	??_convup,w
  7651     1F7C  3E30               	addlw	48
  7652     1F7D                     l119:
  7653     1F7D  0008               	return
  7654     1F7E                     __end_of_convup:
  7655                           
  7656                           	psect	text34
  7657     1028                     __ptext34:	
  7658 ;; *************** function _convd *****************
  7659 ;; Defined at:
  7660 ;;		line 171 in file "main.c"
  7661 ;; Parameters:    Size  Location     Type
  7662 ;;  bcd             1    wreg     unsigned char 
  7663 ;; Auto vars:     Size  Location     Type
  7664 ;;  bcd             1    0[COMMON] unsigned char 
  7665 ;; Return value:  Size  Location     Type
  7666 ;;                  1    wreg      unsigned char 
  7667 ;; Registers used:
  7668 ;;		wreg, status,2, status,0
  7669 ;; Tracked objects:
  7670 ;;		On entry : 0/0
  7671 ;;		On exit  : 0/0
  7672 ;;		Unchanged: 0/0
  7673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7674 ;;      Params:         0       0       0       0       0
  7675 ;;      Locals:         1       0       0       0       0
  7676 ;;      Temps:          0       0       0       0       0
  7677 ;;      Totals:         1       0       0       0       0
  7678 ;;Total ram usage:        1 bytes
  7679 ;; Hardware stack levels used: 1
  7680 ;; This function calls:
  7681 ;;		Nothing
  7682 ;; This function is called by:
  7683 ;;		_main
  7684 ;; This function uses a non-reentrant model
  7685 ;;
  7686                           
  7687     1028                     _convd:	
  7688                           ;psect for function _convd
  7689                           
  7690                           
  7691                           ;incstack = 0
  7692                           ; Regs used in _convd: [wreg+status,2+status,0]
  7693                           ;convd@bcd stored from wreg
  7694     1028  00F0               	movwf	convd@bcd
  7695     1029                     l3319:
  7696                           
  7697                           ;main.c: 171:       LCD_Data(convd(hour));;main.c: 172:       LCD_Data(':');;main.c: 173
      +                          :       sprintf(Temp, " %.2f", hour);
  7698     1029  0870               	movf	convd@bcd,w
  7699     102A  390F               	andlw	15
  7700     102B  3E30               	addlw	48
  7701     102C                     l122:
  7702     102C  0008               	return
  7703     102D                     __end_of_convd:
  7704                           
  7705                           	psect	text35
  7706     1097                     __ptext35:	
  7707 ;; *************** function _LCD_String *****************
  7708 ;; Defined at:
  7709 ;;		line 84 in file "main.c"
  7710 ;; Parameters:    Size  Location     Type
  7711 ;;  s               2    3[COMMON] PTR unsigned char 
  7712 ;;		 -> RAM(512), STR_1(9), 
  7713 ;; Auto vars:     Size  Location     Type
  7714 ;;		None
  7715 ;; Return value:  Size  Location     Type
  7716 ;;                  1    wreg      void 
  7717 ;; Registers used:
  7718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7719 ;; Tracked objects:
  7720 ;;		On entry : 0/0
  7721 ;;		On exit  : 0/0
  7722 ;;		Unchanged: 0/0
  7723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7724 ;;      Params:         2       0       0       0       0
  7725 ;;      Locals:         0       0       0       0       0
  7726 ;;      Temps:          0       0       0       0       0
  7727 ;;      Totals:         2       0       0       0       0
  7728 ;;Total ram usage:        2 bytes
  7729 ;; Hardware stack levels used: 1
  7730 ;; Hardware stack levels required when called: 1
  7731 ;; This function calls:
  7732 ;;		_LCD_Data
  7733 ;; This function is called by:
  7734 ;;		_main
  7735 ;; This function uses a non-reentrant model
  7736 ;;
  7737                           
  7738     1097                     _LCD_String:	
  7739                           ;psect for function _LCD_String
  7740                           
  7741     1097                     l3283:	
  7742                           ;incstack = 0
  7743                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7744                           
  7745                           
  7746                           ;main.c: 85: void rtc_send_byte(unsigned char addr,unsigned char data)
  7747     1097  28AC               	goto	l3289
  7748     1098                     l3285:
  7749                           
  7750                           ;main.c: 86: {
  7751     1098  0874               	movf	LCD_String@s+1,w
  7752     1099  00FF               	movwf	btemp+1
  7753     109A  0873               	movf	LCD_String@s,w
  7754     109B  0084               	movwf	4
  7755     109C  160A  118A  2000  160A  118A  	fcall	stringtab
  7756     10A1  160A  118A  218E  160A  118A  	fcall	_LCD_Data
  7757     10A6                     l3287:
  7758     10A6  3001               	movlw	1
  7759     10A7  07F3               	addwf	LCD_String@s,f
  7760     10A8  1803               	skipnc
  7761     10A9  0AF4               	incf	LCD_String@s+1,f
  7762     10AA  3000               	movlw	0
  7763     10AB  07F4               	addwf	LCD_String@s+1,f
  7764     10AC                     l3289:
  7765                           
  7766                           ;main.c: 85: void rtc_send_byte(unsigned char addr,unsigned char data)
  7767     10AC  0874               	movf	LCD_String@s+1,w
  7768     10AD  1283               	bcf	3,5	;RP0=0, select bank0
  7769     10AE  1303               	bcf	3,6	;RP1=0, select bank0
  7770     10AF  00FF               	movwf	btemp+1
  7771     10B0  0873               	movf	LCD_String@s,w
  7772     10B1  0084               	movwf	4
  7773     10B2  160A  118A  2000  160A  118A  	fcall	stringtab
  7774     10B7  3A00               	xorlw	0
  7775     10B8  1D03               	skipz
  7776     10B9  28BB               	goto	u4381
  7777     10BA  28BC               	goto	u4380
  7778     10BB                     u4381:
  7779     10BB  2898               	goto	l3285
  7780     10BC                     u4380:
  7781     10BC                     l73:
  7782     10BC  0008               	return
  7783     10BD                     __end_of_LCD_String:
  7784                           
  7785                           	psect	text36
  7786     118E                     __ptext36:	
  7787 ;; *************** function _LCD_Data *****************
  7788 ;; Defined at:
  7789 ;;		line 61 in file "main.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  data            1    wreg     unsigned char 
  7792 ;; Auto vars:     Size  Location     Type
  7793 ;;  data            1    2[COMMON] unsigned char 
  7794 ;; Return value:  Size  Location     Type
  7795 ;;                  1    wreg      void 
  7796 ;; Registers used:
  7797 ;;		wreg, status,2, status,0
  7798 ;; Tracked objects:
  7799 ;;		On entry : 0/0
  7800 ;;		On exit  : 0/0
  7801 ;;		Unchanged: 0/0
  7802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7803 ;;      Params:         0       0       0       0       0
  7804 ;;      Locals:         1       0       0       0       0
  7805 ;;      Temps:          2       0       0       0       0
  7806 ;;      Totals:         3       0       0       0       0
  7807 ;;Total ram usage:        3 bytes
  7808 ;; Hardware stack levels used: 1
  7809 ;; This function calls:
  7810 ;;		Nothing
  7811 ;; This function is called by:
  7812 ;;		_LCD_String
  7813 ;;		_main
  7814 ;; This function uses a non-reentrant model
  7815 ;;
  7816                           
  7817     118E                     _LCD_Data:	
  7818                           ;psect for function _LCD_Data
  7819                           
  7820                           
  7821                           ;incstack = 0
  7822                           ; Regs used in _LCD_Data: [wreg+status,2+status,0]
  7823                           ;LCD_Data@data stored from wreg
  7824     118E  00F2               	movwf	LCD_Data@data
  7825     118F                     l3223:
  7826                           
  7827                           ;main.c: 62: void LCD_String(unsigned char *s){
  7828     118F  0872               	movf	LCD_Data@data,w
  7829     1190  39F0               	andlw	240
  7830     1191  1283               	bcf	3,5	;RP0=0, select bank0
  7831     1192  1303               	bcf	3,6	;RP1=0, select bank0
  7832     1193  0086               	movwf	6	;volatile
  7833     1194                     l3225:
  7834                           
  7835                           ;main.c: 63:     while(*s){
  7836     1194  1506               	bsf	6,2	;volatile
  7837     1195                     l3227:
  7838                           
  7839                           ;main.c: 64:         LCD_Data(*s++);
  7840     1195  1086               	bcf	6,1	;volatile
  7841     1196                     l3229:
  7842                           
  7843                           ;main.c: 65:     }
  7844     1196  1406               	bsf	6,0	;volatile
  7845     1197                     l3231:
  7846                           
  7847                           ;main.c: 66: }
  7848     1197  3007               	movlw	7
  7849     1198  00F1               	movwf	??_LCD_Data+1
  7850     1199  307D               	movlw	125
  7851     119A  00F0               	movwf	??_LCD_Data
  7852     119B                     u4437:
  7853     119B  0BF0               	decfsz	??_LCD_Data,f
  7854     119C  299B               	goto	u4437
  7855     119D  0BF1               	decfsz	??_LCD_Data+1,f
  7856     119E  299B               	goto	u4437
  7857     119F                     l3233:
  7858                           
  7859                           ;main.c: 67: 
  7860     119F  1283               	bcf	3,5	;RP0=0, select bank0
  7861     11A0  1303               	bcf	3,6	;RP1=0, select bank0
  7862     11A1  1106               	bcf	6,2	;volatile
  7863     11A2                     l3235:
  7864                           
  7865                           ;main.c: 68: void rtc_int()
  7866     11A2  0872               	movf	LCD_Data@data,w
  7867     11A3  00F0               	movwf	??_LCD_Data
  7868     11A4  3003               	movlw	3
  7869     11A5                     u4355:
  7870     11A5  1003               	clrc
  7871     11A6  0DF0               	rlf	??_LCD_Data,f
  7872     11A7  3EFF               	addlw	-1
  7873     11A8  1D03               	skipz
  7874     11A9  29A5               	goto	u4355
  7875     11AA  1003               	clrc
  7876     11AB  0D70               	rlf	??_LCD_Data,w
  7877     11AC  39F0               	andlw	240
  7878     11AD  0086               	movwf	6	;volatile
  7879     11AE                     l3237:
  7880                           
  7881                           ;main.c: 69: {
  7882     11AE  1506               	bsf	6,2	;volatile
  7883     11AF                     l3239:
  7884                           
  7885                           ;main.c: 70:     TRISC3=TRISC4=1;
  7886     11AF  1086               	bcf	6,1	;volatile
  7887     11B0                     l3241:
  7888                           
  7889                           ;main.c: 71:     SSPCON=0x28;
  7890     11B0  1406               	bsf	6,0	;volatile
  7891     11B1                     l3243:
  7892                           
  7893                           ;main.c: 72:     SSPADD= (((11059200/4)/100)-1);
  7894     11B1  3007               	movlw	7
  7895     11B2  00F1               	movwf	??_LCD_Data+1
  7896     11B3  307D               	movlw	125
  7897     11B4  00F0               	movwf	??_LCD_Data
  7898     11B5                     u4447:
  7899     11B5  0BF0               	decfsz	??_LCD_Data,f
  7900     11B6  29B5               	goto	u4447
  7901     11B7  0BF1               	decfsz	??_LCD_Data+1,f
  7902     11B8  29B5               	goto	u4447
  7903     11B9                     l3245:
  7904                           
  7905                           ;main.c: 73: }
  7906     11B9  1283               	bcf	3,5	;RP0=0, select bank0
  7907     11BA  1303               	bcf	3,6	;RP1=0, select bank0
  7908     11BB  1106               	bcf	6,2	;volatile
  7909     11BC                     l64:
  7910     11BC  0008               	return
  7911     11BD                     __end_of_LCD_Data:
  7912                           
  7913                           	psect	text37
  7914     1FE1                     __ptext37:	
  7915 ;; *************** function _LCD_Init *****************
  7916 ;; Defined at:
  7917 ;;		line 76 in file "main.c"
  7918 ;; Parameters:    Size  Location     Type
  7919 ;;		None
  7920 ;; Auto vars:     Size  Location     Type
  7921 ;;		None
  7922 ;; Return value:  Size  Location     Type
  7923 ;;                  1    wreg      void 
  7924 ;; Registers used:
  7925 ;;		wreg, status,2, status,0, pclath, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7931 ;;      Params:         0       0       0       0       0
  7932 ;;      Locals:         0       0       0       0       0
  7933 ;;      Temps:          0       0       0       0       0
  7934 ;;      Totals:         0       0       0       0       0
  7935 ;;Total ram usage:        0 bytes
  7936 ;; Hardware stack levels used: 1
  7937 ;; Hardware stack levels required when called: 1
  7938 ;; This function calls:
  7939 ;;		_LCD_Cmd
  7940 ;; This function is called by:
  7941 ;;		_main
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945     1FE1                     _LCD_Init:	
  7946                           ;psect for function _LCD_Init
  7947                           
  7948     1FE1                     l3281:	
  7949                           ;incstack = 0
  7950                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  7951                           
  7952                           
  7953                           ;main.c: 77:     SSPIF=0;
  7954     1FE1  3002               	movlw	2
  7955     1FE2  160A  118A  215F  160A  158A  	fcall	_LCD_Cmd
  7956                           
  7957                           ;main.c: 78: }
  7958     1FE7  3028               	movlw	40
  7959     1FE8  160A  118A  215F  160A  158A  	fcall	_LCD_Cmd
  7960                           
  7961                           ;main.c: 79: void rtc_send(unsigned char a)
  7962     1FED  300C               	movlw	12
  7963     1FEE  160A  118A  215F  160A  158A  	fcall	_LCD_Cmd
  7964                           
  7965                           ;main.c: 80: {
  7966     1FF3  3006               	movlw	6
  7967     1FF4  160A  118A  215F  160A  158A  	fcall	_LCD_Cmd
  7968                           
  7969                           ;main.c: 81:     SSPBUF=a;
  7970     1FF9  3001               	movlw	1
  7971     1FFA  160A  118A  215F  160A  158A  	fcall	_LCD_Cmd
  7972     1FFF                     l67:
  7973     1FFF  0008               	return
  7974     2000                     __end_of_LCD_Init:
  7975                           
  7976                           	psect	text38
  7977     115F                     __ptext38:	
  7978 ;; *************** function _LCD_Cmd *****************
  7979 ;; Defined at:
  7980 ;;		line 46 in file "main.c"
  7981 ;; Parameters:    Size  Location     Type
  7982 ;;  data            1    wreg     unsigned char 
  7983 ;; Auto vars:     Size  Location     Type
  7984 ;;  data            1    2[COMMON] unsigned char 
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  1    wreg      void 
  7987 ;; Registers used:
  7988 ;;		wreg, status,2, status,0
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7994 ;;      Params:         0       0       0       0       0
  7995 ;;      Locals:         1       0       0       0       0
  7996 ;;      Temps:          2       0       0       0       0
  7997 ;;      Totals:         3       0       0       0       0
  7998 ;;Total ram usage:        3 bytes
  7999 ;; Hardware stack levels used: 1
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_LCD_Init
  8004 ;;		_main
  8005 ;; This function uses a non-reentrant model
  8006 ;;
  8007                           
  8008     115F                     _LCD_Cmd:	
  8009                           ;psect for function _LCD_Cmd
  8010                           
  8011                           
  8012                           ;incstack = 0
  8013                           ; Regs used in _LCD_Cmd: [wreg+status,2+status,0]
  8014                           ;LCD_Cmd@data stored from wreg
  8015     115F  00F2               	movwf	LCD_Cmd@data
  8016     1160                     l3199:
  8017                           
  8018                           ;main.c: 47:     PORTBbits.RB2 = 1;
  8019     1160  0872               	movf	LCD_Cmd@data,w
  8020     1161  39F0               	andlw	240
  8021     1162  1283               	bcf	3,5	;RP0=0, select bank0
  8022     1163  1303               	bcf	3,6	;RP1=0, select bank0
  8023     1164  0086               	movwf	6	;volatile
  8024     1165                     l3201:
  8025                           
  8026                           ;main.c: 48:     PORTBbits.RB1 = 0;
  8027     1165  1506               	bsf	6,2	;volatile
  8028     1166                     l3203:
  8029                           
  8030                           ;main.c: 49:     PORTBbits.RB0 = 1;
  8031     1166  1086               	bcf	6,1	;volatile
  8032     1167                     l3205:
  8033                           
  8034                           ;main.c: 50:     _delay((unsigned long)((5)*(4000000/4000.0)));
  8035     1167  1006               	bcf	6,0	;volatile
  8036     1168                     l3207:
  8037                           
  8038                           ;main.c: 51:     PORTBbits.RB2 = 0;
  8039     1168  3007               	movlw	7
  8040     1169  00F1               	movwf	??_LCD_Cmd+1
  8041     116A  307D               	movlw	125
  8042     116B  00F0               	movwf	??_LCD_Cmd
  8043     116C                     u4457:
  8044     116C  0BF0               	decfsz	??_LCD_Cmd,f
  8045     116D  296C               	goto	u4457
  8046     116E  0BF1               	decfsz	??_LCD_Cmd+1,f
  8047     116F  296C               	goto	u4457
  8048     1170                     l3209:
  8049                           
  8050                           ;main.c: 52: }
  8051     1170  1283               	bcf	3,5	;RP0=0, select bank0
  8052     1171  1303               	bcf	3,6	;RP1=0, select bank0
  8053     1172  1106               	bcf	6,2	;volatile
  8054     1173                     l3211:
  8055                           
  8056                           ;main.c: 53: 
  8057     1173  0872               	movf	LCD_Cmd@data,w
  8058     1174  00F0               	movwf	??_LCD_Cmd
  8059     1175  3003               	movlw	3
  8060     1176                     u4345:
  8061     1176  1003               	clrc
  8062     1177  0DF0               	rlf	??_LCD_Cmd,f
  8063     1178  3EFF               	addlw	-1
  8064     1179  1D03               	skipz
  8065     117A  2976               	goto	u4345
  8066     117B  1003               	clrc
  8067     117C  0D70               	rlf	??_LCD_Cmd,w
  8068     117D  39F0               	andlw	240
  8069     117E  0086               	movwf	6	;volatile
  8070     117F                     l3213:
  8071                           
  8072                           ;main.c: 54: void LCD_Init(){
  8073     117F  1506               	bsf	6,2	;volatile
  8074     1180                     l3215:
  8075                           
  8076                           ;main.c: 55:     LCD_Cmd(0x02);
  8077     1180  1086               	bcf	6,1	;volatile
  8078     1181                     l3217:
  8079                           
  8080                           ;main.c: 56:     LCD_Cmd(0x28);
  8081     1181  1006               	bcf	6,0	;volatile
  8082     1182                     l3219:
  8083                           
  8084                           ;main.c: 57:     LCD_Cmd(0x0C);
  8085     1182  3007               	movlw	7
  8086     1183  00F1               	movwf	??_LCD_Cmd+1
  8087     1184  307D               	movlw	125
  8088     1185  00F0               	movwf	??_LCD_Cmd
  8089     1186                     u4467:
  8090     1186  0BF0               	decfsz	??_LCD_Cmd,f
  8091     1187  2986               	goto	u4467
  8092     1188  0BF1               	decfsz	??_LCD_Cmd+1,f
  8093     1189  2986               	goto	u4467
  8094     118A                     l3221:
  8095                           
  8096                           ;main.c: 58:     LCD_Cmd(0x06);
  8097     118A  1283               	bcf	3,5	;RP0=0, select bank0
  8098     118B  1303               	bcf	3,6	;RP1=0, select bank0
  8099     118C  1106               	bcf	6,2	;volatile
  8100     118D                     l61:
  8101     118D  0008               	return
  8102     118E                     __end_of_LCD_Cmd:
  8103     007E                     btemp	set	126	;btemp
  8104     007E                     wtemp0	set	126
  8105                           
  8106                           	psect	config
  8107                           
  8108                           ;Config register CONFIG @ 0x2007
  8109                           ;	Oscillator Selection bits
  8110                           ;	FOSC = HS, HS oscillator
  8111                           ;	Watchdog Timer Enable bit
  8112                           ;	WDTE = ON, WDT enabled
  8113                           ;	Power-up Timer Enable bit
  8114                           ;	PWRTE = ON, PWRT enabled
  8115                           ;	Brown-out Reset Enable bit
  8116                           ;	BOREN = OFF, BOR disabled
  8117                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  8118                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  8119                           ;	Data EEPROM Memory Code Protection bit
  8120                           ;	CPD = OFF, Data EEPROM code protection off
  8121                           ;	Flash Program Memory Write Enable bits
  8122                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  8123                           ;	In-Circuit Debugger Mode bit
  8124                           ;	DEBUG = 0x1, unprogrammed default
  8125                           ;	Flash Program Memory Code Protection bit
  8126                           ;	CP = OFF, Code protection off
  8127     2007                     	org	8199
  8128     2007  3F36               	dw	16182
  8129                           
  8130                           	psect	text6_split_1
  8131     00E3                     l2947:
  8132                           
  8133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  8134     00E3  303F               	movlw	63
  8135     00E4  1683               	bsf	3,5	;RP0=1, select bank1
  8136     00E5  1303               	bcf	3,6	;RP1=0, select bank1
  8137     00E6  00CC               	movwf	(efgtoa@u+3)^(0+128)
  8138     00E7  3080               	movlw	128
  8139     00E8  00CB               	movwf	(efgtoa@u+2)^(0+128)
  8140     00E9  3000               	movlw	0
  8141     00EA  00CA               	movwf	(efgtoa@u+1)^(0+128)
  8142     00EB  3000               	movlw	0
  8143     00EC  00C9               	movwf	efgtoa@u^(0+128)
  8144     00ED                     l2949:
  8145                           
  8146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  8147     00ED  01B0               	clrf	efgtoa@e^(0+128)
  8148     00EE  01B1               	clrf	(efgtoa@e+1)^(0+128)
  8149     00EF                     l2951:
  8150                           
  8151                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  8152     00EF  0848               	movf	(efgtoa@g+3)^(0+128),w
  8153     00F0  00F3               	movwf	___fleq@ff1+3
  8154     00F1  0847               	movf	(efgtoa@g+2)^(0+128),w
  8155     00F2  00F2               	movwf	___fleq@ff1+2
  8156     00F3  0846               	movf	(efgtoa@g+1)^(0+128),w
  8157     00F4  00F1               	movwf	___fleq@ff1+1
  8158     00F5  0845               	movf	efgtoa@g^(0+128),w
  8159     00F6  00F0               	movwf	___fleq@ff1
  8160     00F7  3000               	movlw	0
  8161     00F8  00F7               	movwf	___fleq@ff2+3
  8162     00F9  3000               	movlw	0
  8163     00FA  00F6               	movwf	___fleq@ff2+2
  8164     00FB  3000               	movlw	0
  8165     00FC  00F5               	movwf	___fleq@ff2+1
  8166     00FD  3000               	movlw	0
  8167     00FE  00F4               	movwf	___fleq@ff2
  8168     00FF  160A  118A  21F5  120A  118A  	fcall	___fleq
  8169     0104  1803               	btfsc	3,0
  8170     0105  2907               	goto	u4001
  8171     0106  2908               	goto	u4000
  8172     0107                     u4001:
  8173     0107  2B19               	goto	l2977
  8174     0108                     u4000:
  8175     0108  2919               	goto	l2957
  8176     0109                     l2955:
  8177                           
  8178                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  8179     0109  1683               	bsf	3,5	;RP0=1, select bank1
  8180     010A  1303               	bcf	3,6	;RP1=0, select bank1
  8181     010B  0837               	movf	(efgtoa@ou+3)^(0+128),w
  8182     010C  00CC               	movwf	(efgtoa@u+3)^(0+128)
  8183     010D  0836               	movf	(efgtoa@ou+2)^(0+128),w
  8184     010E  00CB               	movwf	(efgtoa@u+2)^(0+128)
  8185     010F  0835               	movf	(efgtoa@ou+1)^(0+128),w
  8186     0110  00CA               	movwf	(efgtoa@u+1)^(0+128)
  8187     0111  0834               	movf	efgtoa@ou^(0+128),w
  8188     0112  00C9               	movwf	efgtoa@u^(0+128)
  8189                           
  8190                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  8191     0113  3001               	movlw	1
  8192     0114  07B0               	addwf	efgtoa@e^(0+128),f
  8193     0115  1803               	skipnc
  8194     0116  0AB1               	incf	(efgtoa@e+1)^(0+128),f
  8195     0117  3000               	movlw	0
  8196     0118  07B1               	addwf	(efgtoa@e+1)^(0+128),f
  8197     0119                     l2957:
  8198                           
  8199                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  8200     0119  3041               	movlw	65
  8201     011A  1283               	bcf	3,5	;RP0=0, select bank0
  8202     011B  1303               	bcf	3,6	;RP1=0, select bank0
  8203     011C  00A3               	movwf	___flmul@b+3
  8204     011D  3020               	movlw	32
  8205     011E  00A2               	movwf	___flmul@b+2
  8206     011F  3000               	movlw	0
  8207     0120  00A1               	movwf	___flmul@b+1
  8208     0121  3000               	movlw	0
  8209     0122  00A0               	movwf	___flmul@b
  8210     0123  1683               	bsf	3,5	;RP0=1, select bank1
  8211     0124  1303               	bcf	3,6	;RP1=0, select bank1
  8212     0125  084C               	movf	(efgtoa@u+3)^(0+128),w
  8213     0126  1283               	bcf	3,5	;RP0=0, select bank0
  8214     0127  1303               	bcf	3,6	;RP1=0, select bank0
  8215     0128  00A7               	movwf	___flmul@a+3
  8216     0129  1683               	bsf	3,5	;RP0=1, select bank1
  8217     012A  1303               	bcf	3,6	;RP1=0, select bank1
  8218     012B  084B               	movf	(efgtoa@u+2)^(0+128),w
  8219     012C  1283               	bcf	3,5	;RP0=0, select bank0
  8220     012D  1303               	bcf	3,6	;RP1=0, select bank0
  8221     012E  00A6               	movwf	___flmul@a+2
  8222     012F  1683               	bsf	3,5	;RP0=1, select bank1
  8223     0130  1303               	bcf	3,6	;RP1=0, select bank1
  8224     0131  084A               	movf	(efgtoa@u+1)^(0+128),w
  8225     0132  1283               	bcf	3,5	;RP0=0, select bank0
  8226     0133  1303               	bcf	3,6	;RP1=0, select bank0
  8227     0134  00A5               	movwf	___flmul@a+1
  8228     0135  1683               	bsf	3,5	;RP0=1, select bank1
  8229     0136  1303               	bcf	3,6	;RP1=0, select bank1
  8230     0137  0849               	movf	efgtoa@u^(0+128),w
  8231     0138  1283               	bcf	3,5	;RP0=0, select bank0
  8232     0139  1303               	bcf	3,6	;RP1=0, select bank0
  8233     013A  00A4               	movwf	___flmul@a
  8234     013B  120A  158A  24BB  120A  118A  	fcall	___flmul
  8235     0140  1283               	bcf	3,5	;RP0=0, select bank0
  8236     0141  1303               	bcf	3,6	;RP1=0, select bank0
  8237     0142  0823               	movf	?___flmul+3,w
  8238     0143  1683               	bsf	3,5	;RP0=1, select bank1
  8239     0144  1303               	bcf	3,6	;RP1=0, select bank1
  8240     0145  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  8241     0146  1283               	bcf	3,5	;RP0=0, select bank0
  8242     0147  1303               	bcf	3,6	;RP1=0, select bank0
  8243     0148  0822               	movf	?___flmul+2,w
  8244     0149  1683               	bsf	3,5	;RP0=1, select bank1
  8245     014A  1303               	bcf	3,6	;RP1=0, select bank1
  8246     014B  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  8247     014C  1283               	bcf	3,5	;RP0=0, select bank0
  8248     014D  1303               	bcf	3,6	;RP1=0, select bank0
  8249     014E  0821               	movf	?___flmul+1,w
  8250     014F  1683               	bsf	3,5	;RP0=1, select bank1
  8251     0150  1303               	bcf	3,6	;RP1=0, select bank1
  8252     0151  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  8253     0152  1283               	bcf	3,5	;RP0=0, select bank0
  8254     0153  1303               	bcf	3,6	;RP1=0, select bank0
  8255     0154  0820               	movf	?___flmul,w
  8256     0155  1683               	bsf	3,5	;RP0=1, select bank1
  8257     0156  1303               	bcf	3,6	;RP1=0, select bank1
  8258     0157  00B4               	movwf	efgtoa@ou^(0+128)
  8259     0158                     l2959:
  8260     0158  0845               	movf	efgtoa@g^(0+128),w
  8261     0159  1283               	bcf	3,5	;RP0=0, select bank0
  8262     015A  1303               	bcf	3,6	;RP1=0, select bank0
  8263     015B  00C6               	movwf	??_efgtoa
  8264     015C  1683               	bsf	3,5	;RP0=1, select bank1
  8265     015D  1303               	bcf	3,6	;RP1=0, select bank1
  8266     015E  0846               	movf	(efgtoa@g+1)^(0+128),w
  8267     015F  1283               	bcf	3,5	;RP0=0, select bank0
  8268     0160  1303               	bcf	3,6	;RP1=0, select bank0
  8269     0161  00C7               	movwf	??_efgtoa+1
  8270     0162  1683               	bsf	3,5	;RP0=1, select bank1
  8271     0163  1303               	bcf	3,6	;RP1=0, select bank1
  8272     0164  0847               	movf	(efgtoa@g+2)^(0+128),w
  8273     0165  1283               	bcf	3,5	;RP0=0, select bank0
  8274     0166  1303               	bcf	3,6	;RP1=0, select bank0
  8275     0167  00C8               	movwf	??_efgtoa+2
  8276     0168  1683               	bsf	3,5	;RP0=1, select bank1
  8277     0169  1303               	bcf	3,6	;RP1=0, select bank1
  8278     016A  0848               	movf	(efgtoa@g+3)^(0+128),w
  8279     016B  1283               	bcf	3,5	;RP0=0, select bank0
  8280     016C  1303               	bcf	3,6	;RP1=0, select bank0
  8281     016D  00C9               	movwf	??_efgtoa+3
  8282     016E  1683               	bsf	3,5	;RP0=1, select bank1
  8283     016F  1303               	bcf	3,6	;RP1=0, select bank1
  8284     0170  0834               	movf	efgtoa@ou^(0+128),w
  8285     0171  1283               	bcf	3,5	;RP0=0, select bank0
  8286     0172  1303               	bcf	3,6	;RP1=0, select bank0
  8287     0173  02C6               	subwf	??_efgtoa,f
  8288     0174  1683               	bsf	3,5	;RP0=1, select bank1
  8289     0175  1303               	bcf	3,6	;RP1=0, select bank1
  8290     0176  0835               	movf	(efgtoa@ou+1)^(0+128),w
  8291     0177  1C03               	skipc
  8292     0178  0F35               	incfsz	(efgtoa@ou+1)^(0+128),w
  8293     0179  297B               	goto	u4011
  8294     017A  297E               	goto	u4012
  8295     017B                     u4011:
  8296     017B  1283               	bcf	3,5	;RP0=0, select bank0
  8297     017C  1303               	bcf	3,6	;RP1=0, select bank0
  8298     017D  02C7               	subwf	??_efgtoa+1,f
  8299     017E                     u4012:
  8300     017E  1683               	bsf	3,5	;RP0=1, select bank1
  8301     017F  1303               	bcf	3,6	;RP1=0, select bank1
  8302     0180  0836               	movf	(efgtoa@ou+2)^(0+128),w
  8303     0181  1C03               	skipc
  8304     0182  0F36               	incfsz	(efgtoa@ou+2)^(0+128),w
  8305     0183  2985               	goto	u4013
  8306     0184  2988               	goto	u4014
  8307     0185                     u4013:
  8308     0185  1283               	bcf	3,5	;RP0=0, select bank0
  8309     0186  1303               	bcf	3,6	;RP1=0, select bank0
  8310     0187  02C8               	subwf	??_efgtoa+2,f
  8311     0188                     u4014:
  8312     0188  1683               	bsf	3,5	;RP0=1, select bank1
  8313     0189  1303               	bcf	3,6	;RP1=0, select bank1
  8314     018A  0837               	movf	(efgtoa@ou+3)^(0+128),w
  8315     018B  1C03               	skipc
  8316     018C  0F37               	incfsz	(efgtoa@ou+3)^(0+128),w
  8317     018D  298F               	goto	u4015
  8318     018E  2992               	goto	u4016
  8319     018F                     u4015:
  8320     018F  1283               	bcf	3,5	;RP0=0, select bank0
  8321     0190  1303               	bcf	3,6	;RP1=0, select bank0
  8322     0191  02C9               	subwf	??_efgtoa+3,f
  8323     0192                     u4016:
  8324     0192  1683               	bsf	3,5	;RP0=1, select bank1
  8325     0193  1303               	bcf	3,6	;RP1=0, select bank1
  8326     0194  1283               	bcf	3,5	;RP0=0, select bank0
  8327     0195  1303               	bcf	3,6	;RP1=0, select bank0
  8328     0196  0849               	movf	??_efgtoa+3,w
  8329     0197  00F3               	movwf	labs@a+3
  8330     0198  0848               	movf	??_efgtoa+2,w
  8331     0199  00F2               	movwf	labs@a+2
  8332     019A  0847               	movf	??_efgtoa+1,w
  8333     019B  00F1               	movwf	labs@a+1
  8334     019C  0846               	movf	??_efgtoa,w
  8335     019D  00F0               	movwf	labs@a
  8336     019E  160A  158A  279B  120A  118A  	fcall	_labs
  8337     01A3  1BF3               	btfsc	?_labs+3,7
  8338     01A4  29B5               	goto	u4021
  8339     01A5  0873               	movf	?_labs+3,w
  8340     01A6  1D03               	btfss	3,2
  8341     01A7  29B6               	goto	u4020
  8342     01A8  0872               	movf	?_labs+2,w
  8343     01A9  1D03               	btfss	3,2
  8344     01AA  29B6               	goto	u4020
  8345     01AB  0871               	movf	?_labs+1,w
  8346     01AC  1D03               	btfss	3,2
  8347     01AD  29B6               	goto	u4020
  8348     01AE  3002               	movlw	2
  8349     01AF  0270               	subwf	?_labs,w
  8350     01B0  1D03               	skipz
  8351     01B1  29B2               	goto	u4023
  8352     01B2                     u4023:
  8353     01B2  1C03               	btfss	3,0
  8354     01B3  29B5               	goto	u4021
  8355     01B4  29B6               	goto	u4020
  8356     01B5                     u4021:
  8357     01B5  2909               	goto	l2955
  8358     01B6                     u4020:
  8359     01B6                     l2961:
  8360     01B6  1683               	bsf	3,5	;RP0=1, select bank1
  8361     01B7  1303               	bcf	3,6	;RP1=0, select bank1
  8362     01B8  0837               	movf	(efgtoa@ou+3)^(0+128),w
  8363     01B9  1283               	bcf	3,5	;RP0=0, select bank0
  8364     01BA  1303               	bcf	3,6	;RP1=0, select bank0
  8365     01BB  00B8               	movwf	___flge@ff1+3
  8366     01BC  1683               	bsf	3,5	;RP0=1, select bank1
  8367     01BD  1303               	bcf	3,6	;RP1=0, select bank1
  8368     01BE  0836               	movf	(efgtoa@ou+2)^(0+128),w
  8369     01BF  1283               	bcf	3,5	;RP0=0, select bank0
  8370     01C0  1303               	bcf	3,6	;RP1=0, select bank0
  8371     01C1  00B7               	movwf	___flge@ff1+2
  8372     01C2  1683               	bsf	3,5	;RP0=1, select bank1
  8373     01C3  1303               	bcf	3,6	;RP1=0, select bank1
  8374     01C4  0835               	movf	(efgtoa@ou+1)^(0+128),w
  8375     01C5  1283               	bcf	3,5	;RP0=0, select bank0
  8376     01C6  1303               	bcf	3,6	;RP1=0, select bank0
  8377     01C7  00B6               	movwf	___flge@ff1+1
  8378     01C8  1683               	bsf	3,5	;RP0=1, select bank1
  8379     01C9  1303               	bcf	3,6	;RP1=0, select bank1
  8380     01CA  0834               	movf	efgtoa@ou^(0+128),w
  8381     01CB  1283               	bcf	3,5	;RP0=0, select bank0
  8382     01CC  1303               	bcf	3,6	;RP1=0, select bank0
  8383     01CD  00B5               	movwf	___flge@ff1
  8384     01CE  1683               	bsf	3,5	;RP0=1, select bank1
  8385     01CF  1303               	bcf	3,6	;RP1=0, select bank1
  8386     01D0  0848               	movf	(efgtoa@g+3)^(0+128),w
  8387     01D1  1283               	bcf	3,5	;RP0=0, select bank0
  8388     01D2  1303               	bcf	3,6	;RP1=0, select bank0
  8389     01D3  00BC               	movwf	___flge@ff2+3
  8390     01D4  1683               	bsf	3,5	;RP0=1, select bank1
  8391     01D5  1303               	bcf	3,6	;RP1=0, select bank1
  8392     01D6  0847               	movf	(efgtoa@g+2)^(0+128),w
  8393     01D7  1283               	bcf	3,5	;RP0=0, select bank0
  8394     01D8  1303               	bcf	3,6	;RP1=0, select bank0
  8395     01D9  00BB               	movwf	___flge@ff2+2
  8396     01DA  1683               	bsf	3,5	;RP0=1, select bank1
  8397     01DB  1303               	bcf	3,6	;RP1=0, select bank1
  8398     01DC  0846               	movf	(efgtoa@g+1)^(0+128),w
  8399     01DD  1283               	bcf	3,5	;RP0=0, select bank0
  8400     01DE  1303               	bcf	3,6	;RP1=0, select bank0
  8401     01DF  00BA               	movwf	___flge@ff2+1
  8402     01E0  1683               	bsf	3,5	;RP0=1, select bank1
  8403     01E1  1303               	bcf	3,6	;RP1=0, select bank1
  8404     01E2  0845               	movf	efgtoa@g^(0+128),w
  8405     01E3  1283               	bcf	3,5	;RP0=0, select bank0
  8406     01E4  1303               	bcf	3,6	;RP1=0, select bank0
  8407     01E5  00B9               	movwf	___flge@ff2
  8408     01E6  120A  118A  203F  120A  118A  	fcall	___flge
  8409     01EB  1C03               	btfss	3,0
  8410     01EC  29EE               	goto	u4031
  8411     01ED  29EF               	goto	u4030
  8412     01EE                     u4031:
  8413     01EE  2909               	goto	l2955
  8414     01EF                     u4030:
  8415     01EF                     l2963:
  8416                           
  8417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  8418     01EF  1683               	bsf	3,5	;RP0=1, select bank1
  8419     01F0  1303               	bcf	3,6	;RP1=0, select bank1
  8420     01F1  0845               	movf	efgtoa@g^(0+128),w
  8421     01F2  1283               	bcf	3,5	;RP0=0, select bank0
  8422     01F3  1303               	bcf	3,6	;RP1=0, select bank0
  8423     01F4  00C6               	movwf	??_efgtoa
  8424     01F5  1683               	bsf	3,5	;RP0=1, select bank1
  8425     01F6  1303               	bcf	3,6	;RP1=0, select bank1
  8426     01F7  0846               	movf	(efgtoa@g+1)^(0+128),w
  8427     01F8  1283               	bcf	3,5	;RP0=0, select bank0
  8428     01F9  1303               	bcf	3,6	;RP1=0, select bank0
  8429     01FA  00C7               	movwf	??_efgtoa+1
  8430     01FB  1683               	bsf	3,5	;RP0=1, select bank1
  8431     01FC  1303               	bcf	3,6	;RP1=0, select bank1
  8432     01FD  0847               	movf	(efgtoa@g+2)^(0+128),w
  8433     01FE  1283               	bcf	3,5	;RP0=0, select bank0
  8434     01FF  1303               	bcf	3,6	;RP1=0, select bank0
  8435     0200  00C8               	movwf	??_efgtoa+2
  8436     0201  1683               	bsf	3,5	;RP0=1, select bank1
  8437     0202  1303               	bcf	3,6	;RP1=0, select bank1
  8438     0203  0848               	movf	(efgtoa@g+3)^(0+128),w
  8439     0204  1283               	bcf	3,5	;RP0=0, select bank0
  8440     0205  1303               	bcf	3,6	;RP1=0, select bank0
  8441     0206  00C9               	movwf	??_efgtoa+3
  8442     0207  1683               	bsf	3,5	;RP0=1, select bank1
  8443     0208  1303               	bcf	3,6	;RP1=0, select bank1
  8444     0209  0849               	movf	efgtoa@u^(0+128),w
  8445     020A  1283               	bcf	3,5	;RP0=0, select bank0
  8446     020B  1303               	bcf	3,6	;RP1=0, select bank0
  8447     020C  02C6               	subwf	??_efgtoa,f
  8448     020D  1683               	bsf	3,5	;RP0=1, select bank1
  8449     020E  1303               	bcf	3,6	;RP1=0, select bank1
  8450     020F  084A               	movf	(efgtoa@u+1)^(0+128),w
  8451     0210  1C03               	skipc
  8452     0211  0F4A               	incfsz	(efgtoa@u+1)^(0+128),w
  8453     0212  2A14               	goto	u4041
  8454     0213  2A17               	goto	u4042
  8455     0214                     u4041:
  8456     0214  1283               	bcf	3,5	;RP0=0, select bank0
  8457     0215  1303               	bcf	3,6	;RP1=0, select bank0
  8458     0216  02C7               	subwf	??_efgtoa+1,f
  8459     0217                     u4042:
  8460     0217  1683               	bsf	3,5	;RP0=1, select bank1
  8461     0218  1303               	bcf	3,6	;RP1=0, select bank1
  8462     0219  084B               	movf	(efgtoa@u+2)^(0+128),w
  8463     021A  1C03               	skipc
  8464     021B  0F4B               	incfsz	(efgtoa@u+2)^(0+128),w
  8465     021C  2A1E               	goto	u4043
  8466     021D  2A21               	goto	u4044
  8467     021E                     u4043:
  8468     021E  1283               	bcf	3,5	;RP0=0, select bank0
  8469     021F  1303               	bcf	3,6	;RP1=0, select bank0
  8470     0220  02C8               	subwf	??_efgtoa+2,f
  8471     0221                     u4044:
  8472     0221  1683               	bsf	3,5	;RP0=1, select bank1
  8473     0222  1303               	bcf	3,6	;RP1=0, select bank1
  8474     0223  084C               	movf	(efgtoa@u+3)^(0+128),w
  8475     0224  1C03               	skipc
  8476     0225  0F4C               	incfsz	(efgtoa@u+3)^(0+128),w
  8477     0226  2A28               	goto	u4045
  8478     0227  2A2B               	goto	u4046
  8479     0228                     u4045:
  8480     0228  1283               	bcf	3,5	;RP0=0, select bank0
  8481     0229  1303               	bcf	3,6	;RP1=0, select bank0
  8482     022A  02C9               	subwf	??_efgtoa+3,f
  8483     022B                     u4046:
  8484     022B  1683               	bsf	3,5	;RP0=1, select bank1
  8485     022C  1303               	bcf	3,6	;RP1=0, select bank1
  8486     022D  1283               	bcf	3,5	;RP0=0, select bank0
  8487     022E  1303               	bcf	3,6	;RP1=0, select bank0
  8488     022F  0849               	movf	??_efgtoa+3,w
  8489     0230  00F3               	movwf	labs@a+3
  8490     0231  0848               	movf	??_efgtoa+2,w
  8491     0232  00F2               	movwf	labs@a+2
  8492     0233  0847               	movf	??_efgtoa+1,w
  8493     0234  00F1               	movwf	labs@a+1
  8494     0235  0846               	movf	??_efgtoa,w
  8495     0236  00F0               	movwf	labs@a
  8496     0237  160A  158A  279B  120A  118A  	fcall	_labs
  8497     023C  1BF3               	btfsc	?_labs+3,7
  8498     023D  2A4F               	goto	u4050
  8499     023E  0873               	movf	?_labs+3,w
  8500     023F  1D03               	btfss	3,2
  8501     0240  2A4E               	goto	u4051
  8502     0241  0872               	movf	?_labs+2,w
  8503     0242  1D03               	btfss	3,2
  8504     0243  2A4E               	goto	u4051
  8505     0244  0871               	movf	?_labs+1,w
  8506     0245  1D03               	btfss	3,2
  8507     0246  2A4E               	goto	u4051
  8508     0247  3002               	movlw	2
  8509     0248  0270               	subwf	?_labs,w
  8510     0249  1D03               	skipz
  8511     024A  2A4B               	goto	u4053
  8512     024B                     u4053:
  8513     024B  1803               	btfsc	3,0
  8514     024C  2A4E               	goto	u4051
  8515     024D  2A4F               	goto	u4050
  8516     024E                     u4051:
  8517     024E  2AE0               	goto	l2975
  8518     024F                     u4050:
  8519     024F                     l2965:
  8520                           
  8521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  8522     024F  1683               	bsf	3,5	;RP0=1, select bank1
  8523     0250  1303               	bcf	3,6	;RP1=0, select bank1
  8524     0251  084C               	movf	(efgtoa@u+3)^(0+128),w
  8525     0252  00C8               	movwf	(efgtoa@g+3)^(0+128)
  8526     0253  084B               	movf	(efgtoa@u+2)^(0+128),w
  8527     0254  00C7               	movwf	(efgtoa@g+2)^(0+128)
  8528     0255  084A               	movf	(efgtoa@u+1)^(0+128),w
  8529     0256  00C6               	movwf	(efgtoa@g+1)^(0+128)
  8530     0257  0849               	movf	efgtoa@u^(0+128),w
  8531     0258  00C5               	movwf	efgtoa@g^(0+128)
  8532                           
  8533                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  8534     0259  2B19               	goto	l2977
  8535     025A                     l2967:
  8536                           
  8537                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  8538     025A  3041               	movlw	65
  8539     025B  00F3               	movwf	___fldiv@a+3
  8540     025C  3020               	movlw	32
  8541     025D  00F2               	movwf	___fldiv@a+2
  8542     025E  3000               	movlw	0
  8543     025F  00F1               	movwf	___fldiv@a+1
  8544     0260  3000               	movlw	0
  8545     0261  00F0               	movwf	___fldiv@a
  8546     0262  1683               	bsf	3,5	;RP0=1, select bank1
  8547     0263  1303               	bcf	3,6	;RP1=0, select bank1
  8548     0264  084C               	movf	(efgtoa@u+3)^(0+128),w
  8549     0265  00F7               	movwf	___fldiv@b+3
  8550     0266  084B               	movf	(efgtoa@u+2)^(0+128),w
  8551     0267  00F6               	movwf	___fldiv@b+2
  8552     0268  084A               	movf	(efgtoa@u+1)^(0+128),w
  8553     0269  00F5               	movwf	___fldiv@b+1
  8554     026A  0849               	movf	efgtoa@u^(0+128),w
  8555     026B  00F4               	movwf	___fldiv@b
  8556     026C  120A  158A  2082  120A  118A  	fcall	___fldiv
  8557     0271  0873               	movf	?___fldiv+3,w
  8558     0272  1683               	bsf	3,5	;RP0=1, select bank1
  8559     0273  1303               	bcf	3,6	;RP1=0, select bank1
  8560     0274  00CC               	movwf	(efgtoa@u+3)^(0+128)
  8561     0275  0872               	movf	?___fldiv+2,w
  8562     0276  00CB               	movwf	(efgtoa@u+2)^(0+128)
  8563     0277  0871               	movf	?___fldiv+1,w
  8564     0278  00CA               	movwf	(efgtoa@u+1)^(0+128)
  8565     0279  0870               	movf	?___fldiv,w
  8566     027A  00C9               	movwf	efgtoa@u^(0+128)
  8567     027B                     l2969:
  8568                           
  8569                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  8570     027B  30FF               	movlw	255
  8571     027C  07B0               	addwf	efgtoa@e^(0+128),f
  8572     027D  1803               	skipnc
  8573     027E  0AB1               	incf	(efgtoa@e+1)^(0+128),f
  8574     027F  30FF               	movlw	255
  8575     0280  07B1               	addwf	(efgtoa@e+1)^(0+128),f
  8576     0281                     l2971:
  8577                           
  8578                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  8579     0281  0845               	movf	efgtoa@g^(0+128),w
  8580     0282  1283               	bcf	3,5	;RP0=0, select bank0
  8581     0283  1303               	bcf	3,6	;RP1=0, select bank0
  8582     0284  00C6               	movwf	??_efgtoa
  8583     0285  1683               	bsf	3,5	;RP0=1, select bank1
  8584     0286  1303               	bcf	3,6	;RP1=0, select bank1
  8585     0287  0846               	movf	(efgtoa@g+1)^(0+128),w
  8586     0288  1283               	bcf	3,5	;RP0=0, select bank0
  8587     0289  1303               	bcf	3,6	;RP1=0, select bank0
  8588     028A  00C7               	movwf	??_efgtoa+1
  8589     028B  1683               	bsf	3,5	;RP0=1, select bank1
  8590     028C  1303               	bcf	3,6	;RP1=0, select bank1
  8591     028D  0847               	movf	(efgtoa@g+2)^(0+128),w
  8592     028E  1283               	bcf	3,5	;RP0=0, select bank0
  8593     028F  1303               	bcf	3,6	;RP1=0, select bank0
  8594     0290  00C8               	movwf	??_efgtoa+2
  8595     0291  1683               	bsf	3,5	;RP0=1, select bank1
  8596     0292  1303               	bcf	3,6	;RP1=0, select bank1
  8597     0293  0848               	movf	(efgtoa@g+3)^(0+128),w
  8598     0294  1283               	bcf	3,5	;RP0=0, select bank0
  8599     0295  1303               	bcf	3,6	;RP1=0, select bank0
  8600     0296  00C9               	movwf	??_efgtoa+3
  8601     0297  1683               	bsf	3,5	;RP0=1, select bank1
  8602     0298  1303               	bcf	3,6	;RP1=0, select bank1
  8603     0299  0849               	movf	efgtoa@u^(0+128),w
  8604     029A  1283               	bcf	3,5	;RP0=0, select bank0
  8605     029B  1303               	bcf	3,6	;RP1=0, select bank0
  8606     029C  02C6               	subwf	??_efgtoa,f
  8607     029D  1683               	bsf	3,5	;RP0=1, select bank1
  8608     029E  1303               	bcf	3,6	;RP1=0, select bank1
  8609     029F  084A               	movf	(efgtoa@u+1)^(0+128),w
  8610     02A0  1C03               	skipc
  8611     02A1  0F4A               	incfsz	(efgtoa@u+1)^(0+128),w
  8612     02A2  2AA4               	goto	u4061
  8613     02A3  2AA7               	goto	u4062
  8614     02A4                     u4061:
  8615     02A4  1283               	bcf	3,5	;RP0=0, select bank0
  8616     02A5  1303               	bcf	3,6	;RP1=0, select bank0
  8617     02A6  02C7               	subwf	??_efgtoa+1,f
  8618     02A7                     u4062:
  8619     02A7  1683               	bsf	3,5	;RP0=1, select bank1
  8620     02A8  1303               	bcf	3,6	;RP1=0, select bank1
  8621     02A9  084B               	movf	(efgtoa@u+2)^(0+128),w
  8622     02AA  1C03               	skipc
  8623     02AB  0F4B               	incfsz	(efgtoa@u+2)^(0+128),w
  8624     02AC  2AAE               	goto	u4063
  8625     02AD  2AB1               	goto	u4064
  8626     02AE                     u4063:
  8627     02AE  1283               	bcf	3,5	;RP0=0, select bank0
  8628     02AF  1303               	bcf	3,6	;RP1=0, select bank0
  8629     02B0  02C8               	subwf	??_efgtoa+2,f
  8630     02B1                     u4064:
  8631     02B1  1683               	bsf	3,5	;RP0=1, select bank1
  8632     02B2  1303               	bcf	3,6	;RP1=0, select bank1
  8633     02B3  084C               	movf	(efgtoa@u+3)^(0+128),w
  8634     02B4  1C03               	skipc
  8635     02B5  0F4C               	incfsz	(efgtoa@u+3)^(0+128),w
  8636     02B6  2AB8               	goto	u4065
  8637     02B7  2ABB               	goto	u4066
  8638     02B8                     u4065:
  8639     02B8  1283               	bcf	3,5	;RP0=0, select bank0
  8640     02B9  1303               	bcf	3,6	;RP1=0, select bank0
  8641     02BA  02C9               	subwf	??_efgtoa+3,f
  8642     02BB                     u4066:
  8643     02BB  1683               	bsf	3,5	;RP0=1, select bank1
  8644     02BC  1303               	bcf	3,6	;RP1=0, select bank1
  8645     02BD  1283               	bcf	3,5	;RP0=0, select bank0
  8646     02BE  1303               	bcf	3,6	;RP1=0, select bank0
  8647     02BF  0849               	movf	??_efgtoa+3,w
  8648     02C0  00F3               	movwf	labs@a+3
  8649     02C1  0848               	movf	??_efgtoa+2,w
  8650     02C2  00F2               	movwf	labs@a+2
  8651     02C3  0847               	movf	??_efgtoa+1,w
  8652     02C4  00F1               	movwf	labs@a+1
  8653     02C5  0846               	movf	??_efgtoa,w
  8654     02C6  00F0               	movwf	labs@a
  8655     02C7  160A  158A  279B  120A  118A  	fcall	_labs
  8656     02CC  1BF3               	btfsc	?_labs+3,7
  8657     02CD  2ADF               	goto	u4070
  8658     02CE  0873               	movf	?_labs+3,w
  8659     02CF  1D03               	btfss	3,2
  8660     02D0  2ADE               	goto	u4071
  8661     02D1  0872               	movf	?_labs+2,w
  8662     02D2  1D03               	btfss	3,2
  8663     02D3  2ADE               	goto	u4071
  8664     02D4  0871               	movf	?_labs+1,w
  8665     02D5  1D03               	btfss	3,2
  8666     02D6  2ADE               	goto	u4071
  8667     02D7  3002               	movlw	2
  8668     02D8  0270               	subwf	?_labs,w
  8669     02D9  1D03               	skipz
  8670     02DA  2ADB               	goto	u4073
  8671     02DB                     u4073:
  8672     02DB  1803               	btfsc	3,0
  8673     02DC  2ADE               	goto	u4071
  8674     02DD  2ADF               	goto	u4070
  8675     02DE                     u4071:
  8676     02DE  2AE0               	goto	l2975
  8677     02DF                     u4070:
  8678     02DF  2A4F               	goto	l2965
  8679     02E0                     l2975:
  8680                           
  8681                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  8682     02E0  1683               	bsf	3,5	;RP0=1, select bank1
  8683     02E1  1303               	bcf	3,6	;RP1=0, select bank1
  8684     02E2  0848               	movf	(efgtoa@g+3)^(0+128),w
  8685     02E3  1283               	bcf	3,5	;RP0=0, select bank0
  8686     02E4  1303               	bcf	3,6	;RP1=0, select bank0
  8687     02E5  00B8               	movwf	___flge@ff1+3
  8688     02E6  1683               	bsf	3,5	;RP0=1, select bank1
  8689     02E7  1303               	bcf	3,6	;RP1=0, select bank1
  8690     02E8  0847               	movf	(efgtoa@g+2)^(0+128),w
  8691     02E9  1283               	bcf	3,5	;RP0=0, select bank0
  8692     02EA  1303               	bcf	3,6	;RP1=0, select bank0
  8693     02EB  00B7               	movwf	___flge@ff1+2
  8694     02EC  1683               	bsf	3,5	;RP0=1, select bank1
  8695     02ED  1303               	bcf	3,6	;RP1=0, select bank1
  8696     02EE  0846               	movf	(efgtoa@g+1)^(0+128),w
  8697     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  8698     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  8699     02F1  00B6               	movwf	___flge@ff1+1
  8700     02F2  1683               	bsf	3,5	;RP0=1, select bank1
  8701     02F3  1303               	bcf	3,6	;RP1=0, select bank1
  8702     02F4  0845               	movf	efgtoa@g^(0+128),w
  8703     02F5  1283               	bcf	3,5	;RP0=0, select bank0
  8704     02F6  1303               	bcf	3,6	;RP1=0, select bank0
  8705     02F7  00B5               	movwf	___flge@ff1
  8706     02F8  1683               	bsf	3,5	;RP0=1, select bank1
  8707     02F9  1303               	bcf	3,6	;RP1=0, select bank1
  8708     02FA  084C               	movf	(efgtoa@u+3)^(0+128),w
  8709     02FB  1283               	bcf	3,5	;RP0=0, select bank0
  8710     02FC  1303               	bcf	3,6	;RP1=0, select bank0
  8711     02FD  00BC               	movwf	___flge@ff2+3
  8712     02FE  1683               	bsf	3,5	;RP0=1, select bank1
  8713     02FF  1303               	bcf	3,6	;RP1=0, select bank1
  8714     0300  084B               	movf	(efgtoa@u+2)^(0+128),w
  8715     0301  1283               	bcf	3,5	;RP0=0, select bank0
  8716     0302  1303               	bcf	3,6	;RP1=0, select bank0
  8717     0303  00BB               	movwf	___flge@ff2+2
  8718     0304  1683               	bsf	3,5	;RP0=1, select bank1
  8719     0305  1303               	bcf	3,6	;RP1=0, select bank1
  8720     0306  084A               	movf	(efgtoa@u+1)^(0+128),w
  8721     0307  1283               	bcf	3,5	;RP0=0, select bank0
  8722     0308  1303               	bcf	3,6	;RP1=0, select bank0
  8723     0309  00BA               	movwf	___flge@ff2+1
  8724     030A  1683               	bsf	3,5	;RP0=1, select bank1
  8725     030B  1303               	bcf	3,6	;RP1=0, select bank1
  8726     030C  0849               	movf	efgtoa@u^(0+128),w
  8727     030D  1283               	bcf	3,5	;RP0=0, select bank0
  8728     030E  1303               	bcf	3,6	;RP1=0, select bank0
  8729     030F  00B9               	movwf	___flge@ff2
  8730     0310  120A  118A  203F  120A  118A  	fcall	___flge
  8731     0315  1C03               	btfss	3,0
  8732     0316  2B18               	goto	u4081
  8733     0317  2B19               	goto	u4080
  8734     0318                     u4081:
  8735     0318  2A5A               	goto	l2967
  8736     0319                     u4080:
  8737     0319                     l2977:
  8738                           
  8739                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  8740     0319  1283               	bcf	3,5	;RP0=0, select bank0
  8741     031A  1303               	bcf	3,6	;RP1=0, select bank0
  8742     031B  0845               	movf	efgtoa@c,w
  8743     031C  1683               	bsf	3,5	;RP0=1, select bank1
  8744     031D  1303               	bcf	3,6	;RP1=0, select bank1
  8745     031E  00A9               	movwf	efgtoa@mode^(0+128)
  8746                           
  8747                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  8748     031F  0829               	movf	efgtoa@mode^(0+128),w
  8749     0320  00AA               	movwf	efgtoa@nmode^(0+128)
  8750     0321                     l2979:
  8751                           
  8752                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  8753     0321  1283               	bcf	3,5	;RP0=0, select bank0
  8754     0322  1303               	bcf	3,6	;RP1=0, select bank0
  8755     0323  1BEC               	btfsc	_prec+1,7
  8756     0324  2B26               	goto	u4091
  8757     0325  2B27               	goto	u4090
  8758     0326                     u4091:
  8759     0326  2B32               	goto	l2983
  8760     0327                     u4090:
  8761     0327                     l2981:
  8762     0327  086C               	movf	_prec+1,w
  8763     0328  1683               	bsf	3,5	;RP0=1, select bank1
  8764     0329  1303               	bcf	3,6	;RP1=0, select bank1
  8765     032A  00A3               	movwf	(efgtoa@p+1)^(0+128)
  8766     032B  1283               	bcf	3,5	;RP0=0, select bank0
  8767     032C  1303               	bcf	3,6	;RP1=0, select bank0
  8768     032D  086B               	movf	_prec,w
  8769     032E  1683               	bsf	3,5	;RP0=1, select bank1
  8770     032F  1303               	bcf	3,6	;RP1=0, select bank1
  8771     0330  00A2               	movwf	efgtoa@p^(0+128)
  8772     0331  2B38               	goto	l737
  8773     0332                     l2983:
  8774     0332  3006               	movlw	6
  8775     0333  1683               	bsf	3,5	;RP0=1, select bank1
  8776     0334  1303               	bcf	3,6	;RP1=0, select bank1
  8777     0335  00A2               	movwf	efgtoa@p^(0+128)
  8778     0336  3000               	movlw	0
  8779     0337  00A3               	movwf	(efgtoa@p^(0+128)+1)
  8780     0338                     l737:
  8781                           
  8782                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  8783     0338  0823               	movf	(efgtoa@p+1)^(0+128),w
  8784     0339  00AE               	movwf	(efgtoa@m+1)^(0+128)
  8785     033A  0822               	movf	efgtoa@p^(0+128),w
  8786     033B  00AD               	movwf	efgtoa@m^(0+128)
  8787                           
  8788                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  8789     033C  3001               	movlw	1
  8790     033D  07AD               	addwf	efgtoa@m^(0+128),f
  8791     033E  1803               	skipnc
  8792     033F  0AAE               	incf	(efgtoa@m+1)^(0+128),f
  8793     0340  3000               	movlw	0
  8794     0341  07AE               	addwf	(efgtoa@m+1)^(0+128),f
  8795     0342                     l2985:
  8796                           
  8797                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  8798     0342  3066               	movlw	102
  8799     0343  062A               	xorwf	efgtoa@nmode^(0+128),w
  8800     0344  1D03               	btfss	3,2
  8801     0345  2B47               	goto	u4101
  8802     0346  2B48               	goto	u4100
  8803     0347                     u4101:
  8804     0347  2B62               	goto	l2997
  8805     0348                     u4100:
  8806     0348                     l2987:
  8807                           
  8808                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  8809     0348  1FB1               	btfss	(efgtoa@e+1)^(0+128),7
  8810     0349  2B4B               	goto	u4111
  8811     034A  2B4C               	goto	u4110
  8812     034B                     u4111:
  8813     034B  2B56               	goto	l2993
  8814     034C                     u4110:
  8815     034C                     l2989:
  8816                           
  8817                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  8818     034C  303F               	movlw	63
  8819     034D  00CC               	movwf	(efgtoa@u+3)^(0+128)
  8820     034E  3080               	movlw	128
  8821     034F  00CB               	movwf	(efgtoa@u+2)^(0+128)
  8822     0350  3000               	movlw	0
  8823     0351  00CA               	movwf	(efgtoa@u+1)^(0+128)
  8824     0352  3000               	movlw	0
  8825     0353  00C9               	movwf	efgtoa@u^(0+128)
  8826     0354                     l2991:
  8827                           
  8828                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  8829     0354  01B0               	clrf	efgtoa@e^(0+128)
  8830     0355  01B1               	clrf	(efgtoa@e+1)^(0+128)
  8831     0356                     l2993:
  8832                           
  8833                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  8834     0356  3067               	movlw	103
  8835     0357  0629               	xorwf	efgtoa@mode^(0+128),w
  8836     0358  1903               	btfsc	3,2
  8837     0359  2B5B               	goto	u4121
  8838     035A  2B5C               	goto	u4120
  8839     035B                     u4121:
  8840     035B  2B62               	goto	l2997
  8841     035C                     u4120:
  8842     035C                     l2995:
  8843                           
  8844                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  8845     035C  0830               	movf	efgtoa@e^(0+128),w
  8846     035D  07AD               	addwf	efgtoa@m^(0+128),f
  8847     035E  1803               	skipnc
  8848     035F  0AAE               	incf	(efgtoa@m+1)^(0+128),f
  8849     0360  0831               	movf	(efgtoa@e+1)^(0+128),w
  8850     0361  07AE               	addwf	(efgtoa@m+1)^(0+128),f
  8851     0362                     l2997:
  8852                           
  8853                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  8854     0362  01B8               	clrf	efgtoa@i^(0+128)
  8855     0363  01B9               	clrf	(efgtoa@i+1)^(0+128)
  8856     0364                     l2999:
  8857                           
  8858                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  8859     0364  0848               	movf	(efgtoa@g+3)^(0+128),w
  8860     0365  00BD               	movwf	(efgtoa@h+3)^(0+128)
  8861     0366  0847               	movf	(efgtoa@g+2)^(0+128),w
  8862     0367  00BC               	movwf	(efgtoa@h+2)^(0+128)
  8863     0368  0846               	movf	(efgtoa@g+1)^(0+128),w
  8864     0369  00BB               	movwf	(efgtoa@h+1)^(0+128)
  8865     036A  0845               	movf	efgtoa@g^(0+128),w
  8866     036B  00BA               	movwf	efgtoa@h^(0+128)
  8867     036C                     l3001:
  8868                           
  8869                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  8870     036C  084C               	movf	(efgtoa@u+3)^(0+128),w
  8871     036D  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  8872     036E  084B               	movf	(efgtoa@u+2)^(0+128),w
  8873     036F  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  8874     0370  084A               	movf	(efgtoa@u+1)^(0+128),w
  8875     0371  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  8876     0372  0849               	movf	efgtoa@u^(0+128),w
  8877     0373  00B4               	movwf	efgtoa@ou^(0+128)
  8878                           
  8879                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  8880     0374  2C5D               	goto	l3007
  8881     0375                     l3003:
  8882                           
  8883                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  8884     0375  1683               	bsf	3,5	;RP0=1, select bank1
  8885     0376  1303               	bcf	3,6	;RP1=0, select bank1
  8886     0377  084C               	movf	(efgtoa@u+3)^(0+128),w
  8887     0378  00F3               	movwf	___fldiv@a+3
  8888     0379  084B               	movf	(efgtoa@u+2)^(0+128),w
  8889     037A  00F2               	movwf	___fldiv@a+2
  8890     037B  084A               	movf	(efgtoa@u+1)^(0+128),w
  8891     037C  00F1               	movwf	___fldiv@a+1
  8892     037D  0849               	movf	efgtoa@u^(0+128),w
  8893     037E  00F0               	movwf	___fldiv@a
  8894     037F  083D               	movf	(efgtoa@h+3)^(0+128),w
  8895     0380  00F7               	movwf	___fldiv@b+3
  8896     0381  083C               	movf	(efgtoa@h+2)^(0+128),w
  8897     0382  00F6               	movwf	___fldiv@b+2
  8898     0383  083B               	movf	(efgtoa@h+1)^(0+128),w
  8899     0384  00F5               	movwf	___fldiv@b+1
  8900     0385  083A               	movf	efgtoa@h^(0+128),w
  8901     0386  00F4               	movwf	___fldiv@b
  8902     0387  120A  158A  2082  120A  118A  	fcall	___fldiv
  8903     038C  0873               	movf	?___fldiv+3,w
  8904     038D  1283               	bcf	3,5	;RP0=0, select bank0
  8905     038E  1303               	bcf	3,6	;RP1=0, select bank0
  8906     038F  00B0               	movwf	floorf@x+3
  8907     0390  0872               	movf	?___fldiv+2,w
  8908     0391  00AF               	movwf	floorf@x+2
  8909     0392  0871               	movf	?___fldiv+1,w
  8910     0393  00AE               	movwf	floorf@x+1
  8911     0394  0870               	movf	?___fldiv,w
  8912     0395  00AD               	movwf	floorf@x
  8913     0396  160A  118A  2367  120A  118A  	fcall	_floorf
  8914     039B  1283               	bcf	3,5	;RP0=0, select bank0
  8915     039C  1303               	bcf	3,6	;RP1=0, select bank0
  8916     039D  0830               	movf	?_floorf+3,w
  8917     039E  1683               	bsf	3,5	;RP0=1, select bank1
  8918     039F  1303               	bcf	3,6	;RP1=0, select bank1
  8919     03A0  00C1               	movwf	(efgtoa@l+3)^(0+128)
  8920     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  8921     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  8922     03A3  082F               	movf	?_floorf+2,w
  8923     03A4  1683               	bsf	3,5	;RP0=1, select bank1
  8924     03A5  1303               	bcf	3,6	;RP1=0, select bank1
  8925     03A6  00C0               	movwf	(efgtoa@l+2)^(0+128)
  8926     03A7  1283               	bcf	3,5	;RP0=0, select bank0
  8927     03A8  1303               	bcf	3,6	;RP1=0, select bank0
  8928     03A9  082E               	movf	?_floorf+1,w
  8929     03AA  1683               	bsf	3,5	;RP0=1, select bank1
  8930     03AB  1303               	bcf	3,6	;RP1=0, select bank1
  8931     03AC  00BF               	movwf	(efgtoa@l+1)^(0+128)
  8932     03AD  1283               	bcf	3,5	;RP0=0, select bank0
  8933     03AE  1303               	bcf	3,6	;RP1=0, select bank0
  8934     03AF  082D               	movf	?_floorf,w
  8935     03B0  1683               	bsf	3,5	;RP0=1, select bank1
  8936     03B1  1303               	bcf	3,6	;RP1=0, select bank1
  8937     03B2  00BE               	movwf	efgtoa@l^(0+128)
  8938                           
  8939                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  8940     03B3  0841               	movf	(efgtoa@l+3)^(0+128),w
  8941     03B4  00F3               	movwf	___fltol@f1+3
  8942     03B5  0840               	movf	(efgtoa@l+2)^(0+128),w
  8943     03B6  00F2               	movwf	___fltol@f1+2
  8944     03B7  083F               	movf	(efgtoa@l+1)^(0+128),w
  8945     03B8  00F1               	movwf	___fltol@f1+1
  8946     03B9  083E               	movf	efgtoa@l^(0+128),w
  8947     03BA  00F0               	movwf	___fltol@f1
  8948     03BB  160A  118A  22F1  120A  118A  	fcall	___fltol
  8949     03C0  0871               	movf	?___fltol+1,w
  8950     03C1  1683               	bsf	3,5	;RP0=1, select bank1
  8951     03C2  1303               	bcf	3,6	;RP1=0, select bank1
  8952     03C3  00AC               	movwf	(efgtoa@d+1)^(0+128)
  8953     03C4  0870               	movf	?___fltol,w
  8954     03C5  00AB               	movwf	efgtoa@d^(0+128)
  8955                           
  8956                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  8957     03C6  084C               	movf	(efgtoa@u+3)^(0+128),w
  8958     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  8959     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  8960     03C9  00A7               	movwf	___flmul@a+3
  8961     03CA  1683               	bsf	3,5	;RP0=1, select bank1
  8962     03CB  1303               	bcf	3,6	;RP1=0, select bank1
  8963     03CC  084B               	movf	(efgtoa@u+2)^(0+128),w
  8964     03CD  1283               	bcf	3,5	;RP0=0, select bank0
  8965     03CE  1303               	bcf	3,6	;RP1=0, select bank0
  8966     03CF  00A6               	movwf	___flmul@a+2
  8967     03D0  1683               	bsf	3,5	;RP0=1, select bank1
  8968     03D1  1303               	bcf	3,6	;RP1=0, select bank1
  8969     03D2  084A               	movf	(efgtoa@u+1)^(0+128),w
  8970     03D3  1283               	bcf	3,5	;RP0=0, select bank0
  8971     03D4  1303               	bcf	3,6	;RP1=0, select bank0
  8972     03D5  00A5               	movwf	___flmul@a+1
  8973     03D6  1683               	bsf	3,5	;RP0=1, select bank1
  8974     03D7  1303               	bcf	3,6	;RP1=0, select bank1
  8975     03D8  0849               	movf	efgtoa@u^(0+128),w
  8976     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  8977     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  8978     03DB  00A4               	movwf	___flmul@a
  8979     03DC  1683               	bsf	3,5	;RP0=1, select bank1
  8980     03DD  1303               	bcf	3,6	;RP1=0, select bank1
  8981     03DE  0841               	movf	(efgtoa@l+3)^(0+128),w
  8982     03DF  1283               	bcf	3,5	;RP0=0, select bank0
  8983     03E0  1303               	bcf	3,6	;RP1=0, select bank0
  8984     03E1  00A3               	movwf	___flmul@b+3
  8985     03E2  1683               	bsf	3,5	;RP0=1, select bank1
  8986     03E3  1303               	bcf	3,6	;RP1=0, select bank1
  8987     03E4  0840               	movf	(efgtoa@l+2)^(0+128),w
  8988     03E5  1283               	bcf	3,5	;RP0=0, select bank0
  8989     03E6  1303               	bcf	3,6	;RP1=0, select bank0
  8990     03E7  00A2               	movwf	___flmul@b+2
  8991     03E8  1683               	bsf	3,5	;RP0=1, select bank1
  8992     03E9  1303               	bcf	3,6	;RP1=0, select bank1
  8993     03EA  083F               	movf	(efgtoa@l+1)^(0+128),w
  8994     03EB  1283               	bcf	3,5	;RP0=0, select bank0
  8995     03EC  1303               	bcf	3,6	;RP1=0, select bank0
  8996     03ED  00A1               	movwf	___flmul@b+1
  8997     03EE  1683               	bsf	3,5	;RP0=1, select bank1
  8998     03EF  1303               	bcf	3,6	;RP1=0, select bank1
  8999     03F0  083E               	movf	efgtoa@l^(0+128),w
  9000     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  9001     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  9002     03F3  00A0               	movwf	___flmul@b
  9003     03F4  120A  158A  24BB  120A  118A  	fcall	___flmul
  9004     03F9  1283               	bcf	3,5	;RP0=0, select bank0
  9005     03FA  1303               	bcf	3,6	;RP1=0, select bank0
  9006     03FB  0823               	movf	?___flmul+3,w
  9007     03FC  00B8               	movwf	___flsub@a+3
  9008     03FD  0822               	movf	?___flmul+2,w
  9009     03FE  00B7               	movwf	___flsub@a+2
  9010     03FF  0821               	movf	?___flmul+1,w
  9011     0400  00B6               	movwf	___flsub@a+1
  9012     0401  0820               	movf	?___flmul,w
  9013     0402  00B5               	movwf	___flsub@a
  9014     0403  1683               	bsf	3,5	;RP0=1, select bank1
  9015     0404  1303               	bcf	3,6	;RP1=0, select bank1
  9016     0405  083D               	movf	(efgtoa@h+3)^(0+128),w
  9017     0406  1283               	bcf	3,5	;RP0=0, select bank0
  9018     0407  1303               	bcf	3,6	;RP1=0, select bank0
  9019     0408  00BC               	movwf	___flsub@b+3
  9020     0409  1683               	bsf	3,5	;RP0=1, select bank1
  9021     040A  1303               	bcf	3,6	;RP1=0, select bank1
  9022     040B  083C               	movf	(efgtoa@h+2)^(0+128),w
  9023     040C  1283               	bcf	3,5	;RP0=0, select bank0
  9024     040D  1303               	bcf	3,6	;RP1=0, select bank0
  9025     040E  00BB               	movwf	___flsub@b+2
  9026     040F  1683               	bsf	3,5	;RP0=1, select bank1
  9027     0410  1303               	bcf	3,6	;RP1=0, select bank1
  9028     0411  083B               	movf	(efgtoa@h+1)^(0+128),w
  9029     0412  1283               	bcf	3,5	;RP0=0, select bank0
  9030     0413  1303               	bcf	3,6	;RP1=0, select bank0
  9031     0414  00BA               	movwf	___flsub@b+1
  9032     0415  1683               	bsf	3,5	;RP0=1, select bank1
  9033     0416  1303               	bcf	3,6	;RP1=0, select bank1
  9034     0417  083A               	movf	efgtoa@h^(0+128),w
  9035     0418  1283               	bcf	3,5	;RP0=0, select bank0
  9036     0419  1303               	bcf	3,6	;RP1=0, select bank0
  9037     041A  00B9               	movwf	___flsub@b
  9038     041B  160A  118A  204E  120A  118A  	fcall	___flsub
  9039     0420  1283               	bcf	3,5	;RP0=0, select bank0
  9040     0421  1303               	bcf	3,6	;RP1=0, select bank0
  9041     0422  0838               	movf	?___flsub+3,w
  9042     0423  1683               	bsf	3,5	;RP0=1, select bank1
  9043     0424  1303               	bcf	3,6	;RP1=0, select bank1
  9044     0425  00BD               	movwf	(efgtoa@h+3)^(0+128)
  9045     0426  1283               	bcf	3,5	;RP0=0, select bank0
  9046     0427  1303               	bcf	3,6	;RP1=0, select bank0
  9047     0428  0837               	movf	?___flsub+2,w
  9048     0429  1683               	bsf	3,5	;RP0=1, select bank1
  9049     042A  1303               	bcf	3,6	;RP1=0, select bank1
  9050     042B  00BC               	movwf	(efgtoa@h+2)^(0+128)
  9051     042C  1283               	bcf	3,5	;RP0=0, select bank0
  9052     042D  1303               	bcf	3,6	;RP1=0, select bank0
  9053     042E  0836               	movf	?___flsub+1,w
  9054     042F  1683               	bsf	3,5	;RP0=1, select bank1
  9055     0430  1303               	bcf	3,6	;RP1=0, select bank1
  9056     0431  00BB               	movwf	(efgtoa@h+1)^(0+128)
  9057     0432  1283               	bcf	3,5	;RP0=0, select bank0
  9058     0433  1303               	bcf	3,6	;RP1=0, select bank0
  9059     0434  0835               	movf	?___flsub,w
  9060     0435  1683               	bsf	3,5	;RP0=1, select bank1
  9061     0436  1303               	bcf	3,6	;RP1=0, select bank1
  9062     0437  00BA               	movwf	efgtoa@h^(0+128)
  9063                           
  9064                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  9065     0438  3041               	movlw	65
  9066     0439  00F3               	movwf	___fldiv@a+3
  9067     043A  3020               	movlw	32
  9068     043B  00F2               	movwf	___fldiv@a+2
  9069     043C  3000               	movlw	0
  9070     043D  00F1               	movwf	___fldiv@a+1
  9071     043E  3000               	movlw	0
  9072     043F  00F0               	movwf	___fldiv@a
  9073     0440  084C               	movf	(efgtoa@u+3)^(0+128),w
  9074     0441  00F7               	movwf	___fldiv@b+3
  9075     0442  084B               	movf	(efgtoa@u+2)^(0+128),w
  9076     0443  00F6               	movwf	___fldiv@b+2
  9077     0444  084A               	movf	(efgtoa@u+1)^(0+128),w
  9078     0445  00F5               	movwf	___fldiv@b+1
  9079     0446  0849               	movf	efgtoa@u^(0+128),w
  9080     0447  00F4               	movwf	___fldiv@b
  9081     0448  120A  158A  2082  120A  118A  	fcall	___fldiv
  9082     044D  0873               	movf	?___fldiv+3,w
  9083     044E  1683               	bsf	3,5	;RP0=1, select bank1
  9084     044F  1303               	bcf	3,6	;RP1=0, select bank1
  9085     0450  00CC               	movwf	(efgtoa@u+3)^(0+128)
  9086     0451  0872               	movf	?___fldiv+2,w
  9087     0452  00CB               	movwf	(efgtoa@u+2)^(0+128)
  9088     0453  0871               	movf	?___fldiv+1,w
  9089     0454  00CA               	movwf	(efgtoa@u+1)^(0+128)
  9090     0455  0870               	movf	?___fldiv,w
  9091     0456  00C9               	movwf	efgtoa@u^(0+128)
  9092     0457                     l3005:
  9093                           
  9094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  9095     0457  3001               	movlw	1
  9096     0458  07B8               	addwf	efgtoa@i^(0+128),f
  9097     0459  1803               	skipnc
  9098     045A  0AB9               	incf	(efgtoa@i+1)^(0+128),f
  9099     045B  3000               	movlw	0
  9100     045C  07B9               	addwf	(efgtoa@i+1)^(0+128),f
  9101     045D                     l3007:
  9102                           
  9103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  9104     045D  0839               	movf	(efgtoa@i+1)^(0+128),w
  9105     045E  3A80               	xorlw	128
  9106     045F  1283               	bcf	3,5	;RP0=0, select bank0
  9107     0460  1303               	bcf	3,6	;RP1=0, select bank0
  9108     0461  00C6               	movwf	??_efgtoa
  9109     0462  1683               	bsf	3,5	;RP0=1, select bank1
  9110     0463  1303               	bcf	3,6	;RP1=0, select bank1
  9111     0464  082E               	movf	(efgtoa@m+1)^(0+128),w
  9112     0465  3A80               	xorlw	128
  9113     0466  1283               	bcf	3,5	;RP0=0, select bank0
  9114     0467  1303               	bcf	3,6	;RP1=0, select bank0
  9115     0468  0246               	subwf	??_efgtoa,w
  9116     0469  1D03               	skipz
  9117     046A  2C6F               	goto	u4135
  9118     046B  1683               	bsf	3,5	;RP0=1, select bank1
  9119     046C  1303               	bcf	3,6	;RP1=0, select bank1
  9120     046D  082D               	movf	efgtoa@m^(0+128),w
  9121     046E  0238               	subwf	efgtoa@i^(0+128),w
  9122     046F                     u4135:
  9123     046F  1C03               	skipc
  9124     0470  2C72               	goto	u4131
  9125     0471  2C73               	goto	u4130
  9126     0472                     u4131:
  9127     0472  2B75               	goto	l3003
  9128     0473                     u4130:
  9129     0473                     l3009:
  9130                           
  9131                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  9132     0473  3040               	movlw	64
  9133     0474  1283               	bcf	3,5	;RP0=0, select bank0
  9134     0475  1303               	bcf	3,6	;RP1=0, select bank0
  9135     0476  00A3               	movwf	___flmul@b+3
  9136     0477  30A0               	movlw	160
  9137     0478  00A2               	movwf	___flmul@b+2
  9138     0479  3000               	movlw	0
  9139     047A  00A1               	movwf	___flmul@b+1
  9140     047B  3000               	movlw	0
  9141     047C  00A0               	movwf	___flmul@b
  9142     047D  1683               	bsf	3,5	;RP0=1, select bank1
  9143     047E  1303               	bcf	3,6	;RP1=0, select bank1
  9144     047F  084C               	movf	(efgtoa@u+3)^(0+128),w
  9145     0480  1283               	bcf	3,5	;RP0=0, select bank0
  9146     0481  1303               	bcf	3,6	;RP1=0, select bank0
  9147     0482  00A7               	movwf	___flmul@a+3
  9148     0483  1683               	bsf	3,5	;RP0=1, select bank1
  9149     0484  1303               	bcf	3,6	;RP1=0, select bank1
  9150     0485  084B               	movf	(efgtoa@u+2)^(0+128),w
  9151     0486  1283               	bcf	3,5	;RP0=0, select bank0
  9152     0487  1303               	bcf	3,6	;RP1=0, select bank0
  9153     0488  00A6               	movwf	___flmul@a+2
  9154     0489  1683               	bsf	3,5	;RP0=1, select bank1
  9155     048A  1303               	bcf	3,6	;RP1=0, select bank1
  9156     048B  084A               	movf	(efgtoa@u+1)^(0+128),w
  9157     048C  1283               	bcf	3,5	;RP0=0, select bank0
  9158     048D  1303               	bcf	3,6	;RP1=0, select bank0
  9159     048E  00A5               	movwf	___flmul@a+1
  9160     048F  1683               	bsf	3,5	;RP0=1, select bank1
  9161     0490  1303               	bcf	3,6	;RP1=0, select bank1
  9162     0491  0849               	movf	efgtoa@u^(0+128),w
  9163     0492  1283               	bcf	3,5	;RP0=0, select bank0
  9164     0493  1303               	bcf	3,6	;RP1=0, select bank0
  9165     0494  00A4               	movwf	___flmul@a
  9166     0495  120A  158A  24BB  120A  118A  	fcall	___flmul
  9167     049A  1283               	bcf	3,5	;RP0=0, select bank0
  9168     049B  1303               	bcf	3,6	;RP1=0, select bank0
  9169     049C  0823               	movf	?___flmul+3,w
  9170     049D  1683               	bsf	3,5	;RP0=1, select bank1
  9171     049E  1303               	bcf	3,6	;RP1=0, select bank1
  9172     049F  00C1               	movwf	(efgtoa@l+3)^(0+128)
  9173     04A0  1283               	bcf	3,5	;RP0=0, select bank0
  9174     04A1  1303               	bcf	3,6	;RP1=0, select bank0
  9175     04A2  0822               	movf	?___flmul+2,w
  9176     04A3  1683               	bsf	3,5	;RP0=1, select bank1
  9177     04A4  1303               	bcf	3,6	;RP1=0, select bank1
  9178     04A5  00C0               	movwf	(efgtoa@l+2)^(0+128)
  9179     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  9180     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  9181     04A8  0821               	movf	?___flmul+1,w
  9182     04A9  1683               	bsf	3,5	;RP0=1, select bank1
  9183     04AA  1303               	bcf	3,6	;RP1=0, select bank1
  9184     04AB  00BF               	movwf	(efgtoa@l+1)^(0+128)
  9185     04AC  1283               	bcf	3,5	;RP0=0, select bank0
  9186     04AD  1303               	bcf	3,6	;RP1=0, select bank0
  9187     04AE  0820               	movf	?___flmul,w
  9188     04AF  1683               	bsf	3,5	;RP0=1, select bank1
  9189     04B0  1303               	bcf	3,6	;RP1=0, select bank1
  9190     04B1  00BE               	movwf	efgtoa@l^(0+128)
  9191     04B2                     l3011:
  9192                           
  9193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  9194     04B2  083D               	movf	(efgtoa@h+3)^(0+128),w
  9195     04B3  1283               	bcf	3,5	;RP0=0, select bank0
  9196     04B4  1303               	bcf	3,6	;RP1=0, select bank0
  9197     04B5  00B8               	movwf	___flge@ff1+3
  9198     04B6  1683               	bsf	3,5	;RP0=1, select bank1
  9199     04B7  1303               	bcf	3,6	;RP1=0, select bank1
  9200     04B8  083C               	movf	(efgtoa@h+2)^(0+128),w
  9201     04B9  1283               	bcf	3,5	;RP0=0, select bank0
  9202     04BA  1303               	bcf	3,6	;RP1=0, select bank0
  9203     04BB  00B7               	movwf	___flge@ff1+2
  9204     04BC  1683               	bsf	3,5	;RP0=1, select bank1
  9205     04BD  1303               	bcf	3,6	;RP1=0, select bank1
  9206     04BE  083B               	movf	(efgtoa@h+1)^(0+128),w
  9207     04BF  1283               	bcf	3,5	;RP0=0, select bank0
  9208     04C0  1303               	bcf	3,6	;RP1=0, select bank0
  9209     04C1  00B6               	movwf	___flge@ff1+1
  9210     04C2  1683               	bsf	3,5	;RP0=1, select bank1
  9211     04C3  1303               	bcf	3,6	;RP1=0, select bank1
  9212     04C4  083A               	movf	efgtoa@h^(0+128),w
  9213     04C5  1283               	bcf	3,5	;RP0=0, select bank0
  9214     04C6  1303               	bcf	3,6	;RP1=0, select bank0
  9215     04C7  00B5               	movwf	___flge@ff1
  9216     04C8  1683               	bsf	3,5	;RP0=1, select bank1
  9217     04C9  1303               	bcf	3,6	;RP1=0, select bank1
  9218     04CA  0841               	movf	(efgtoa@l+3)^(0+128),w
  9219     04CB  1283               	bcf	3,5	;RP0=0, select bank0
  9220     04CC  1303               	bcf	3,6	;RP1=0, select bank0
  9221     04CD  00BC               	movwf	___flge@ff2+3
  9222     04CE  1683               	bsf	3,5	;RP0=1, select bank1
  9223     04CF  1303               	bcf	3,6	;RP1=0, select bank1
  9224     04D0  0840               	movf	(efgtoa@l+2)^(0+128),w
  9225     04D1  1283               	bcf	3,5	;RP0=0, select bank0
  9226     04D2  1303               	bcf	3,6	;RP1=0, select bank0
  9227     04D3  00BB               	movwf	___flge@ff2+2
  9228     04D4  1683               	bsf	3,5	;RP0=1, select bank1
  9229     04D5  1303               	bcf	3,6	;RP1=0, select bank1
  9230     04D6  083F               	movf	(efgtoa@l+1)^(0+128),w
  9231     04D7  1283               	bcf	3,5	;RP0=0, select bank0
  9232     04D8  1303               	bcf	3,6	;RP1=0, select bank0
  9233     04D9  00BA               	movwf	___flge@ff2+1
  9234     04DA  1683               	bsf	3,5	;RP0=1, select bank1
  9235     04DB  1303               	bcf	3,6	;RP1=0, select bank1
  9236     04DC  083E               	movf	efgtoa@l^(0+128),w
  9237     04DD  1283               	bcf	3,5	;RP0=0, select bank0
  9238     04DE  1303               	bcf	3,6	;RP1=0, select bank0
  9239     04DF  00B9               	movwf	___flge@ff2
  9240     04E0  120A  118A  203F  120A  118A  	fcall	___flge
  9241     04E5  1803               	btfsc	3,0
  9242     04E6  2CE8               	goto	u4141
  9243     04E7  2CE9               	goto	u4140
  9244     04E8                     u4141:
  9245     04E8  2CF4               	goto	l3015
  9246     04E9                     u4140:
  9247     04E9                     l3013:
  9248                           
  9249                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  9250     04E9  3000               	movlw	0
  9251     04EA  1683               	bsf	3,5	;RP0=1, select bank1
  9252     04EB  1303               	bcf	3,6	;RP1=0, select bank1
  9253     04EC  00C1               	movwf	(efgtoa@l+3)^(0+128)
  9254     04ED  3000               	movlw	0
  9255     04EE  00C0               	movwf	(efgtoa@l+2)^(0+128)
  9256     04EF  3000               	movlw	0
  9257     04F0  00BF               	movwf	(efgtoa@l+1)^(0+128)
  9258     04F1  3000               	movlw	0
  9259     04F2  00BE               	movwf	efgtoa@l^(0+128)
  9260                           
  9261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  9262     04F3  2D1D               	goto	l3021
  9263     04F4                     l3015:
  9264                           
  9265                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  9266     04F4  1683               	bsf	3,5	;RP0=1, select bank1
  9267     04F5  1303               	bcf	3,6	;RP1=0, select bank1
  9268     04F6  083D               	movf	(efgtoa@h+3)^(0+128),w
  9269     04F7  00F3               	movwf	___fleq@ff1+3
  9270     04F8  083C               	movf	(efgtoa@h+2)^(0+128),w
  9271     04F9  00F2               	movwf	___fleq@ff1+2
  9272     04FA  083B               	movf	(efgtoa@h+1)^(0+128),w
  9273     04FB  00F1               	movwf	___fleq@ff1+1
  9274     04FC  083A               	movf	efgtoa@h^(0+128),w
  9275     04FD  00F0               	movwf	___fleq@ff1
  9276     04FE  0841               	movf	(efgtoa@l+3)^(0+128),w
  9277     04FF  00F7               	movwf	___fleq@ff2+3
  9278     0500  0840               	movf	(efgtoa@l+2)^(0+128),w
  9279     0501  00F6               	movwf	___fleq@ff2+2
  9280     0502  083F               	movf	(efgtoa@l+1)^(0+128),w
  9281     0503  00F5               	movwf	___fleq@ff2+1
  9282     0504  083E               	movf	efgtoa@l^(0+128),w
  9283     0505  00F4               	movwf	___fleq@ff2
  9284     0506  160A  118A  21F5  120A  118A  	fcall	___fleq
  9285     050B  1C03               	btfss	3,0
  9286     050C  2D0E               	goto	u4151
  9287     050D  2D0F               	goto	u4150
  9288     050E                     u4151:
  9289     050E  2D1D               	goto	l3021
  9290     050F                     u4150:
  9291     050F                     l3017:
  9292     050F  1683               	bsf	3,5	;RP0=1, select bank1
  9293     0510  1303               	bcf	3,6	;RP1=0, select bank1
  9294     0511  182B               	btfsc	efgtoa@d^(0+128),0
  9295     0512  2D14               	goto	u4161
  9296     0513  2D15               	goto	u4160
  9297     0514                     u4161:
  9298     0514  2D1D               	goto	l3021
  9299     0515                     u4160:
  9300     0515                     l3019:
  9301                           
  9302                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  9303     0515  3000               	movlw	0
  9304     0516  00C1               	movwf	(efgtoa@l+3)^(0+128)
  9305     0517  3000               	movlw	0
  9306     0518  00C0               	movwf	(efgtoa@l+2)^(0+128)
  9307     0519  3000               	movlw	0
  9308     051A  00BF               	movwf	(efgtoa@l+1)^(0+128)
  9309     051B  3000               	movlw	0
  9310     051C  00BE               	movwf	efgtoa@l^(0+128)
  9311     051D                     l3021:
  9312                           
  9313                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  9314     051D  1683               	bsf	3,5	;RP0=1, select bank1
  9315     051E  1303               	bcf	3,6	;RP1=0, select bank1
  9316     051F  0841               	movf	(efgtoa@l+3)^(0+128),w
  9317     0520  00F3               	movwf	___fladd@b+3
  9318     0521  0840               	movf	(efgtoa@l+2)^(0+128),w
  9319     0522  00F2               	movwf	___fladd@b+2
  9320     0523  083F               	movf	(efgtoa@l+1)^(0+128),w
  9321     0524  00F1               	movwf	___fladd@b+1
  9322     0525  083E               	movf	efgtoa@l^(0+128),w
  9323     0526  00F0               	movwf	___fladd@b
  9324     0527  0848               	movf	(efgtoa@g+3)^(0+128),w
  9325     0528  00F7               	movwf	___fladd@a+3
  9326     0529  0847               	movf	(efgtoa@g+2)^(0+128),w
  9327     052A  00F6               	movwf	___fladd@a+2
  9328     052B  0846               	movf	(efgtoa@g+1)^(0+128),w
  9329     052C  00F5               	movwf	___fladd@a+1
  9330     052D  0845               	movf	efgtoa@g^(0+128),w
  9331     052E  00F4               	movwf	___fladd@a
  9332     052F  120A  158A  2257  120A  118A  	fcall	___fladd
  9333     0534  0873               	movf	?___fladd+3,w
  9334     0535  1683               	bsf	3,5	;RP0=1, select bank1
  9335     0536  1303               	bcf	3,6	;RP1=0, select bank1
  9336     0537  00BD               	movwf	(efgtoa@h+3)^(0+128)
  9337     0538  0872               	movf	?___fladd+2,w
  9338     0539  00BC               	movwf	(efgtoa@h+2)^(0+128)
  9339     053A  0871               	movf	?___fladd+1,w
  9340     053B  00BB               	movwf	(efgtoa@h+1)^(0+128)
  9341     053C  0870               	movf	?___fladd,w
  9342     053D  00BA               	movwf	efgtoa@h^(0+128)
  9343     053E                     l3023:
  9344                           
  9345                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  9346     053E  083D               	movf	(efgtoa@h+3)^(0+128),w
  9347     053F  1283               	bcf	3,5	;RP0=0, select bank0
  9348     0540  1303               	bcf	3,6	;RP1=0, select bank0
  9349     0541  00B8               	movwf	___flge@ff1+3
  9350     0542  1683               	bsf	3,5	;RP0=1, select bank1
  9351     0543  1303               	bcf	3,6	;RP1=0, select bank1
  9352     0544  083C               	movf	(efgtoa@h+2)^(0+128),w
  9353     0545  1283               	bcf	3,5	;RP0=0, select bank0
  9354     0546  1303               	bcf	3,6	;RP1=0, select bank0
  9355     0547  00B7               	movwf	___flge@ff1+2
  9356     0548  1683               	bsf	3,5	;RP0=1, select bank1
  9357     0549  1303               	bcf	3,6	;RP1=0, select bank1
  9358     054A  083B               	movf	(efgtoa@h+1)^(0+128),w
  9359     054B  1283               	bcf	3,5	;RP0=0, select bank0
  9360     054C  1303               	bcf	3,6	;RP1=0, select bank0
  9361     054D  00B6               	movwf	___flge@ff1+1
  9362     054E  1683               	bsf	3,5	;RP0=1, select bank1
  9363     054F  1303               	bcf	3,6	;RP1=0, select bank1
  9364     0550  083A               	movf	efgtoa@h^(0+128),w
  9365     0551  1283               	bcf	3,5	;RP0=0, select bank0
  9366     0552  1303               	bcf	3,6	;RP1=0, select bank0
  9367     0553  00B5               	movwf	___flge@ff1
  9368     0554  3041               	movlw	65
  9369     0555  00A3               	movwf	___flmul@b+3
  9370     0556  3020               	movlw	32
  9371     0557  00A2               	movwf	___flmul@b+2
  9372     0558  3000               	movlw	0
  9373     0559  00A1               	movwf	___flmul@b+1
  9374     055A  3000               	movlw	0
  9375     055B  00A0               	movwf	___flmul@b
  9376     055C  1683               	bsf	3,5	;RP0=1, select bank1
  9377     055D  1303               	bcf	3,6	;RP1=0, select bank1
  9378     055E  0837               	movf	(efgtoa@ou+3)^(0+128),w
  9379     055F  1283               	bcf	3,5	;RP0=0, select bank0
  9380     0560  1303               	bcf	3,6	;RP1=0, select bank0
  9381     0561  00A7               	movwf	___flmul@a+3
  9382     0562  1683               	bsf	3,5	;RP0=1, select bank1
  9383     0563  1303               	bcf	3,6	;RP1=0, select bank1
  9384     0564  0836               	movf	(efgtoa@ou+2)^(0+128),w
  9385     0565  1283               	bcf	3,5	;RP0=0, select bank0
  9386     0566  1303               	bcf	3,6	;RP1=0, select bank0
  9387     0567  00A6               	movwf	___flmul@a+2
  9388     0568  1683               	bsf	3,5	;RP0=1, select bank1
  9389     0569  1303               	bcf	3,6	;RP1=0, select bank1
  9390     056A  0835               	movf	(efgtoa@ou+1)^(0+128),w
  9391     056B  1283               	bcf	3,5	;RP0=0, select bank0
  9392     056C  1303               	bcf	3,6	;RP1=0, select bank0
  9393     056D  00A5               	movwf	___flmul@a+1
  9394     056E  1683               	bsf	3,5	;RP0=1, select bank1
  9395     056F  1303               	bcf	3,6	;RP1=0, select bank1
  9396     0570  0834               	movf	efgtoa@ou^(0+128),w
  9397     0571  1283               	bcf	3,5	;RP0=0, select bank0
  9398     0572  1303               	bcf	3,6	;RP1=0, select bank0
  9399     0573  00A4               	movwf	___flmul@a
  9400     0574  120A  158A  24BB  120A  118A  	fcall	___flmul
  9401     0579  1283               	bcf	3,5	;RP0=0, select bank0
  9402     057A  1303               	bcf	3,6	;RP1=0, select bank0
  9403     057B  0823               	movf	?___flmul+3,w
  9404     057C  00BC               	movwf	___flge@ff2+3
  9405     057D  0822               	movf	?___flmul+2,w
  9406     057E  00BB               	movwf	___flge@ff2+2
  9407     057F  0821               	movf	?___flmul+1,w
  9408     0580  00BA               	movwf	___flge@ff2+1
  9409     0581  0820               	movf	?___flmul,w
  9410     0582  00B9               	movwf	___flge@ff2
  9411     0583  120A  118A  203F  120A  118A  	fcall	___flge
  9412     0588  1C03               	btfss	3,0
  9413     0589  2D8B               	goto	u4171
  9414     058A  2D8C               	goto	u4170
  9415     058B                     u4171:
  9416     058B  2DDF               	goto	l747
  9417     058C                     u4170:
  9418     058C                     l3025:
  9419                           
  9420                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  9421     058C  3001               	movlw	1
  9422     058D  1683               	bsf	3,5	;RP0=1, select bank1
  9423     058E  1303               	bcf	3,6	;RP1=0, select bank1
  9424     058F  07B0               	addwf	efgtoa@e^(0+128),f
  9425     0590  1803               	skipnc
  9426     0591  0AB1               	incf	(efgtoa@e+1)^(0+128),f
  9427     0592  3000               	movlw	0
  9428     0593  07B1               	addwf	(efgtoa@e+1)^(0+128),f
  9429     0594                     l3027:
  9430                           
  9431                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  9432     0594  3041               	movlw	65
  9433     0595  1283               	bcf	3,5	;RP0=0, select bank0
  9434     0596  1303               	bcf	3,6	;RP1=0, select bank0
  9435     0597  00A3               	movwf	___flmul@b+3
  9436     0598  3020               	movlw	32
  9437     0599  00A2               	movwf	___flmul@b+2
  9438     059A  3000               	movlw	0
  9439     059B  00A1               	movwf	___flmul@b+1
  9440     059C  3000               	movlw	0
  9441     059D  00A0               	movwf	___flmul@b
  9442     059E  1683               	bsf	3,5	;RP0=1, select bank1
  9443     059F  1303               	bcf	3,6	;RP1=0, select bank1
  9444     05A0  0837               	movf	(efgtoa@ou+3)^(0+128),w
  9445     05A1  1283               	bcf	3,5	;RP0=0, select bank0
  9446     05A2  1303               	bcf	3,6	;RP1=0, select bank0
  9447     05A3  00A7               	movwf	___flmul@a+3
  9448     05A4  1683               	bsf	3,5	;RP0=1, select bank1
  9449     05A5  1303               	bcf	3,6	;RP1=0, select bank1
  9450     05A6  0836               	movf	(efgtoa@ou+2)^(0+128),w
  9451     05A7  1283               	bcf	3,5	;RP0=0, select bank0
  9452     05A8  1303               	bcf	3,6	;RP1=0, select bank0
  9453     05A9  00A6               	movwf	___flmul@a+2
  9454     05AA  1683               	bsf	3,5	;RP0=1, select bank1
  9455     05AB  1303               	bcf	3,6	;RP1=0, select bank1
  9456     05AC  0835               	movf	(efgtoa@ou+1)^(0+128),w
  9457     05AD  1283               	bcf	3,5	;RP0=0, select bank0
  9458     05AE  1303               	bcf	3,6	;RP1=0, select bank0
  9459     05AF  00A5               	movwf	___flmul@a+1
  9460     05B0  1683               	bsf	3,5	;RP0=1, select bank1
  9461     05B1  1303               	bcf	3,6	;RP1=0, select bank1
  9462     05B2  0834               	movf	efgtoa@ou^(0+128),w
  9463     05B3  1283               	bcf	3,5	;RP0=0, select bank0
  9464     05B4  1303               	bcf	3,6	;RP1=0, select bank0
  9465     05B5  00A4               	movwf	___flmul@a
  9466     05B6  120A  158A  24BB  120A  118A  	fcall	___flmul
  9467     05BB  1283               	bcf	3,5	;RP0=0, select bank0
  9468     05BC  1303               	bcf	3,6	;RP1=0, select bank0
  9469     05BD  0823               	movf	?___flmul+3,w
  9470     05BE  1683               	bsf	3,5	;RP0=1, select bank1
  9471     05BF  1303               	bcf	3,6	;RP1=0, select bank1
  9472     05C0  00B7               	movwf	(efgtoa@ou+3)^(0+128)
  9473     05C1  1283               	bcf	3,5	;RP0=0, select bank0
  9474     05C2  1303               	bcf	3,6	;RP1=0, select bank0
  9475     05C3  0822               	movf	?___flmul+2,w
  9476     05C4  1683               	bsf	3,5	;RP0=1, select bank1
  9477     05C5  1303               	bcf	3,6	;RP1=0, select bank1
  9478     05C6  00B6               	movwf	(efgtoa@ou+2)^(0+128)
  9479     05C7  1283               	bcf	3,5	;RP0=0, select bank0
  9480     05C8  1303               	bcf	3,6	;RP1=0, select bank0
  9481     05C9  0821               	movf	?___flmul+1,w
  9482     05CA  1683               	bsf	3,5	;RP0=1, select bank1
  9483     05CB  1303               	bcf	3,6	;RP1=0, select bank1
  9484     05CC  00B5               	movwf	(efgtoa@ou+1)^(0+128)
  9485     05CD  1283               	bcf	3,5	;RP0=0, select bank0
  9486     05CE  1303               	bcf	3,6	;RP1=0, select bank0
  9487     05CF  0820               	movf	?___flmul,w
  9488     05D0  1683               	bsf	3,5	;RP0=1, select bank1
  9489     05D1  1303               	bcf	3,6	;RP1=0, select bank1
  9490     05D2  00B4               	movwf	efgtoa@ou^(0+128)
  9491     05D3                     l3029:
  9492                           
  9493                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  9494     05D3  3066               	movlw	102
  9495     05D4  062A               	xorwf	efgtoa@nmode^(0+128),w
  9496     05D5  1D03               	btfss	3,2
  9497     05D6  2DD8               	goto	u4181
  9498     05D7  2DD9               	goto	u4180
  9499     05D8                     u4181:
  9500     05D8  2DDF               	goto	l747
  9501     05D9                     u4180:
  9502     05D9                     l3031:
  9503                           
  9504                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  9505     05D9  3001               	movlw	1
  9506     05DA  07AD               	addwf	efgtoa@m^(0+128),f
  9507     05DB  1803               	skipnc
  9508     05DC  0AAE               	incf	(efgtoa@m+1)^(0+128),f
  9509     05DD  3000               	movlw	0
  9510     05DE  07AE               	addwf	(efgtoa@m+1)^(0+128),f
  9511     05DF                     l747:	
  9512                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 767:  }
  9513                           
  9514                           
  9515                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  9516     05DF  1683               	bsf	3,5	;RP0=1, select bank1
  9517     05E0  1303               	bcf	3,6	;RP1=0, select bank1
  9518     05E1  0837               	movf	(efgtoa@ou+3)^(0+128),w
  9519     05E2  00CC               	movwf	(efgtoa@u+3)^(0+128)
  9520     05E3  0836               	movf	(efgtoa@ou+2)^(0+128),w
  9521     05E4  00CB               	movwf	(efgtoa@u+2)^(0+128)
  9522     05E5  0835               	movf	(efgtoa@ou+1)^(0+128),w
  9523     05E6  00CA               	movwf	(efgtoa@u+1)^(0+128)
  9524     05E7  0834               	movf	efgtoa@ou^(0+128),w
  9525     05E8  00C9               	movwf	efgtoa@u^(0+128)
  9526                           
  9527                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  9528     05E9  0831               	movf	(efgtoa@e+1)^(0+128),w
  9529     05EA  00A1               	movwf	(efgtoa@ne+1)^(0+128)
  9530     05EB  0830               	movf	efgtoa@e^(0+128),w
  9531     05EC  00A0               	movwf	efgtoa@ne^(0+128)
  9532     05ED                     l3033:
  9533                           
  9534                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  9535     05ED  01A8               	clrf	efgtoa@pp^(0+128)
  9536     05EE                     l3035:
  9537                           
  9538                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  9539     05EE  01A4               	clrf	efgtoa@t^(0+128)
  9540     05EF  01A5               	clrf	(efgtoa@t+1)^(0+128)
  9541     05F0                     l3037:
  9542                           
  9543                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  9544     05F0  01B8               	clrf	efgtoa@i^(0+128)
  9545     05F1  01B9               	clrf	(efgtoa@i+1)^(0+128)
  9546                           
  9547                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9548     05F2  2F53               	goto	l3081
  9549     05F3                     l3039:
  9550                           
  9551                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  9552     05F3  1683               	bsf	3,5	;RP0=1, select bank1
  9553     05F4  1303               	bcf	3,6	;RP1=0, select bank1
  9554     05F5  084C               	movf	(efgtoa@u+3)^(0+128),w
  9555     05F6  00F3               	movwf	___fldiv@a+3
  9556     05F7  084B               	movf	(efgtoa@u+2)^(0+128),w
  9557     05F8  00F2               	movwf	___fldiv@a+2
  9558     05F9  084A               	movf	(efgtoa@u+1)^(0+128),w
  9559     05FA  00F1               	movwf	___fldiv@a+1
  9560     05FB  0849               	movf	efgtoa@u^(0+128),w
  9561     05FC  00F0               	movwf	___fldiv@a
  9562     05FD  083D               	movf	(efgtoa@h+3)^(0+128),w
  9563     05FE  00F7               	movwf	___fldiv@b+3
  9564     05FF  083C               	movf	(efgtoa@h+2)^(0+128),w
  9565     0600  00F6               	movwf	___fldiv@b+2
  9566     0601  083B               	movf	(efgtoa@h+1)^(0+128),w
  9567     0602  00F5               	movwf	___fldiv@b+1
  9568     0603  083A               	movf	efgtoa@h^(0+128),w
  9569     0604  00F4               	movwf	___fldiv@b
  9570     0605  120A  158A  2082  120A  118A  	fcall	___fldiv
  9571     060A  0873               	movf	?___fldiv+3,w
  9572     060B  1283               	bcf	3,5	;RP0=0, select bank0
  9573     060C  1303               	bcf	3,6	;RP1=0, select bank0
  9574     060D  00B0               	movwf	floorf@x+3
  9575     060E  0872               	movf	?___fldiv+2,w
  9576     060F  00AF               	movwf	floorf@x+2
  9577     0610  0871               	movf	?___fldiv+1,w
  9578     0611  00AE               	movwf	floorf@x+1
  9579     0612  0870               	movf	?___fldiv,w
  9580     0613  00AD               	movwf	floorf@x
  9581     0614  160A  118A  2367  120A  118A  	fcall	_floorf
  9582     0619  1283               	bcf	3,5	;RP0=0, select bank0
  9583     061A  1303               	bcf	3,6	;RP1=0, select bank0
  9584     061B  0830               	movf	?_floorf+3,w
  9585     061C  1683               	bsf	3,5	;RP0=1, select bank1
  9586     061D  1303               	bcf	3,6	;RP1=0, select bank1
  9587     061E  00C1               	movwf	(efgtoa@l+3)^(0+128)
  9588     061F  1283               	bcf	3,5	;RP0=0, select bank0
  9589     0620  1303               	bcf	3,6	;RP1=0, select bank0
  9590     0621  082F               	movf	?_floorf+2,w
  9591     0622  1683               	bsf	3,5	;RP0=1, select bank1
  9592     0623  1303               	bcf	3,6	;RP1=0, select bank1
  9593     0624  00C0               	movwf	(efgtoa@l+2)^(0+128)
  9594     0625  1283               	bcf	3,5	;RP0=0, select bank0
  9595     0626  1303               	bcf	3,6	;RP1=0, select bank0
  9596     0627  082E               	movf	?_floorf+1,w
  9597     0628  1683               	bsf	3,5	;RP0=1, select bank1
  9598     0629  1303               	bcf	3,6	;RP1=0, select bank1
  9599     062A  00BF               	movwf	(efgtoa@l+1)^(0+128)
  9600     062B  1283               	bcf	3,5	;RP0=0, select bank0
  9601     062C  1303               	bcf	3,6	;RP1=0, select bank0
  9602     062D  082D               	movf	?_floorf,w
  9603     062E  1683               	bsf	3,5	;RP0=1, select bank1
  9604     062F  1303               	bcf	3,6	;RP1=0, select bank1
  9605     0630  00BE               	movwf	efgtoa@l^(0+128)
  9606                           
  9607                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  9608     0631  0841               	movf	(efgtoa@l+3)^(0+128),w
  9609     0632  00F3               	movwf	___fltol@f1+3
  9610     0633  0840               	movf	(efgtoa@l+2)^(0+128),w
  9611     0634  00F2               	movwf	___fltol@f1+2
  9612     0635  083F               	movf	(efgtoa@l+1)^(0+128),w
  9613     0636  00F1               	movwf	___fltol@f1+1
  9614     0637  083E               	movf	efgtoa@l^(0+128),w
  9615     0638  00F0               	movwf	___fltol@f1
  9616     0639  160A  118A  22F1  120A  118A  	fcall	___fltol
  9617     063E  0871               	movf	?___fltol+1,w
  9618     063F  3A80               	xorlw	128
  9619     0640  00FF               	movwf	btemp+1
  9620     0641  3080               	movlw	128
  9621     0642  027F               	subwf	btemp+1,w
  9622     0643  1D03               	skipz
  9623     0644  2E47               	goto	u4195
  9624     0645  300A               	movlw	10
  9625     0646  0270               	subwf	?___fltol,w
  9626     0647                     u4195:
  9627     0647  1803               	skipnc
  9628     0648  2E4A               	goto	u4191
  9629     0649  2E4B               	goto	u4190
  9630     064A                     u4191:
  9631     064A  2E61               	goto	l3043
  9632     064B                     u4190:
  9633     064B                     l3041:
  9634     064B  1683               	bsf	3,5	;RP0=1, select bank1
  9635     064C  1303               	bcf	3,6	;RP1=0, select bank1
  9636     064D  0841               	movf	(efgtoa@l+3)^(0+128),w
  9637     064E  00F3               	movwf	___fltol@f1+3
  9638     064F  0840               	movf	(efgtoa@l+2)^(0+128),w
  9639     0650  00F2               	movwf	___fltol@f1+2
  9640     0651  083F               	movf	(efgtoa@l+1)^(0+128),w
  9641     0652  00F1               	movwf	___fltol@f1+1
  9642     0653  083E               	movf	efgtoa@l^(0+128),w
  9643     0654  00F0               	movwf	___fltol@f1
  9644     0655  160A  118A  22F1  120A  118A  	fcall	___fltol
  9645     065A  0871               	movf	?___fltol+1,w
  9646     065B  1683               	bsf	3,5	;RP0=1, select bank1
  9647     065C  1303               	bcf	3,6	;RP1=0, select bank1
  9648     065D  00AC               	movwf	(efgtoa@d+1)^(0+128)
  9649     065E  0870               	movf	?___fltol,w
  9650     065F  00AB               	movwf	efgtoa@d^(0+128)
  9651     0660  2E67               	goto	l3045
  9652     0661                     l3043:
  9653     0661  3009               	movlw	9
  9654     0662  1683               	bsf	3,5	;RP0=1, select bank1
  9655     0663  1303               	bcf	3,6	;RP1=0, select bank1
  9656     0664  00AB               	movwf	efgtoa@d^(0+128)
  9657     0665  3000               	movlw	0
  9658     0666  00AC               	movwf	(efgtoa@d^(0+128)+1)
  9659     0667                     l3045:
  9660                           
  9661                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  9662     0667  0828               	movf	efgtoa@pp^(0+128),w
  9663     0668  1D03               	btfss	3,2
  9664     0669  2E6B               	goto	u4201
  9665     066A  2E6C               	goto	u4200
  9666     066B                     u4201:
  9667     066B  2E9D               	goto	l3065
  9668     066C                     u4200:
  9669     066C                     l3047:
  9670     066C  1FA1               	btfss	(efgtoa@ne+1)^(0+128),7
  9671     066D  2E6F               	goto	u4211
  9672     066E  2E70               	goto	u4210
  9673     066F                     u4211:
  9674     066F  2E9D               	goto	l3065
  9675     0670                     u4210:
  9676     0670                     l3049:
  9677                           
  9678                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  9679     0670  0843               	movf	efgtoa@n^(0+128),w
  9680     0671  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9681     0672  0084               	movwf	4
  9682     0673  302E               	movlw	46
  9683     0674  1783               	bsf	3,7	;select IRP bank3
  9684     0675  0080               	movwf	0
  9685     0676                     l3051:
  9686     0676  3001               	movlw	1
  9687     0677  07C3               	addwf	efgtoa@n^(0+128),f
  9688     0678  1803               	skipnc
  9689     0679  0AC4               	incf	(efgtoa@n+1)^(0+128),f
  9690     067A  3000               	movlw	0
  9691     067B  07C4               	addwf	(efgtoa@n+1)^(0+128),f
  9692     067C                     l3053:
  9693                           
  9694                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  9695     067C  30FF               	movlw	255
  9696     067D  07B2               	addwf	efgtoa@w^(0+128),f
  9697     067E  1803               	skipnc
  9698     067F  0AB3               	incf	(efgtoa@w+1)^(0+128),f
  9699     0680  30FF               	movlw	255
  9700     0681  07B3               	addwf	(efgtoa@w+1)^(0+128),f
  9701     0682                     l3055:
  9702                           
  9703                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  9704     0682  01A8               	clrf	efgtoa@pp^(0+128)
  9705     0683  0AA8               	incf	efgtoa@pp^(0+128),f
  9706     0684  2E9D               	goto	l3065
  9707     0685                     l3057:
  9708                           
  9709                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  9710     0685  0843               	movf	efgtoa@n^(0+128),w
  9711     0686  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9712     0687  0084               	movwf	4
  9713     0688  3030               	movlw	48
  9714     0689  1783               	bsf	3,7	;select IRP bank3
  9715     068A  0080               	movwf	0
  9716     068B                     l3059:
  9717     068B  3001               	movlw	1
  9718     068C  07C3               	addwf	efgtoa@n^(0+128),f
  9719     068D  1803               	skipnc
  9720     068E  0AC4               	incf	(efgtoa@n+1)^(0+128),f
  9721     068F  3000               	movlw	0
  9722     0690  07C4               	addwf	(efgtoa@n+1)^(0+128),f
  9723     0691                     l3061:
  9724                           
  9725                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  9726     0691  30FF               	movlw	255
  9727     0692  07B2               	addwf	efgtoa@w^(0+128),f
  9728     0693  1803               	skipnc
  9729     0694  0AB3               	incf	(efgtoa@w+1)^(0+128),f
  9730     0695  30FF               	movlw	255
  9731     0696  07B3               	addwf	(efgtoa@w+1)^(0+128),f
  9732     0697                     l3063:
  9733                           
  9734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  9735     0697  30FF               	movlw	255
  9736     0698  07A4               	addwf	efgtoa@t^(0+128),f
  9737     0699  1803               	skipnc
  9738     069A  0AA5               	incf	(efgtoa@t+1)^(0+128),f
  9739     069B  30FF               	movlw	255
  9740     069C  07A5               	addwf	(efgtoa@t+1)^(0+128),f
  9741     069D                     l3065:
  9742                           
  9743                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  9744     069D  0824               	movf	efgtoa@t^(0+128),w
  9745     069E  0425               	iorwf	(efgtoa@t+1)^(0+128),w
  9746     069F  1D03               	btfss	3,2
  9747     06A0  2EA2               	goto	u4221
  9748     06A1  2EA3               	goto	u4220
  9749     06A2                     u4221:
  9750     06A2  2E85               	goto	l3057
  9751     06A3                     u4220:
  9752     06A3                     l3067:
  9753                           
  9754                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  9755     06A3  0843               	movf	efgtoa@n^(0+128),w
  9756     06A4  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9757     06A5  0084               	movwf	4
  9758     06A6  082B               	movf	efgtoa@d^(0+128),w
  9759     06A7  3E30               	addlw	48
  9760     06A8  1783               	bsf	3,7	;select IRP bank3
  9761     06A9  0080               	movwf	0
  9762     06AA                     l3069:
  9763     06AA  3001               	movlw	1
  9764     06AB  07C3               	addwf	efgtoa@n^(0+128),f
  9765     06AC  1803               	skipnc
  9766     06AD  0AC4               	incf	(efgtoa@n+1)^(0+128),f
  9767     06AE  3000               	movlw	0
  9768     06AF  07C4               	addwf	(efgtoa@n+1)^(0+128),f
  9769     06B0                     l3071:
  9770                           
  9771                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  9772     06B0  30FF               	movlw	255
  9773     06B1  07B2               	addwf	efgtoa@w^(0+128),f
  9774     06B2  1803               	skipnc
  9775     06B3  0AB3               	incf	(efgtoa@w+1)^(0+128),f
  9776     06B4  30FF               	movlw	255
  9777     06B5  07B3               	addwf	(efgtoa@w+1)^(0+128),f
  9778     06B6                     l3073:
  9779                           
  9780                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  9781     06B6  084C               	movf	(efgtoa@u+3)^(0+128),w
  9782     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  9783     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  9784     06B9  00A7               	movwf	___flmul@a+3
  9785     06BA  1683               	bsf	3,5	;RP0=1, select bank1
  9786     06BB  1303               	bcf	3,6	;RP1=0, select bank1
  9787     06BC  084B               	movf	(efgtoa@u+2)^(0+128),w
  9788     06BD  1283               	bcf	3,5	;RP0=0, select bank0
  9789     06BE  1303               	bcf	3,6	;RP1=0, select bank0
  9790     06BF  00A6               	movwf	___flmul@a+2
  9791     06C0  1683               	bsf	3,5	;RP0=1, select bank1
  9792     06C1  1303               	bcf	3,6	;RP1=0, select bank1
  9793     06C2  084A               	movf	(efgtoa@u+1)^(0+128),w
  9794     06C3  1283               	bcf	3,5	;RP0=0, select bank0
  9795     06C4  1303               	bcf	3,6	;RP1=0, select bank0
  9796     06C5  00A5               	movwf	___flmul@a+1
  9797     06C6  1683               	bsf	3,5	;RP0=1, select bank1
  9798     06C7  1303               	bcf	3,6	;RP1=0, select bank1
  9799     06C8  0849               	movf	efgtoa@u^(0+128),w
  9800     06C9  1283               	bcf	3,5	;RP0=0, select bank0
  9801     06CA  1303               	bcf	3,6	;RP1=0, select bank0
  9802     06CB  00A4               	movwf	___flmul@a
  9803     06CC  1683               	bsf	3,5	;RP0=1, select bank1
  9804     06CD  1303               	bcf	3,6	;RP1=0, select bank1
  9805     06CE  0841               	movf	(efgtoa@l+3)^(0+128),w
  9806     06CF  1283               	bcf	3,5	;RP0=0, select bank0
  9807     06D0  1303               	bcf	3,6	;RP1=0, select bank0
  9808     06D1  00A3               	movwf	___flmul@b+3
  9809     06D2  1683               	bsf	3,5	;RP0=1, select bank1
  9810     06D3  1303               	bcf	3,6	;RP1=0, select bank1
  9811     06D4  0840               	movf	(efgtoa@l+2)^(0+128),w
  9812     06D5  1283               	bcf	3,5	;RP0=0, select bank0
  9813     06D6  1303               	bcf	3,6	;RP1=0, select bank0
  9814     06D7  00A2               	movwf	___flmul@b+2
  9815     06D8  1683               	bsf	3,5	;RP0=1, select bank1
  9816     06D9  1303               	bcf	3,6	;RP1=0, select bank1
  9817     06DA  083F               	movf	(efgtoa@l+1)^(0+128),w
  9818     06DB  1283               	bcf	3,5	;RP0=0, select bank0
  9819     06DC  1303               	bcf	3,6	;RP1=0, select bank0
  9820     06DD  00A1               	movwf	___flmul@b+1
  9821     06DE  1683               	bsf	3,5	;RP0=1, select bank1
  9822     06DF  1303               	bcf	3,6	;RP1=0, select bank1
  9823     06E0  083E               	movf	efgtoa@l^(0+128),w
  9824     06E1  1283               	bcf	3,5	;RP0=0, select bank0
  9825     06E2  1303               	bcf	3,6	;RP1=0, select bank0
  9826     06E3  00A0               	movwf	___flmul@b
  9827     06E4  120A  158A  24BB  120A  118A  	fcall	___flmul
  9828     06E9  1283               	bcf	3,5	;RP0=0, select bank0
  9829     06EA  1303               	bcf	3,6	;RP1=0, select bank0
  9830     06EB  0823               	movf	?___flmul+3,w
  9831     06EC  00B8               	movwf	___flsub@a+3
  9832     06ED  0822               	movf	?___flmul+2,w
  9833     06EE  00B7               	movwf	___flsub@a+2
  9834     06EF  0821               	movf	?___flmul+1,w
  9835     06F0  00B6               	movwf	___flsub@a+1
  9836     06F1  0820               	movf	?___flmul,w
  9837     06F2  00B5               	movwf	___flsub@a
  9838     06F3  1683               	bsf	3,5	;RP0=1, select bank1
  9839     06F4  1303               	bcf	3,6	;RP1=0, select bank1
  9840     06F5  083D               	movf	(efgtoa@h+3)^(0+128),w
  9841     06F6  1283               	bcf	3,5	;RP0=0, select bank0
  9842     06F7  1303               	bcf	3,6	;RP1=0, select bank0
  9843     06F8  00BC               	movwf	___flsub@b+3
  9844     06F9  1683               	bsf	3,5	;RP0=1, select bank1
  9845     06FA  1303               	bcf	3,6	;RP1=0, select bank1
  9846     06FB  083C               	movf	(efgtoa@h+2)^(0+128),w
  9847     06FC  1283               	bcf	3,5	;RP0=0, select bank0
  9848     06FD  1303               	bcf	3,6	;RP1=0, select bank0
  9849     06FE  00BB               	movwf	___flsub@b+2
  9850     06FF  1683               	bsf	3,5	;RP0=1, select bank1
  9851     0700  1303               	bcf	3,6	;RP1=0, select bank1
  9852     0701  083B               	movf	(efgtoa@h+1)^(0+128),w
  9853     0702  1283               	bcf	3,5	;RP0=0, select bank0
  9854     0703  1303               	bcf	3,6	;RP1=0, select bank0
  9855     0704  00BA               	movwf	___flsub@b+1
  9856     0705  1683               	bsf	3,5	;RP0=1, select bank1
  9857     0706  1303               	bcf	3,6	;RP1=0, select bank1
  9858     0707  083A               	movf	efgtoa@h^(0+128),w
  9859     0708  1283               	bcf	3,5	;RP0=0, select bank0
  9860     0709  1303               	bcf	3,6	;RP1=0, select bank0
  9861     070A  00B9               	movwf	___flsub@b
  9862     070B  160A  118A  204E  120A  118A  	fcall	___flsub
  9863     0710  1283               	bcf	3,5	;RP0=0, select bank0
  9864     0711  1303               	bcf	3,6	;RP1=0, select bank0
  9865     0712  0838               	movf	?___flsub+3,w
  9866     0713  1683               	bsf	3,5	;RP0=1, select bank1
  9867     0714  1303               	bcf	3,6	;RP1=0, select bank1
  9868     0715  00BD               	movwf	(efgtoa@h+3)^(0+128)
  9869     0716  1283               	bcf	3,5	;RP0=0, select bank0
  9870     0717  1303               	bcf	3,6	;RP1=0, select bank0
  9871     0718  0837               	movf	?___flsub+2,w
  9872     0719  1683               	bsf	3,5	;RP0=1, select bank1
  9873     071A  1303               	bcf	3,6	;RP1=0, select bank1
  9874     071B  00BC               	movwf	(efgtoa@h+2)^(0+128)
  9875     071C  1283               	bcf	3,5	;RP0=0, select bank0
  9876     071D  1303               	bcf	3,6	;RP1=0, select bank0
  9877     071E  0836               	movf	?___flsub+1,w
  9878     071F  1683               	bsf	3,5	;RP0=1, select bank1
  9879     0720  1303               	bcf	3,6	;RP1=0, select bank1
  9880     0721  00BB               	movwf	(efgtoa@h+1)^(0+128)
  9881     0722  1283               	bcf	3,5	;RP0=0, select bank0
  9882     0723  1303               	bcf	3,6	;RP1=0, select bank0
  9883     0724  0835               	movf	?___flsub,w
  9884     0725  1683               	bsf	3,5	;RP0=1, select bank1
  9885     0726  1303               	bcf	3,6	;RP1=0, select bank1
  9886     0727  00BA               	movwf	efgtoa@h^(0+128)
  9887     0728                     l3075:
  9888                           
  9889                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  9890     0728  3041               	movlw	65
  9891     0729  00F3               	movwf	___fldiv@a+3
  9892     072A  3020               	movlw	32
  9893     072B  00F2               	movwf	___fldiv@a+2
  9894     072C  3000               	movlw	0
  9895     072D  00F1               	movwf	___fldiv@a+1
  9896     072E  3000               	movlw	0
  9897     072F  00F0               	movwf	___fldiv@a
  9898     0730  084C               	movf	(efgtoa@u+3)^(0+128),w
  9899     0731  00F7               	movwf	___fldiv@b+3
  9900     0732  084B               	movf	(efgtoa@u+2)^(0+128),w
  9901     0733  00F6               	movwf	___fldiv@b+2
  9902     0734  084A               	movf	(efgtoa@u+1)^(0+128),w
  9903     0735  00F5               	movwf	___fldiv@b+1
  9904     0736  0849               	movf	efgtoa@u^(0+128),w
  9905     0737  00F4               	movwf	___fldiv@b
  9906     0738  120A  158A  2082  120A  118A  	fcall	___fldiv
  9907     073D  0873               	movf	?___fldiv+3,w
  9908     073E  1683               	bsf	3,5	;RP0=1, select bank1
  9909     073F  1303               	bcf	3,6	;RP1=0, select bank1
  9910     0740  00CC               	movwf	(efgtoa@u+3)^(0+128)
  9911     0741  0872               	movf	?___fldiv+2,w
  9912     0742  00CB               	movwf	(efgtoa@u+2)^(0+128)
  9913     0743  0871               	movf	?___fldiv+1,w
  9914     0744  00CA               	movwf	(efgtoa@u+1)^(0+128)
  9915     0745  0870               	movf	?___fldiv,w
  9916     0746  00C9               	movwf	efgtoa@u^(0+128)
  9917     0747                     l3077:
  9918                           
  9919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  9920     0747  30FF               	movlw	255
  9921     0748  07A0               	addwf	efgtoa@ne^(0+128),f
  9922     0749  1803               	skipnc
  9923     074A  0AA1               	incf	(efgtoa@ne+1)^(0+128),f
  9924     074B  30FF               	movlw	255
  9925     074C  07A1               	addwf	(efgtoa@ne+1)^(0+128),f
  9926     074D                     l3079:
  9927                           
  9928                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  9929     074D  3001               	movlw	1
  9930     074E  07B8               	addwf	efgtoa@i^(0+128),f
  9931     074F  1803               	skipnc
  9932     0750  0AB9               	incf	(efgtoa@i+1)^(0+128),f
  9933     0751  3000               	movlw	0
  9934     0752  07B9               	addwf	(efgtoa@i+1)^(0+128),f
  9935     0753                     l3081:
  9936                           
  9937                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9938     0753  0839               	movf	(efgtoa@i+1)^(0+128),w
  9939     0754  3A80               	xorlw	128
  9940     0755  1283               	bcf	3,5	;RP0=0, select bank0
  9941     0756  1303               	bcf	3,6	;RP1=0, select bank0
  9942     0757  00C6               	movwf	??_efgtoa
  9943     0758  1683               	bsf	3,5	;RP0=1, select bank1
  9944     0759  1303               	bcf	3,6	;RP1=0, select bank1
  9945     075A  082E               	movf	(efgtoa@m+1)^(0+128),w
  9946     075B  3A80               	xorlw	128
  9947     075C  1283               	bcf	3,5	;RP0=0, select bank0
  9948     075D  1303               	bcf	3,6	;RP1=0, select bank0
  9949     075E  0246               	subwf	??_efgtoa,w
  9950     075F  1D03               	skipz
  9951     0760  2F65               	goto	u4235
  9952     0761  1683               	bsf	3,5	;RP0=1, select bank1
  9953     0762  1303               	bcf	3,6	;RP1=0, select bank1
  9954     0763  082D               	movf	efgtoa@m^(0+128),w
  9955     0764  0238               	subwf	efgtoa@i^(0+128),w
  9956     0765                     u4235:
  9957     0765  1803               	skipnc
  9958     0766  2F68               	goto	u4231
  9959     0767  2F69               	goto	u4230
  9960     0768                     u4231:
  9961     0768  2F78               	goto	l3085
  9962     0769                     u4230:
  9963     0769                     l3083:
  9964     0769  1683               	bsf	3,5	;RP0=1, select bank1
  9965     076A  1303               	bcf	3,6	;RP1=0, select bank1
  9966     076B  0844               	movf	(efgtoa@n+1)^(0+128),w
  9967     076C  3A80               	xorlw	128
  9968     076D  00FF               	movwf	btemp+1
  9969     076E  3080               	movlw	128
  9970     076F  027F               	subwf	btemp+1,w
  9971     0770  1D03               	skipz
  9972     0771  2F74               	goto	u4245
  9973     0772  304B               	movlw	75
  9974     0773  0243               	subwf	efgtoa@n^(0+128),w
  9975     0774                     u4245:
  9976     0774  1C03               	skipc
  9977     0775  2F77               	goto	u4241
  9978     0776  2F78               	goto	u4240
  9979     0777                     u4241:
  9980     0777  2DF3               	goto	l3039
  9981     0778                     u4240:
  9982     0778                     l3085:
  9983                           
  9984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  9985     0778  304F               	movlw	79
  9986     0779  1683               	bsf	3,5	;RP0=1, select bank1
  9987     077A  1303               	bcf	3,6	;RP1=0, select bank1
  9988     077B  00B8               	movwf	efgtoa@i^(0+128)
  9989     077C  3000               	movlw	0
  9990     077D  00B9               	movwf	(efgtoa@i^(0+128)+1)
  9991     077E                     l3087:
  9992                           
  9993                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  9994     077E  0838               	movf	efgtoa@i^(0+128),w
  9995     077F  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
  9996     0780  0084               	movwf	4
  9997     0781  1783               	bsf	3,7	;select IRP bank3
  9998     0782  0180               	clrf	0
  9999     0783                     l3089:
 10000                           
 10001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
 10002     0783  3090               	movlw	(low (_dbuf| (0+256)))& (0+255)
 10003     0784  00F0               	movwf	memcpy@s1
 10004     0785  0844               	movf	(efgtoa@n+1)^(0+128),w
 10005     0786  00F2               	movwf	memcpy@n+1
 10006     0787  0843               	movf	efgtoa@n^(0+128),w
 10007     0788  00F1               	movwf	memcpy@n
 10008     0789  3090               	movlw	(low (_dbuf| (0+256)))& (0+255)
 10009     078A  1283               	bcf	3,5	;RP0=0, select bank0
 10010     078B  1303               	bcf	3,6	;RP1=0, select bank0
 10011     078C  00C6               	movwf	??_efgtoa
 10012     078D  1683               	bsf	3,5	;RP0=1, select bank1
 10013     078E  1303               	bcf	3,6	;RP1=0, select bank1
 10014     078F  0843               	movf	efgtoa@n^(0+128),w
 10015     0790  1283               	bcf	3,5	;RP0=0, select bank0
 10016     0791  1303               	bcf	3,6	;RP1=0, select bank0
 10017     0792  02C6               	subwf	??_efgtoa,f
 10018     0793  1683               	bsf	3,5	;RP0=1, select bank1
 10019     0794  1303               	bcf	3,6	;RP1=0, select bank1
 10020     0795  0838               	movf	efgtoa@i^(0+128),w
 10021     0796  1283               	bcf	3,5	;RP0=0, select bank0
 10022     0797  1303               	bcf	3,6	;RP1=0, select bank0
 10023     0798  0746               	addwf	??_efgtoa,w
 10024     0799  160A  118A  20BD  120A  118A  	fcall	_memcpy
 10025     079E                     l3091:
 10026                           
 10027                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
 10028     079E  1683               	bsf	3,5	;RP0=1, select bank1
 10029     079F  1303               	bcf	3,6	;RP1=0, select bank1
 10030     07A0  0843               	movf	efgtoa@n^(0+128),w
 10031     07A1  0238               	subwf	efgtoa@i^(0+128),w
 10032     07A2  00C3               	movwf	efgtoa@n^(0+128)
 10033     07A3  0844               	movf	(efgtoa@n+1)^(0+128),w
 10034     07A4  1C03               	skipc
 10035     07A5  0A44               	incf	(efgtoa@n+1)^(0+128),w
 10036     07A6  0239               	subwf	(efgtoa@i+1)^(0+128),w
 10037     07A7  00C4               	movwf	(efgtoa@n+1)^(0+128)
 10038     07A8                     l3093:
 10039                           
 10040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
 10041     07A8  0842               	movf	efgtoa@sign^(0+128),w
 10042     07A9  1D03               	btfss	3,2
 10043     07AA  2FAC               	goto	u4251
 10044     07AB  2FAE               	goto	u4250
 10045     07AC                     u4251:
 10046     07AC  3001               	movlw	1
 10047     07AD  2FAF               	goto	u4260
 10048     07AE                     u4250:
 10049     07AE  3000               	movlw	0
 10050     07AF                     u4260:
 10051     07AF  1283               	bcf	3,5	;RP0=0, select bank0
 10052     07B0  1303               	bcf	3,6	;RP1=0, select bank0
 10053     07B1  00C6               	movwf	??_efgtoa
 10054     07B2  01C7               	clrf	??_efgtoa+1
 10055     07B3  0846               	movf	??_efgtoa,w
 10056     07B4  1683               	bsf	3,5	;RP0=1, select bank1
 10057     07B5  1303               	bcf	3,6	;RP1=0, select bank1
 10058     07B6  00B8               	movwf	efgtoa@i^(0+128)
 10059     07B7  1283               	bcf	3,5	;RP0=0, select bank0
 10060     07B8  1303               	bcf	3,6	;RP1=0, select bank0
 10061     07B9  0847               	movf	??_efgtoa+1,w
 10062     07BA  1683               	bsf	3,5	;RP0=1, select bank1
 10063     07BB  1303               	bcf	3,6	;RP1=0, select bank1
 10064     07BC  00B9               	movwf	(efgtoa@i+1)^(0+128)
 10065     07BD                     l3095:
 10066                           
 10067                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
 10068     07BD  0842               	movf	efgtoa@sign^(0+128),w
 10069     07BE  1903               	btfsc	3,2
 10070     07BF  2FC1               	goto	u4271
 10071     07C0  2FC2               	goto	u4270
 10072     07C1                     u4271:
 10073     07C1  2FCE               	goto	l3099
 10074     07C2                     u4270:
 10075     07C2                     l3097:
 10076                           
 10077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
 10078     07C2  30FF               	movlw	255
 10079     07C3  07C3               	addwf	efgtoa@n^(0+128),f
 10080     07C4  1803               	skipnc
 10081     07C5  0AC4               	incf	(efgtoa@n+1)^(0+128),f
 10082     07C6  30FF               	movlw	255
 10083     07C7  07C4               	addwf	(efgtoa@n+1)^(0+128),f
 10084     07C8  0843               	movf	efgtoa@n^(0+128),w
 10085     07C9  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10086     07CA  0084               	movwf	4
 10087     07CB  0842               	movf	efgtoa@sign^(0+128),w
 10088     07CC  1783               	bsf	3,7	;select IRP bank3
 10089     07CD  0080               	movwf	0
 10090     07CE                     l3099:
 10091                           
 10092                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
 10093     07CE  0838               	movf	efgtoa@i^(0+128),w
 10094     07CF  02B2               	subwf	efgtoa@w^(0+128),f
 10095     07D0  0839               	movf	(efgtoa@i+1)^(0+128),w
 10096     07D1  1C03               	skipc
 10097     07D2  03B3               	decf	(efgtoa@w+1)^(0+128),f
 10098     07D3  02B3               	subwf	(efgtoa@w+1)^(0+128),f
 10099     07D4                     l3101:
 10100                           
 10101                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
 10102     07D4  0843               	movf	efgtoa@n^(0+128),w
 10103     07D5  3E90               	addlw	(low (_dbuf| (0+256)))& (0+255)
 10104     07D6  00FB               	movwf	pad@buf
 10105     07D7  0833               	movf	(efgtoa@w+1)^(0+128),w
 10106     07D8  00FD               	movwf	pad@p+1
 10107     07D9  0832               	movf	efgtoa@w^(0+128),w
 10108     07DA  00FC               	movwf	pad@p
 10109     07DB  082F               	movf	efgtoa@fp^(0+128),w
 10110     07DC  120A  118A  2005  120A  118A  	fcall	_pad
 10111     07E1                     l721:
 10112     07E1  0008               	return
 10113     07E2                     __end_of_efgtoa:

Data Sizes:
    Strings     23
    Constant    0
    Data        0
    BSS         100
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     69      77
    BANK1            80     68      80
    BANK3            96      0      80
    BANK2            96      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 0

    f$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(1) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    LCD_String@s	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[9]), 

    memcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@d1	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s	PTR const unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    memcpy@s1	PTR const void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S589$buffer	PTR unsigned char  size(1) Largest target is 0

    S589$source	PTR const unsigned char  size(1) Largest target is 0

    sp__memcpy	PTR void  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 16
		 -> main@Temp(BANK1[16]), 

    strcpy@d	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@dest	PTR unsigned char  size(1) Largest target is 80
		 -> dbuf(BANK3[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_6(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(BANK0[11]), 


Critical Paths under _main in COMMON

    _read_prec_or_width->___wmul
    _efgtoa->___flmul
    _efgtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->__Umul8_16
    ___flge->___flmul
    _rtc_read_byte->_rtc_send
    _LCD_String->_LCD_Data
    _LCD_Init->_LCD_Cmd

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _efgtoa->_floorf
    _pad->_fputs
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                18    18      0   21311
                                             67 BANK0      2     2      0
                                             52 BANK1     16    16      0
                            _LCD_Cmd
                           _LCD_Data
                           _LCD_Init
                         _LCD_String
                              _convd
                             _convup
                            _rtc_int
                      _rtc_read_byte
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             19    16      3   20801
                                             53 BANK0     14    14      0
                                             49 BANK1      3     0      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     2      2   20489
                                             51 BANK0      2     2      0
                                             47 BANK1      2     0      2
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           12    10      2   20173
                                             42 BANK0      9     9      0
                                             45 BANK1      2     0      2
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   6     4      2     533
                                              6 COMMON     6     4      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     244
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              55    50      5   18260
                                             33 BANK0      9     4      5
                                              0 BANK1     45    45      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               3     2      1     291
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     4      3    2260
                                             11 COMMON     3     0      3
                                              4 BANK0      4     4      0
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     6      1     888
                                              8 COMMON     3     2      1
                                              0 BANK0      4     4      0
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     682
                                              0 COMMON     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _memcpy                                               7     4      3     328
                                              0 COMMON     7     4      3
 ---------------------------------------------------------------------------------
 (5) _labs                                                 4     0      4     294
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             13 BANK0     20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       16    12      4     287
                                              0 COMMON    10     6      4
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     457
                                              0 COMMON    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2637
                                             21 BANK0      8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    2288
                                              0 COMMON    12     4      8
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             26    18      8    3177
                                              9 COMMON     5     5      0
                                              0 BANK0     21    13      8
                          __Umul8_16
 ---------------------------------------------------------------------------------
 (6) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     942
                                             21 BANK0     12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             26    18      8    1881
                                              0 COMMON    13     5      8
                                              0 BANK0     13    13      0
 ---------------------------------------------------------------------------------
 (1) _rtc_read_byte                                        2     2      0      67
                                              1 COMMON     2     2      0
                            _rtc_nak
                           _rtc_read
                            _rtc_res
                           _rtc_send
                           _rtc_stop
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_stop                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_send                                             1     1      0      22
                                              0 COMMON     1     1      0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_res                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_read                                             0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _rtc_nak                                              0     0      0       0
                           _waitmssp
 ---------------------------------------------------------------------------------
 (2) _waitmssp                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rtc_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _convup                                               2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _convd                                                1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LCD_String                                           2     0      2     241
                                              3 COMMON     2     0      2
                           _LCD_Data
 ---------------------------------------------------------------------------------
 (2) _LCD_Data                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             0     0      0      44
                            _LCD_Cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_Cmd                                              3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Cmd
   _LCD_Data
   _LCD_Init
     _LCD_Cmd
   _LCD_String
     _LCD_Data
   _convd
   _convup
   _rtc_int
   _rtc_read_byte
     _rtc_nak
       _waitmssp
     _rtc_read
       _waitmssp
     _rtc_res
       _waitmssp
     _rtc_send
       _waitmssp
     _rtc_stop
       _waitmssp
     _waitmssp
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _efgtoa
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               __Umul8_16
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _labs
           _memcpy
           _pad
             _fputc
               _putch
             _fputs
               _fputc
           _strcpy
         _fputc
         _read_prec_or_width
           ___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      FB       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     45      4D       5       96.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     44      50       7      100.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0      50       9       83.3%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      FB      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 19 03:24:43 2023

              ___fldiv@aexp 002C                ___fldiv@bexp 002B                           pc 0002  
              ___fldiv@sign 0024                          l61 118D                          l64 11BC  
                        l73 10BC                          l81 1F41                          l82 1F42  
                        l67 1FFF                          l76 1FC5                          l85 1F94  
                        l94 1F89                          l79 1F3B                          l88 1F9A  
                        l97 11BE                          l98 11CC                          fsr 0004  
       ___wmul@multiplicand 0072                 ?_LCD_String 0073         __Umul8_16@word_mpld 0076  
                       l101 11F4                         l110 1F53                         l122 102C  
                       l107 1F5C                         l116 1F66                         l119 1F7D  
                       l216 107E                         l402 00E2                         l410 1366  
                       l218 1096                         l420 1366                         l406 1F71  
                       l521 0B35                         l417 1351                         l530 0CBA  
                       l523 0B0C                         l613 0FFF                         l517 0AB2  
                       l542 0C2A                         l710 003E                         l391 1242  
                       l632 10F7                         l560 0CBA                         l385 1211  
                       l721 07E1                         l386 122D                         l394 005D  
                       l634 1109                         l538 0C04                         l706 000E  
                       l619 0F6F                         l563 1071                         l548 0C4C  
                       l573 08D8                         l397 00C9                         l813 13B4  
                       l814 1475                         l718 14F7                         l575 0A56  
                       l807 0881                         l737 0338                         l818 146D  
                       l834 10E2                         l770 12F0                         l595 0A42  
                       l747 05DF                         l828 1FAF                         l589 09D0  
                       l846 1298                         l854 1133                         l790 16B1  
                       l863 1FE0                         l679 104D                         l857 0004  
                       l797 115E                         _PEN 048A                         _SEN 0488  
                       _day 00EC                         _pad 0005                         _min 00EE  
                       _sec 00EF                         fsr0 0004                         indf 0000  
              ___flmul@aexp 002D                ___flmul@bexp 002E                ___flmul@sign 0028  
              ___flmul@temp 0033                ___flmul@prod 002F                 LCD_Cmd@data 0072  
           __end_of_LCD_Cmd 118E                ___fltol@exp1 0079                        l2201 0A57  
                      l3001 036C                        l2211 0A6A                        l2203 0A5A  
                      l3011 04B2                        l3003 0375                        l2301 0B3E  
                      l2221 0A82                        l2213 0A6F                        l2205 0A60  
                      l3101 07D4                        l3021 051D                        l3013 04E9  
                      l3005 0457                        l2311 0B66                        l2231 0A94  
                      l2223 0A85                        l2215 0A77                        l2207 0A64  
                      l3031 05D9                        l3023 053E                        l3015 04F4  
                      l3007 045D                        l3111 12BF                        l3201 1165  
                      l3121 1F3B                        l2401 10E4                        l2321 0B81  
                      l2313 0B6F                        l2305 0B47                        l2241 0AA8  
                      l2233 0A95                        l2225 0A8B                        l2217 0A78  
                      l2209 0A65                        l3041 064B                        l3033 05ED  
                      l3025 058C                        l3017 050F                        l3009 0473  
                      l3113 12D4                        l3105 129A                        l3211 1173  
                      l3203 1166                        l2411 1105                        l2403 10E6  
                      l2331 0BE2                        l2315 0B71                        l2307 0B5E  
                      l2323 0B86                        l2251 0AC2                        l2235 0A9A  
                      l2243 0AAA                        l2227 0A8C                        l2219 0A7A  
                      l3051 0676                        l3043 0661                        l3035 05EE  
                      l3027 0594                        l3019 0515                        l3115 12DB  
                      l3107 129C                        l3131 15BA                        l3123 1592  
                      l3221 118A                        l3213 117F                        l3205 1167  
                      l3301 11D2                        l2405 10ED                        l2333 0BE7  
                      l2325 0B9C                        l2317 0B75                        l2309 0B62  
                      l2261 0ACC                        l2253 0AC4                        l2245 0AB8  
                      l2237 0A9F                        l2229 0A90                        l2501 1336  
                      l2421 1126                        l3061 0691                        l3053 067C  
                      l3045 0667                        l3037 05F0                        l3029 05D3  
                      l3117 12EC                        l3109 12AB                        l3141 15F0  
                      l3133 15CA                        l3125 15A3                        l3215 1180  
                      l3207 1168                        l3231 1197                        l3223 118F  
                      l3311 11EE                        l3303 11D8                        l2407 10F1  
                      l2351 0C31                        l2343 0C1A                        l2327 0BDC  
                      l2335 0BF6                        l2319 0B76                        l2271 0AD6  
                      l2263 0ACE                        l2255 0AC6                        l2247 0ABC  
                      l2239 0AA7                        l2511 1356                        l2503 133F  
                      l2191 124D                        l2415 110D                        l3071 06B0  
                      l3063 0697                        l3055 0682                        l3047 066C  
                      l3039 05F3                        l2431 108C                        l2423 1072  
                      l3143 15F5                        l3151 160D                        l3135 15D0  
                      l3127 15A9                        l3217 1181                        l3209 1170  
                      l3241 11B0                        l3233 119F                        l3225 1194  
                      l3305 11DD                        l2601 097F                        l2521 0882  
                      l2441 1225                        l2409 1100                        l2361 0C3F  
                      l2353 0C33                        l2345 0C25                        l2337 0C0C  
                      l2329 0BE0                        l2281 0ADF                        l2273 0AD8  
                      l2265 0AD0                        l2257 0AC8                        l2249 0AC0  
                      l2513 135B                        l2193 1254                        l2417 1110  
                      l3073 06B6                        l3057 0685                        l3049 0670  
                      l3065 069D                        l3081 0753                        l2433 1092  
                      l2425 1074                        l3161 165A                        l3153 161A  
                      l3145 15F8                        l3137 15DE                        l3129 15B4  
                      l3401 179C                        l3219 1182                        l3243 11B1  
                      l3235 11A2                        l3227 1195                        l3315 1F73  
                      l3251 1F54                        l3307 11E3                        l2611 099C  
                      l2603 0983                        l2531 0895                        l2523 0887  
                      l2443 123F                        l2451 0055                        l2371 0C56  
                      l2363 0C43                        l2355 0C38                        l2347 0C29  
                      l2339 0C11                        l2291 0B1F                        l2283 0AF6  
                      l2275 0ADA                        l2267 0AD2                        l2259 0ACA  
                      l2515 104E                        l2195 1263                        l2187 1243  
                      l2419 111E                        l3091 079E                        l3083 0769  
                      l3075 0728                        l3067 06A3                        l3059 068B  
                      l2427 1078                        l3163 1664                        l3155 1632  
                      l3171 168E                        l3139 15E7                        l3331 1044  
                      l3323 1030                        l3411 17D6                        l3403 17A9  
                      l3245 11B9                        l3237 11AE                        l3229 1196  
                      l3253 1F57                        l3309 11E9                        l2621 09B4  
                      l2613 09A0                        l2605 0989                        l2541 08AD  
                      l2533 089A                        l2525 088B                        l2445 1241  
                      l2437 11F5                        l2461 00A5                        l2453 0071  
                      l2701 0D07                        l2381 0C91                        l2373 0C64  
                      l2365 0C49                        l2349 0C2E                        l2357 0C3A  
                      l2293 0B20                        l2285 0B10                        l2277 0ADC  
                      l2269 0AD4                        l2517 1052                        l2509 1346  
                      l2197 1281                        l2189 1248                        l3093 07A8  
                      l3085 0778                        l3077 0747                        l3069 06AA  
                      l2429 1085                        l3149 15FA                        l3325 1034  
                      l3413 17DC                        l3405 17B6                        l3239 11AF  
                      l3319 1029                        l3255 1F7E                        l3263 1F4B  
                      l3247 1F8B                        l2631 09D5                        l2623 09B5  
                      l2615 09A1                        l2607 0991                        l2551 08C0  
                      l2543 08B2                        l2535 08A2                        l2527 088F  
                      l2439 1209                        l2463 00DF                        l2455 0079  
                      l2711 0D22                        l2703 0D0F                        l2471 1F6F  
                      l2391 0CA8                        l2383 0C96                        l2375 0C68  
                      l2359 0C3E                        l2295 0B2B                        l2287 0B19  
                      l2279 0ADE                        l3095 07BD                        l3087 077E  
                      l3079 074D                        l3511 1652                        l3159 164A  
                      l3175 1698                        l3271 1137                        l3327 1036  
                      l3415 17E9                        l3407 17BC                        l3281 1FE1  
                      l3257 1F81                        l3265 1F4E                        l3249 1F8F  
                      l2633 09DA                        l2641 0A0B                        l2625 09B9  
                      l2617 09AA                        l2609 0993                        l2561 08E0  
                      l2553 08C5                        l2545 08B6                        l2537 08A3  
                      l2529 0890                        l2465 00E1                        l2457 007D  
                      l2449 003F                        l2801 0FEE                        l2721 0D9E  
                      l2713 0D30                        l2705 0D14                        l2473 1F71  
                      l2393 0CAA                        l2385 0C9E                        l2377 0C88  
                      l2369 0C51                        l2289 0B1B                        l2297 0B2F  
                      l3097 07C2                        l3089 0783                        l3513 1689  
                      l3169 167B                        l3273 113E                        l3329 1038  
                      l3417 17F6                        l3409 17C9                        l3361 16C8  
                      l3353 16B2                        l3283 1097                        l3291 1FB0  
                      l3267 1F5D                        l3259 1F86                        l2651 0A41  
                      l2643 0A18                        l2635 09E8                        l2627 09CD  
                      l2619 09B0                        l2571 08FE                        l2563 08EC  
                      l2555 08CD                        l2547 08BA                        l2539 08A5  
                      l2459 00A1                        l2803 0FF3                        l2731 0E0A  
                      l2723 0DBA                        l2715 0D3D                        l2707 0D19  
                      l2395 0CAE                        l2387 0CA3                        l2379 0C8C  
                      l2299 0B39                        l2491 1321                        l2483 1303  
                      l2811 000C                        l3099 07CE                        l3275 114C  
                      l3371 16F5                        l3363 16D1                        l3355 16B5  
                      l3285 1098                        l3293 1FBD                        l3269 1F61  
                      l2653 0A46                        l2645 0A26                        l2637 09EC  
                      l2581 0929                        l2565 08F0                        l2557 08CE  
                      l2549 08BB                        l2805 0FF7                        l2741 0E94  
                      l2733 0E18                        l2725 0DD6                        l2717 0D58  
                      l2469 1F67                        l2397 0CB5                        l2389 0CA4  
                      l2493 1325                        l2485 1316                        l2477 12F1  
                      l2821 0803                        l2813 0011                        l2901 1492  
                      l3509 1602                        l3277 115A                        l3381 1727  
                      l3373 16FE                        l3365 16DA                        l3357 16BA  
                      l3199 1160                        l3287 10A6                        l3295 11BE  
                      l2655 0A4A                        l2647 0A35                        l2639 0A05  
                      l2591 094E                        l2583 0931                        l2575 0907  
                      l2559 08D0                        l2751 0F24                        l2743 0EA2  
                      l2735 0E35                        l2727 0DDF                        l2719 0D74  
                      l2671 0CC4                        l2399 0CB9                        l2487 1317  
                      l2479 12FA                        l2831 0850                        l2823 0815  
                      l2815 001E                        l2911 14E4                        l2903 14B9  
                      l3391 1770                        l3383 172D                        l3375 1707  
                      l3367 16E3                        l3359 16BF                        l3289 10AC  
                      l3297 11C3                        l2657 0A4C                        l2649 0A39  
                      l2593 094F                        l2585 0933                        l2577 0919  
                      l2569 08F9                        l2761 0F49                        l2753 0F32  
                      l2745 0ECD                        l2737 0E4C                        l2729 0DED  
                      l2681 0CDB                        l2673 0CC8                        l2489 131F  
                      l2841 087D                        l2825 082C                        l2817 0026  
                      l2809 0008                        l2921 150C                        l2913 14E9  
                      l2905 14BD                        l3393 1776                        l3385 1746  
                      l3377 170D                        l3369 16EC                        l3299 11C7  
                      l2659 0A50                        l2587 0938                        l2595 0958  
                      l2579 0921                        l2771 0F6C                        l2755 0F3B  
                      l2763 0F4F                        l2747 0EF3                        l2739 0E69  
                      l2691 0CF2                        l2683 0CDD                        l2675 0CC9  
                      l2667 0CBB                        l2499 132D                        l2827 0832  
                      l2835 0855                        l2851 1F9F                        l2819 0034  
                      l2923 1513                        l2915 14EE                        l2907 14D4  
                      l3395 1783                        l3387 1756                        l3379 171A  
                      l2597 096A                        l2589 094A                        l2781 0F8B  
                      l2765 0F53                        l2757 0F3F                        l2749 0F1B  
                      l2693 0CF3                        l2685 0CE5                        l2677 0CCE  
                      l2669 0CC0                        l2837 085B                        l2829 084B  
                      l2861 13A6                        l2853 1FA0                        l2845 1FC7  
                      l2941 157A                        l2925 1523                        l2933 1543  
                      l2917 14F3                        l2909 14D8                        l3397 1790  
                      l3389 1763                        ?_pad 007B                        l2599 096B  
                      l2791 0FD1                        l2783 0FA4                        l2775 0F74  
                      l2767 0F54                        l2759 0F40                        l2695 0CF8  
                      l2687 0CEA                        l2679 0CD3                        l2871 13E9  
                      l2863 13B3                        l2847 1FC9                        l2951 00EF  
                      l2943 1582                        l2935 155A                        l2927 152C  
                      l2919 14F9                        l3399 1796                        l2793 0FDB  
                      l2777 0F79                        l2785 0FAA                        l2769 0F58  
                      l2697 0CFD                        l2689 0CEE                        l2881 144C  
                      l2873 1402                        l2865 13BA                        l2857 1367  
                      l2849 1F9B                        l2961 01B6                        l2937 1561  
                      l2929 1534                        l2795 0FDD                        l2787 0FB7  
                      l2779 0F87                        l2699 0D05                        l2883 1465  
                      l2875 1419                        l2867 13D4                        l2859 1387  
                      l2891 10C8                        l2971 0281                        l2963 01EF  
                      l2955 0109                        l2939 1571                        l2947 00E3  
                      l2797 0FE9                        l2789 0FC2                        l2877 142A  
                      l2893 10CC                        l2981 0327                        l2965 024F  
                      l2957 0119                        l2949 00ED                        l2799 0FED  
                      l2879 1443                        l2895 10D4                        l2887 10BE  
                      l2991 0354                        l2983 0332                        l2967 025A  
                      l2975 02E0                        l2959 0158                        l2889 10C3  
                      l2993 0356                        l2985 0342                        l2969 027B  
                      l2977 0319                        l2897 1479                        l2995 035C  
                      l2987 0348                        l2979 0321                        l2899 147A  
                      l2989 034C                        l2997 0362                        l2999 0364  
                      STR_1 1010                        STR_2 1019                        STR_3 101F  
                      STR_6 1023                        u3000 135B                        u3001 135A  
                      u3010 088F                        u3011 088E                        u3020 0895  
                      u2300 0A94                        u2220 1248                        u3021 0894  
                      u2301 0A93                        u2221 1247                        u3030 089A  
                      u2310 0A9A                        u2230 124D                        u3031 0899  
                      u2311 0A99                        u2231 124C                        u3120 094E  
                      u3040 08BA                        u2320 0A9F                        u2240 1263  
                      u4000 0108                        u3121 094D                        u3105 093A  
                      u3041 08B9                        u2321 0A9E                        u2241 1262  
                      u4001 0107                        u3210 09B4                        u3050 08C0  
                      u2410 0B35                        u2330 0AB8                        u2250 1281  
                      u3211 09B3                        u3115 0943                        u3051 08BF  
                      u2411 0B34                        u2331 0AB7                        u2251 1280  
                      u4011 017B                        u3300 0A4A                        u3220 09B9  
                      u3140 096A                        u3060 08C5                        u2420 0B39  
                      u2340 0ABC                        u2260 0A64                        u4100 0348  
                      u4020 01B6                        u4012 017E                        u3301 0A49  
                      u3221 09B8                        u3205 09A3                        u3141 0969  
                      u3061 08C4                        u2501 0BB5                        u2421 0B38  
                      u2405 0B24                        u2341 0ABB                        u2261 0A63  
                      u4101 0347                        u4021 01B5                        u4013 0185  
                      u3230 09CD                        u3150 097F                        u3070 08E0  
                      u3310 0CC8                        u2510 0BC9                        u2502 0BB6  
                      u2430 0B3E                        u2350 0AF6                        u2270 0A6A  
                      u4110 034C                        u4030 01EF                        u4014 0188  
                      u3231 09CC                        u3135 0951                        u3071 08DF  
                      u3311 0CC7                        u2511 0BCA                        u2503 0BBB  
                      u2431 0B3D                        u2351 0AF5                        u2271 0A69  
                      u2255 127D                        u4111 034B                        u4031 01EE  
                      u4023 01B2                        u4015 018F                        u3240 09D4  
                      u3160 0989                        u3080 08FE                        u3320 0CCE  
                      u2600 0C43                        u2520 0BE7                        u2512 0BCF  
                      u2504 0BBC                        u2360 0AFF                        u2280 0A6F  
                      u4200 066C                        u4120 035C                        u4016 0192  
                      u3241 09D3                        u3161 0988                        u3145 0966  
                      u3081 08FD                        u3401 0D82                        u3321 0CCD  
                      u2601 0C42                        u2521 0BE6                        u2513 0BD0  
                      u2505 0BC1                        u2441 0B50                        u2361 0AFD  
                      u2281 0A6E                        u4201 066B                        u4121 035B  
                      u4041 0214                        u3250 09DA                        u3170 0991  
                      u3090 0938                        u3402 0D89                        u3330 0CD3  
                      u2610 0C49                        u2530 0C0C                        u2506 0BC2  
                      u2450 0B62                        u2442 0B57                        u2370 0B00  
                      u2290 0A8B                        u4210 0670                        u4130 0473  
                      u4050 024F                        u4042 0217                        u3251 09D9  
                      u3171 0990                        u3155 0972                        u3091 0937  
                      u3411 0DAC                        u3403 0D90                        u3331 0CD2  
                      u2611 0C48                        u2531 0C0B                        u2451 0B61  
                      u2443 0B5E                        u2355 0AF2                        u2291 0A8A  
                      u4211 066F                        u4131 0472                        u4051 024E  
                      u4043 021E                        u4300 1F41                        u3260 09EC  
                      u3156 0973                        u3500 0ED9                        u3412 0DB3  
                      u3340 0CF2                        u2700 0CA8                        u2620 0C50  
                      u2540 0C11                        u2460 0B66                        u2380 0B10  
                      u4220 06A3                        u4140 04E9                        u4044 0221  
                      u4301 1F40                        u3261 09EB                        u3157 0978  
                      u3421 0DC8                        u3413 0DBA                        u3341 0CF1  
                      u2701 0CA7                        u2621 0C4F                        u2541 0C10  
                      u2461 0B65                        u2381 0B0F                        u4221 06A2  
                      u4141 04E8                        u4061 02A4                        u4053 024B  
                      u4045 0228                        u3270 09FB                        u3190 09A0  
                      u3158 0979                        u3422 0DCF                        u3350 0CF8  
                      u2710 0CB9                        u2630 0C56                        u2470 0B75  
                      u2390 0B1F                        u4230 0769                        u4150 050F  
                      u4070 02DF                        u4062 02A7                        u4046 022B  
                      u4310 15A3                        u3191 099F                        u3159 097E  
                      u3511 0EE5                        u3423 0DD6                        u3351 0CF7  
                      u2711 0CB8                        u2631 0C55                        u2471 0B74  
                      u2391 0B1E                        u4231 0768                        u4151 050E  
                      u4135 046F                        u4071 02DE                        u4063 02AE  
                      u4311 15A2                        u3280 0A18                        u2800 1209  
                      u2720 10F1                        u3600 0F6C                        u3520 0F01  
                      u3512 0EEC                        u3360 0CFD                        u2640 0C68  
                      u2560 0C29                        u4240 0778                        u4160 0515  
                      u4080 0319                        u4064 02B1                        u4320 15CA  
                      u3281 0A17                        u3185 0995                        u2801 1208  
                      u2721 10F0                        u3601 0F6B                        u3513 0EF3  
                      u3505 0ED4                        u3441 0DFC                        u3361 0CFC  
                      u2641 0C67                        u2561 0C28                        u4241 0777  
                      u4161 0514                        u4081 0318                        u4073 02DB  
                      u4065 02B8                        u4321 15C9                        u4410 11D2  
                      u3290 0A35                        u2810 1225                        u3610 0F73  
                      u3442 0E03                        u3370 0D14                        u2650 0C79  
                      u2570 0C2E                        u2490 0B9C                        u4250 07AE  
                      u4170 058C                        u4090 0327                        u4066 02BB  
                      u4330 1619                        u4411 11D1                        u3291 0A34  
                      u3275 09F6                        u2811 1224                        u3611 0F72  
                      u3531 0F0D                        u3451 0E27                        u3443 0E0A  
                      u3435 0DD8                        u3371 0D13                        u2571 0C2D  
                      u2555 0C1E                        u2491 0B9B                        u4251 07AC  
                      u4235 0765                        u4171 058B                        u4091 0326  
                      u4331 1618                        u4404 1FBD                        u2820 123F  
                      u2740 1105                        u3620 0F79                        u3532 0F14  
                      u3452 0E2E                        u3380 0D19                        u2900 1F6F  
                      u2660 0C88                        u2580 0C38                        u3700 0823  
                      u4260 07AF                        u4180 05D9                        u3285 0A14  
                      u2821 123E                        u2741 1104                        u3621 0F78  
                      u3533 0F1B                        u3525 0EFC                        u3453 0E35  
                      u3381 0D18                        u2901 1F6E                        u2661 0C87  
                      u2581 0C37                        u2493 0B98                        u2485 0B7A  
                      u4245 0774                        u4181 05D8                        u2830 0055  
                      u3630 0F8B                        u2670 0C91                        u2590 0C3E  
                      u2910 12FA                        u3710 0832                        u2750 1133  
                      u4270 07C2                        u4190 064B                        u3295 0A31  
                      u2831 0054                        u2735 10F8                        u3631 0F8A  
                      u3471 0E5B                        u3391 0D66                        u2671 0C90  
                      u2655 0C74                        u2591 0C3D                        u2911 12F9  
                      u3711 0831                        u2751 1132                        u4271 07C1  
                      u4191 064A                        u4360 1F9A                        u2840 0071  
                      u3640 0F9A                        u3560 0F3F                        u3472 0E62  
                      u3392 0D6D                        u2680 0C96                        u2920 1311  
                      u3720 0840                        u3800 1395                        u2760 1078  
                      u4280 12AB                        u4345 1176                        u4425 1F76  
                      u4361 1F99                        u2825 123B                        u2841 0070  
                      u3561 0F3E                        u3545 0F1D                        u3481 0E86  
                      u3473 0E69                        u3465 0E37                        u3393 0D74  
                      u2681 0C95                        u3705 081E                        u2761 1077  
                      u4281 12AA                        u2850 007D                        u3650 0FB7  
                      u3482 0E8D                        u2690 0CA3                        u2930 1325  
                      u3730 084B                        u3810 13B3                        u4290 12EC  
                      u4370 115A                        u4355 11A5                        u2851 007C  
                      u3651 0FB6                        u3555 0F34                        u3491 0EB1  
                      u3483 0E94                        u2691 0CA2                        u2931 1324  
                      u3731 084A                        u3811 13B2                        u4195 0647  
                      u4291 12EB                        u4371 1159                        u4380 10BC  
                      u3660 0FD1                        u3580 0F53                        u3492 0EB8  
                      u2940 132C                        u3740 085B                        u3900 145A  
                      u3820 13BA                        u4437 119B                        u4381 10BB  
                      u2861 008C                        u3661 0FD0                        u3645 0F95  
                      u3581 0F52                        u3493 0EBF                        u2941 132B  
                      u2925 130C                        u3741 085A                        u3725 083B  
                      u3821 13B9                        u3805 1390                        u4390 1FBA  
                      u2870 00A5                        u2862 008D                        u3670 0FED  
                      u3590 0F58                        u3750 0869                        u3910 1465  
                      u3830 13CA                        u2790 1092                        u4447 11B5  
                      u4391 1FB6                        u2871 00A4                        u2863 0092  
                      u3671 0FEC                        u3655 0FB3                        u3591 0F57  
                      u3575 0F42                        u3911 1464                        u3815 13AF  
                      u2791 1091                        u2775 107F                        u2864 0093  
                      u2960 133E                        u3760 0875                        u3840 13E8  
                      u3920 10E2                        u3680 000C                        u4457 116C  
                      u2881 00B4                        u2865 0098                        u3665 0FCD  
                      u2961 133D                        u3761 0873                        u3905 1455  
                      u3841 13E7                        u3921 10E1                        u3681 000B  
                      u2785 1086                        u2890 00DF                        u2882 00B5  
                      u2866 0099                        u2970 1345                        u3770 0876  
                      u3850 13F7                        u3690 0034                        u3930 14B9  
                      u4467 1186                        u2891 00DE                        u2883 00BA  
                      u2971 1344                        u2955 132E                        u3755 0864  
                      u3835 13C5                        u3691 0033                        u3931 14B8  
                      u2884 00BB                        u3860 1402                        u3780 1FE0  
                      u3940 14E9                        _RCEN 048B                        u2885 00C0  
                      u3861 1401                        u3781 1FDF                        u3941 14E8  
                      u2886 00C1                        u2990 1356                        u3790 1F9F  
                      u3950 14EE                        u2895 00DB                        u2991 1355  
                      u3871 140B                        u3855 13F2                        u3791 1F9E  
                      u3695 0030                        u3951 14ED                        u3880 1438  
                      u3872 1412                        u3960 150C                        u2985 1348  
                      u3873 1419                        u3961 150B                        u3890 1443  
                      u3970 1513                        u3891 1442                        u3971 1512  
                      u3980 155A                        u3885 1433                        u3981 1557  
                      u3990 1561                        u3991 1560                        _RSEN 0489  
                      _date 00EB                        _dbuf 0190                        _labs 1F9B  
                      _main 16B2                        _hour 00ED                        _prec 006B  
                      _year 00E9                        pad@i 0025                        pad@p 007C  
                      btemp 007E               ___fpclassifyf 0803                        start 0000  
           ___fldiv@new_exp 0025                       ??_pad 0024            __end_of_LCD_Data 11BD  
          __end_of_LCD_Init 2000                LCD_Data@data 0072             ??_rtc_read_byte 0071  
             ___fltol@sign1 0078                       ?_labs 0070             __end_of___fladd 0CBB  
                     ?_main 0070                       _ACKEN 048C                       _ACKDT 048D  
           __end_of___fldiv 0A57             __end_of___flneg 1F72             __end_of___flmul 1000  
           __end_of___flsub 1072             __end_of___fltol 1367                vfpfcnvrt@fmt 00CD  
                     _PORTB 0006                       _TRISB 0086                       _SSPIF 0063  
               LCD_String@s 0073                       _flags 00E8                       _convd 1028  
       read_prec_or_width@c 0078         read_prec_or_width@n 0079                       _fputc 1243  
                     _fputs 110A                       _month 00EA                       labs@a 0070  
                     pad@fp 0027                       _width 0069                       _putch 0004  
                     pclath 000A             __end_of_rtc_nak 1F67             __end_of_rtc_int 1FC6  
           __end_of_rtc_res 1F54                       status 0003                       wtemp0 007E  
           __end_of_sprintf 104E              ?___fpclassifyf 0070             __initialization 07E2  
              __end_of_labs 1FB0                __end_of_main 1800                      ??_labs 0074  
                    ??_main 0063                   ??_LCD_Cmd 0070  __end_of_read_prec_or_width 12F1  
                    ?_convd 0070                      ?_fputc 0070                      ?_fputs 0078  
                    ?_putch 0070                      _SSPADD 0093                      _TRISC3 043B  
                    _TRISC4 043C                      _SSPCON 0014                      _SSPBUF 0013  
              vfprintf@cfmt 0054                      ___flge 003F                      ___fleq 11F5  
                 ??___fladd 0020                      ___wmul 1072                   ??___fldiv 0078  
                 ??___flneg 0074                   ??___flmul 0079                   ??___flsub 007E  
                 ??___fltol 0074                      _efgtoa 1476                      _convup 1F72  
                    _floorf 1367                      _memcpy 10BD        read_prec_or_width@ap 0076  
                    pad@buf 007B                      _strcpy 1FC6                      fputc@c 0070  
                    fputs@c 0020                      fputs@i 0021                      fputs@s 0023  
           ___fpclassifyf@e 0020             ___fpclassifyf@u 0022             ___fpclassifyf@x 0070  
          __end_of_rtc_read 1F8A            __end_of_waitmssp 1F43            __end_of_rtc_send 1F9B  
          __end_of_rtc_stop 1F5D                   ??_rtc_nak 0070                   ??_rtc_int 0070  
                 ??_rtc_res 0070                      putch@c 0070            __end_of_vfprintf 115F  
                 ??_sprintf 0055                  ___flge@ff1 0035                  ___flge@ff2 0039  
           ??___fpclassifyf 0074                  ___fleq@ff1 0070                  ___fleq@ff2 0074  
                 ?_LCD_Data 0070     __end_of__initialization 07FC                   ?_LCD_Init 0070  
                ___flneg@f1 0070                  ___fltol@f1 0070              __pcstackCOMMON 0070  
             __end_of_convd 102D               __end_of_fputc 1299               __end_of_fputs 1134  
             __end_of_putch 0005                ??_LCD_String 0075                     ??_convd 0070  
                   ??_fputc 0073                     ??_fputs 0079                     ??_putch 0070  
                __pbssBANK0 0065                  __pbssBANK1 00E4                  __pbssBANK3 0190  
                ??_LCD_Data 0070                  ??_LCD_Init 0073          __end_of_LCD_String 10BD  
         __end_of__Umul8_16 110A                  _efgtoa$714 00A6                  __pmaintext 16B2  
                   ?___flge 0035                     ?___fleq 0070                     ?___wmul 0070  
                   ?_efgtoa 0041                     ?_convup 0070                     ?_floorf 002D  
                   ?_memcpy 0070                     _ACKSTAT 048E                     ?_strcpy 0070  
                   _LCD_Cmd 115F                  __stringtab 1000                   ?_rtc_read 0070  
                 ?_waitmssp 0070                   ?_rtc_send 0070                     ___fladd 0A57  
                   ___fldiv 0882                   ?_rtc_stop 0070                     ___flneg 1F67  
                   ___flmul 0CBB                     ___flsub 104E                     ___fltol 12F1  
                 ?_vfprintf 00CF                     __ptext1 102D                     __ptext2 1134  
                   __ptext3 158F                     __ptext4 1299                     __ptext5 1072  
                   __ptext6 1476                     __ptext7 1FC6                     __ptext8 0005  
                   __ptext9 110A       __end_of_rtc_read_byte 11F5       read_prec_or_width@fmt 007B  
                   efgtoa@c 0045                     efgtoa@d 00AB                     efgtoa@e 00B0  
                   efgtoa@f 0041                     efgtoa@g 00C5                     efgtoa@h 00BA  
                   efgtoa@i 00B8                     efgtoa@l 00BE                     efgtoa@m 00AD  
                   efgtoa@n 00C3                     efgtoa@p 00A2                     efgtoa@t 00A4  
                   efgtoa@u 00C9                     efgtoa@w 00B2                     _rtc_nak 1F5D  
                   _rtc_int 1FB0                     _rtc_res 1F4B                     _sprintf 102D  
                   clrloop0 1F44        end_of_initialization 07FC                     floorf@e 003B  
                   floorf@m 0037                     floorf@u 003D                     floorf@x 002D  
                   memcpy@d 0075                     memcpy@n 0071                     memcpy@s 0076  
                   fputc@fp 0072                     fputs@fp 0078          _read_prec_or_width 1299  
         __end_of_vfpfcnvrt 16B2                  efgtoa@mode 00A9                  efgtoa@sign 00C2  
                ??_rtc_read 0070         ?_read_prec_or_width 0076                     psplit$0 110033  
                ??_waitmssp 0070                  ??_rtc_send 0070                  ??_rtc_stop 0070  
          vfpfcnvrt@convarg 004C                  ??_vfprintf 007E                     strcpy@d 0071  
                 _PORTBbits 0006            rtc_read_byte@rec 0072                 ___fladd@grs 007B  
      ??_read_prec_or_width 0078                 ___fldiv@grs 0027                 ___fldiv@rem 0020  
               ___flmul@grs 0029              __end_of___flge 00E3              __end_of___fleq 1243  
               vfpfcnvrt@ap 00CE                 vfpfcnvrt@cp 0052                 vfpfcnvrt@fp 0050  
            __end_of___wmul 1097              __end_of_efgtoa 07E2              __end_of_convup 1F7E  
            __end_of_floorf 1476              __end_of_memcpy 10E3                  floorf@F521 00E4  
            __end_of_strcpy 1FE1         start_initialization 07E2                 __end_of_pad 003F  
         pnum$text6_split_1 0033       __end_of___fpclassifyf 0882                 vfprintf@fmt 00CF  
                  ??___flge 003D                    ??___fleq 0078                    ??___wmul 0074  
                  ??_efgtoa 0046                   __Umul8_16 10E3                    ??_convup 0070  
                  ??_floorf 0031                    ??_memcpy 0073                    ??_strcpy 0071  
                 ___fladd@a 0074                   ___fladd@b 0070                    ?_LCD_Cmd 0070  
                 ___fldiv@a 0070                   ___fldiv@b 0074                   ___flmul@a 0024  
                 ___flmul@b 0020                   ___flsub@a 0035                   ___flsub@b 0039  
                 ___latbits 0002               __pcstackBANK0 0020               __pcstackBANK1 00A0  
                  ?___fladd 0070                    ?___fldiv 0070                    ?___flneg 0070  
                  ?___flmul 0020                    ?___flsub 0035                    ?___fltol 0070  
                ?__Umul8_16 0070                   __pstrings 1000                    ?_rtc_nak 0070  
                  ?_rtc_int 0070                    ?_rtc_res 0070                    ?_sprintf 00D1  
                  _LCD_Data 118E                    _LCD_Init 1FE1              ___wmul@product 0074  
                 clear_ram0 1F43                   _vfpfcnvrt 158F                 __stringbase 100F  
         ___wmul@multiplier 0070                  vfpfcnvrt@c 0051                   convup@bcd 0071  
                 memcpy@tmp 0073                  vfprintf@ap 00D0                  vfprintf@fp 0053  
               ??__Umul8_16 0072                  ?_vfpfcnvrt 00CD          __end_of__stringtab 1010  
        ___fpclassifyf@F465 0065                  sprintf@fmt 00D1                    __ptext10 1243  
                  __ptext11 0004                    __ptext20 0CBB                    __ptext12 10BD  
                  __ptext21 10E3                    __ptext13 1F9B                    __ptext30 1F5D  
                  __ptext22 003F                    __ptext14 1367                    __ptext31 1F3B  
                  __ptext23 11F5                    __ptext15 0803                    __ptext32 1FB0  
                  __ptext24 0882                    __ptext16 12F1                    __ptext33 1F72  
                  __ptext25 11BD                    __ptext17 104E                    __ptext34 1028  
                  __ptext26 1F54                    __ptext18 0A57                    __ptext35 1097  
                  __ptext27 1F8A                    __ptext19 1F67                    __ptext36 118E  
                  __ptext28 1F4B                    __ptext37 1FE1                    __ptext29 1F7E  
                  __ptext38 115F                  strcpy@dest 0072                   pnum$text6 0011  
                  efgtoa@fp 00AF                    efgtoa@ne 00A0                    efgtoa@pp 00A8  
                  efgtoa@ou 00B4                    _rtc_read 1F7E                    _waitmssp 1F3B  
                  _rtc_send 1F8A                    _rtc_stop 1F54                    _vfprintf 1134  
                  main@Temp 00D4                   rtc_send@a 0070                    convd@bcd 0070  
                _LCD_String 1097               _rtc_read_byte 11BD                    memcpy@d1 0074  
                  memcpy@s1 0070                   sprintf@ap 0057                   strcpy@src 0070  
                 stringcode 100A                 efgtoa@nmode 00AA                 ??_vfpfcnvrt 004A  
    __Umul8_16@multiplicand 0070                    sprintf@f 0058                    sprintf@s 0056  
            ?_rtc_read_byte 0070                    stringdir 100A                    stringtab 1000  
             ___fladd@signs 0078           rtc_read_byte@addr 0071                ___fladd@aexp 0079  
              ___fladd@bexp 007A        __Umul8_16@multiplier 0078           __Umul8_16@product 0074  
